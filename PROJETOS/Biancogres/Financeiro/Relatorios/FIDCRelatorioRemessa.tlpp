#include "totvs.ch"
#include "dbstruct.ch"

/*/{Protheus.doc} FIDC
@author Marinaldo de Jesus
@since 08/03/2021
@project FIDC
@version 1.0
@description Function para Impressao do Relatorio (Excel) Remessa FIDC
@type function
/*/
function u_FIDCRemRel()
    return(u_FIDCRelatorioRemessa())

/*/{Protheus.doc} FIDC
@author Marinaldo de Jesus
@since 02/03/2021
@project FIDC
@version 1.0
@description Procedure para Impressao do Relatorio (Excel) Remessa FIDC
@type procedure
/*/
procedure u_FIDCRelatorioRemessa()

	local aArea				as array
	local aParamRet			as array

	local bAction			as block

	local lParamBox			as logical

	local otMultProcess		as object

    private cCadastro as character
    cCadastro:=OemToAnsi("Relatorio Remessa FIDC")

    aArea:=getArea()

	begin sequence

        lParamBox:=FIDCRemessaParameters(@aParamRet)
        if (!lParamBox)
            break
        endif

		bAction:={||FIDCRelatorioRemessa(otMultProcess,aParamRet)}
		otMultProcess:=tMultProcess():New(bAction,&("cCadastro"),OemToAnsi("Aguarde. Gerando Relatorio..."),nil,2)
		otMultProcess:Activate()

    end sequence

	restArea(aArea)

    return

static procedure FIDCRelatorioRemessa(otMultProcess as object,aParamRet as array)
    EvalBlock():EvalBlock({||FIDCRelatorioRemessaQuery(otMultProcess,aParamRet)},nil,.T.)
    return

static procedure FIDCRelatorioRemessaQuery(otMultProcess as object,aParamRet as array)

    local aBCOIsFIDC    as array
    local aFWTTables    as array

    local bTTimer       as block
    local bMsAguarde    as block

    local cTmpAlias     as character

    local cXMLPath      as character
    local cXMLFile      as character
    local cExcelTitle   as character

    local cServerIP     as character
    local cEnvServer    as character

    local lDev          as logical
    local lPicture      as logical
    local lX3Titulo     as logical
    local ltxtEditMemo  as logical

    local nBCO          as numeric
    local nBCOs         as numeric

    local nTable        as numeric    
    local nTables       as numeric

    local nSA6RecNo     as numeric
    
    local nIncRegua     as numeric

    local oTTimer       as object

    aBCOIsFIDC:=FIDC():retbcoFIDC()

    nBCOs:=len(aBCOIsFIDC)

    otMultProcess:SetRegua(1,nBCOs)

    for nBCO:=1 to nBCOs
    
        otMultProcess:IncRegua(1,"Obtendo dados no SGBD. Aguarde...")

        if (!(aBCOIsFIDC[nBCO][1]==&("cEmpAnt")))
            loop
        endif

        if (!(aBCOIsFIDC[nBCO][2]==&("cFilAnt")))
            loop
        endif

        nSA6RecNo:=aBCOIsFIDC[nBCO][6]
        if (empty(nSA6RecNo))
            loop
        endif

        SA6->(MsGoTo(nSA6RecNo))

        otMultProcess:SetRegua(1,0)
        otMultProcess:SetRegua(2,0)

        bTTimer:={||otMultProcess:IncRegua(1,"Obtendo dados no SGBD. Aguarde..."),otMultProcess:IncRegua(2,"Processando...")}
        Eval(bTTimer)
           
        oTTimer:=TTimer():New(1,bTTimer,getWndDefault()) 

        bMsAguarde:={||oTTimer:Activate(),cTmpAlias:=QueryView(@aParamRet,@aBCOIsFIDC[nBCO],@aFWTTables),oTTimer:Deactivate()}
        
        MsAguarde(bMsAguarde,"Obtendo dados no SGBD. Aguarde...")

        nIncRegua:=(cTmpAlias)->(RecCount())

        otMultProcess:SetRegua(1,nIncRegua)
        otMultProcess:SetRegua(2,nIncRegua)

        (cTmpAlias)->(dbGoTop())
        
        while ((cTmpAlias)->(!eof()))
            otMultProcess:IncRegua(1,"Atualizando Dados do SGBD. Aguarde...")
            otMultProcess:IncRegua(2,"Calculando Dados. Aguarde...")
            if (cTmpAlias)->(recLock(cTmpAlias,.F.))
                (cTmpAlias)->(FIDC():calculaDesconto(E1_VALOR,E1_VENCTO,E1_DATABOR))
                (cTmpAlias)->(DIAS_ANTEC:=FIDC():getFIDCVar("nDiasCalculo",0))
                (cTmpAlias)->(E1_VENCREA:=FIDC():getFIDCVar("dDataValida",E1_DATABOR))
                (cTmpAlias)->(MsUnLock())
            endif
            (cTmpAlias)->(dbSkip())
        end while

        (cTmpAlias)->(dbGoTop())

        cXMLPath:="\FIDC\XML\"
        if (dirtools():MakeDir(cXMLPath))

            cXMLFile:=A35():getXMLFile(&("cEmpAnt"),&("cFilAnt"),cXMLPath,"FIDCRelatorioRemessa","","")
            
            if (type("cCadastro")=="C")
                cExcelTitle:=&("cCadastro")
                cExcelTitle+=" :: "
            else
                cExcelTitle:=""
            endif

            cExcelTitle+="Empresa: "+&("cEmpAnt")
            cExcelTitle+=" :: "
            cExcelTitle+="Filial:  "+&("cFilAnt")
            
            cServerIP:=getServerIP()
            cEnvServer:=upper(getEnvServer())

            lDev:=((cServerIP=="192.168.20.18").or.("DEV"$cEnvServer))
            if (lDev)
                cExcelTitle+=" :: EMITIDO EM AMBIENTE DE DESENVOLVIMENTO ::"    
            endif

            lPicture:=.T.
            lX3Titulo:=.T.
            ltxtEditMemo:=.F.

            utoXML():setSX3Fields((cTmpAlias)->(dbStruct()))

            uToXML():setXMLVar("A1_COD","X3_TITULO","CODIGO")
            uToXML():setXMLVar("A1_NOME","X3_TITULO","RAZAO SOCIAL")
            uToXML():setXMLVar("E1_DATABOR","X3_TITULO","DATA REMESSA")
            uToXML():setXMLVar("P_NUM_PARC","X3_TITULO","PREFIXO+NUMERO+PARCELA")
            uToXML():setXMLVar("E1_EMISSAO","X3_TITULO","EMISSAO")
            uToXML():setXMLVar("E1_VENCTO","X3_TITULO","VENCIMENTO")
            uToXML():setXMLVar("DIAS_ANTEC","X3_TITULO","DIAS ANTECIPADOS")
            uToXML():setXMLVar("E1_VENCREA","X3_TITULO","VENC.AJUSTADO")
            uToXML():setXMLVar("E1_VALOR","X3_TITULO","VALOR")
            uToXML():setXMLVar("E1_YFDCVAL","X3_TITULO","DESAGIO")
            uToXML():setXMLVar("E1_NUMBCO","X3_TITULO","NOSSO NUMERO")

            uToXML():setXMLVar("A1_COD","X3_PICTURE","@!")
            uToXML():setXMLVar("A1_NOME","X3_PICTURE","@!")
            uToXML():setXMLVar("E1_DATABOR","X3_PICTURE","__NOTRANSFORM__")
            uToXML():setXMLVar("P_NUM_PARC","X3_PICTURE","@!")
            uToXML():setXMLVar("E1_EMISSAO","X3_PICTURE","__NOTRANSFORM__")
            uToXML():setXMLVar("E1_VENCTO","X3_PICTURE","__NOTRANSFORM__")
            uToXML():setXMLVar("DIAS_ANTEC","X3_PICTURE","@R 9999")
            uToXML():setXMLVar("E1_VENCREA","X3_PICTURE","__NOTRANSFORM__")
            uToXML():setXMLVar("E1_VALOR","X3_PICTURE","__NOTRANSFORM__")
            uToXML():setXMLVar("E1_YFDCVAL","X3_PICTURE","__NOTRANSFORM__")

            uToXML():setXMLVar("E1_VALOR","TOTAL",.T.)
            uToXML():setXMLVar("E1_YFDCVAL","TOTAL",.T.)

            otMultProcess:SetRegua(1,0)
            otMultProcess:SetRegua(2,0)

            bTTimer:={||otMultProcess:IncRegua(1,"Gerando Planilha Excel. Aguarde..."),otMultProcess:IncRegua(2,"Processando...")}
            Eval(bTTimer)
            
            oTTimer:=TTimer():New(1,bTTimer,getWndDefault()) 

            bMsAguarde:={||oTTimer:Activate(),uToXML():QryToXML(cTmpAlias,@cXMLFile,@cExcelTitle,@lPicture,@lX3Titulo,@ltxtEditMemo),oTTimer:DeActivate()}
            MsAguarde(bMsAguarde,"Gerando Planilha Excel. Aguarde...")
            
            uToXML():clearXMLVar()

        endif

        if (valtype(aFWTTables)=="A")
            nTables:=len(aFWTTables)
            for nTable:=1 to nTables
                if (valType(aFWTTables[nTable])=="O")
                    aFWTTables[nTable]:Delete()
                    aFWTTables[nTable]:=nil
                endif
            next nTable
            aSize(aFWTTables,0)
        endif

    next nBCO

    return

static function FIDCRemessaParameters(aParamRet as array) as logical

    local aArea     as array
	local aParamBox as array 

	local cFunName  as character
    local cParamTit as character

	local lParamBox	as logical

	local nPBoxAT	as numeric

    aArea:=getArea()

    saveInter()

        aParamBox:=array(0)
	    
		//01----------------------------------------------------------------------------------------------
		aAdd(aParamBox,array(9))
		nPBoxAT:=Len(aParamBox)
		aParamBox[nPBoxAT][1]:=1//[1]:1 - MsGet
		aParamBox[nPBoxAT][2]:=OemToAnsi("Cliente De")//[2]:Descricao
		aParamBox[nPBoxAT][3]:=Space(GetSx3Cache("A1_COD","X3_TAMANHO"))//[3]:String contendo o inicializador do campo
		aParamBox[nPBoxAT][4]:=""//[4]:String contendo a Picture do campo
		aParamBox[nPBoxAT][5]:="AllWaysTrue()" //[5]:String contendo a validacao
		aParamBox[nPBoxAT][6]:="SA1"//[6]:Consulta F3
		aParamBox[nPBoxAT][7]:="AllWaysTrue()"//[7]:String contendo a validacao When
		aParamBox[nPBoxAT][8]:=GetSx3Cache("A1_COD","X3_TAMANHO")//[8]:Tamanho do MsGet
		aParamBox[nPBoxAT][9]:=.F.//[9]:Flag .T./.F. Parametro Obrigatorio ?

		//02----------------------------------------------------------------------------------------------
		aAdd(aParamBox,array(9))
		nPBoxAT:=Len(aParamBox)
		aParamBox[nPBoxAT][1]:=1//[1]:1 - MsGet
		aParamBox[nPBoxAT][2]:=OemToAnsi("Cliente Ate")//[2]:Descricao
		aParamBox[nPBoxAT][3]:=Space(GetSx3Cache("A1_COD","X3_TAMANHO"))//[3]:String contendo o inicializador do campo
		aParamBox[nPBoxAT][4]:=""//[4]:String contendo a Picture do campo
		aParamBox[nPBoxAT][5]:="AllWaysTrue()" //[5]:String contendo a validacao
		aParamBox[nPBoxAT][6]:="SA1"//[6]:Consulta F3
		aParamBox[nPBoxAT][7]:="AllWaysTrue()"//[7]:String contendo a validacao When
		aParamBox[nPBoxAT][8]:=GetSx3Cache("A1_COD","X3_TAMANHO")//[8]:Tamanho do MsGet
		aParamBox[nPBoxAT][9]:=.T.//[9]:Flag .T./.F. Parametro Obrigatorio ?

		//03----------------------------------------------------------------------------------------------
		aAdd(aParamBox,array(9))
		nPBoxAT:=Len(aParamBox)
		aParamBox[nPBoxAT][1]:=1//[1]:1 - MsGet
		aParamBox[nPBoxAT][2]:=OemToAnsi("Data Bordero De")//[2]:Descricao
		aParamBox[nPBoxAT][3]:=CtoD("")//[3]:String contendo o inicializador do campo
		aParamBox[nPBoxAT][4]:="@D"//[4]:String contendo a Picture do campo
		aParamBox[nPBoxAT][5]:="AllWaysTrue()" //[5]:String contendo a validacao
		aParamBox[nPBoxAT][6]:=""//[6]:Consulta F3
		aParamBox[nPBoxAT][7]:="AllWaysTrue()"//[7]:String contendo a validacao When
		aParamBox[nPBoxAT][8]:=GetSx3Cache("E1_DATABOR","X3_TAMANHO")//[8]:Tamanho do MsGet
		aParamBox[nPBoxAT][9]:=.F.//[9]:Flag .T./.F. Parametro Obrigatorio ?

		//04----------------------------------------------------------------------------------------------
		aAdd(aParamBox,array(9))
		nPBoxAT:=Len(aParamBox)
		aParamBox[nPBoxAT][1]:=1//[1]:1 - MsGet
		aParamBox[nPBoxAT][2]:=OemToAnsi("Data Bordero Ate")//[2]:Descricao
		aParamBox[nPBoxAT][3]:=date()//[3]:String contendo o inicializador do campo
		aParamBox[nPBoxAT][4]:="@D"//[4]:String contendo a Picture do campo
		aParamBox[nPBoxAT][5]:="AllWaysTrue()" //[5]:String contendo a validacao
		aParamBox[nPBoxAT][6]:=""//[6]:Consulta F3
		aParamBox[nPBoxAT][7]:="AllWaysTrue()"//[7]:String contendo a validacao When
		aParamBox[nPBoxAT][8]:=GetSx3Cache("E1_DATABOR","X3_TAMANHO")//[8]:Tamanho do MsGet
		aParamBox[nPBoxAT][9]:=.T.//[9]:Flag .T./.F. Parametro Obrigatorio ?

		//05----------------------------------------------------------------------------------------------
		aAdd(aParamBox,array(9))
		nPBoxAT:=Len(aParamBox)
		aParamBox[nPBoxAT][1]:=1//[1]:1 - MsGet
		aParamBox[nPBoxAT][2]:=OemToAnsi("Data Emissao De")//[2]:Descricao
		aParamBox[nPBoxAT][3]:=CtoD("")//[3]:String contendo o inicializador do campo
		aParamBox[nPBoxAT][4]:="@D"//[4]:String contendo a Picture do campo
		aParamBox[nPBoxAT][5]:="AllWaysTrue()" //[5]:String contendo a validacao
		aParamBox[nPBoxAT][6]:=""//[6]:Consulta F3
		aParamBox[nPBoxAT][7]:="AllWaysTrue()"//[7]:String contendo a validacao When
		aParamBox[nPBoxAT][8]:=GetSx3Cache("E1_EMISSAO","X3_TAMANHO")//[8]:Tamanho do MsGet
		aParamBox[nPBoxAT][9]:=.F.//[9]:Flag .T./.F. Parametro Obrigatorio ?

		//06----------------------------------------------------------------------------------------------
		aAdd(aParamBox,array(9))
		nPBoxAT:=Len(aParamBox)
		aParamBox[nPBoxAT][1]:=1//[1]:1 - MsGet
		aParamBox[nPBoxAT][2]:=OemToAnsi("Data Emissao Ate")//[2]:Descricao
		aParamBox[nPBoxAT][3]:=date()//[3]:String contendo o inicializador do campo
		aParamBox[nPBoxAT][4]:="@D"//[4]:String contendo a Picture do campo
		aParamBox[nPBoxAT][5]:="AllWaysTrue()" //[5]:String contendo a validacao
		aParamBox[nPBoxAT][6]:=""//[6]:Consulta F3
		aParamBox[nPBoxAT][7]:="AllWaysTrue()"//[7]:String contendo a validacao When
		aParamBox[nPBoxAT][8]:=GetSx3Cache("E1_EMISSAO","X3_TAMANHO")//[8]:Tamanho do MsGet
		aParamBox[nPBoxAT][9]:=.T.//[9]:Flag .T./.F. Parametro Obrigatorio ?

		//07----------------------------------------------------------------------------------------------
		aAdd(aParamBox,array(9))
		nPBoxAT:=Len(aParamBox)
		aParamBox[nPBoxAT][1]:=1//[1]:1 - MsGet
		aParamBox[nPBoxAT][2]:=OemToAnsi("Data Vencimento De")//[2]:Descricao
		aParamBox[nPBoxAT][3]:=CtoD("")//[3]:String contendo o inicializador do campo
		aParamBox[nPBoxAT][4]:="@D"//[4]:String contendo a Picture do campo
		aParamBox[nPBoxAT][5]:="AllWaysTrue()" //[5]:String contendo a validacao
		aParamBox[nPBoxAT][6]:=""//[6]:Consulta F3
		aParamBox[nPBoxAT][7]:="AllWaysTrue()"//[7]:String contendo a validacao When
		aParamBox[nPBoxAT][8]:=GetSx3Cache("E1_VENCTO","X3_TAMANHO")//[8]:Tamanho do MsGet
		aParamBox[nPBoxAT][9]:=.F.//[9]:Flag .T./.F. Parametro Obrigatorio ?

		//08----------------------------------------------------------------------------------------------
		aAdd(aParamBox,array(9))
		nPBoxAT:=Len(aParamBox)
		aParamBox[nPBoxAT][1]:=1//[1]:1 - MsGet
		aParamBox[nPBoxAT][2]:=OemToAnsi("Data Vencimento Ate")//[2]:Descricao
		aParamBox[nPBoxAT][3]:=date()//[3]:String contendo o inicializador do campo
		aParamBox[nPBoxAT][4]:="@D"//[4]:String contendo a Picture do campo
		aParamBox[nPBoxAT][5]:="AllWaysTrue()" //[5]:String contendo a validacao
		aParamBox[nPBoxAT][6]:=""//[6]:Consulta F3
		aParamBox[nPBoxAT][7]:="AllWaysTrue()"//[7]:String contendo a validacao When
		aParamBox[nPBoxAT][8]:=GetSx3Cache("E1_VENCTO","X3_TAMANHO")//[8]:Tamanho do MsGet
		aParamBox[nPBoxAT][9]:=.T.//[9]:Flag .T./.F. Parametro Obrigatorio ?

        cParamTit:=&("cCadastro")
        cFunName:=FunName()
        setFunName("FIDCRelRemessa")
        lParamBox:=ParamBox(@aParamBox,@cParamTit,@aParamRet,/*bOk*/,/*aButtons*/,.T./*lCentered*/,/*nPosx*/,/*nPosy*/,/*oDlgWizard*/,/*cLoad*/,.T./*lCanSave*/,.T./*lUserSave*/)
        setFunName(cFunName)

	restInter()

    restArea(aArea)

    return(lParamBox)

static function QueryView(aParamRet as array,aBCOIsFIDC as array,aFWTTables as array) as character
    local cTmpAlias as character
    cTmpAlias:=FIDC():getQueryRem(@aParamRet,@aBCOIsFIDC,@aFWTTables)
    return(cTmpAlias)
