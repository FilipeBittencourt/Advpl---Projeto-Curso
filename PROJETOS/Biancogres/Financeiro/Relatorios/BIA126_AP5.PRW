#include "rwmake.ch"
#include "relato.ch"
#include "topconn.ch"

User Function Bia126()

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Declaracao de variaveis utilizadas no programa atraves da funcao    Ё
//Ё SetPrvt, que criara somente as variaveis definidas pelo usuario,    Ё
//Ё identificando as variaveis publicas do sistema utilizadas no codigo Ё
//Ё Incluido pelo assistente de conversao do AP5 IDE                    Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды

SetPrvt("CDESC1,CDESC2,CDESC3,CALIAS,CNOMEPROG,CNOMEARQ,CPERGUNTA")
SetPrvt("CTITULO,CCABEC1,CCABEC2,CTAMANHO,CLINDEIMP,CARQTEMP1,CARQTEMP2")
SetPrvt("LGRAVPARAM,LTEMDIC,LPODECOMP")
SetPrvt("ARETURN,ACAMPOS,AORD")
SetPrvt("NCRCCONTROL,NL,NI,NTOTFIL,NTOTREGS1,NTOTREGS2,NCBCONT")
SetPrvt("CQUERY,CCHAVE,CCBTXT")
SetPrvt("CNOMETRANS,NSUBTOTVAC,NTOTGERVAC,NRANKING")

/*/
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao	 Ё BIA126	Ё Autor Ё WLADIMIR ILLIUSHENKO  Ё Data Ё30/08/2001Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescricao Ё Relatorio Ranking das Maiores Transportadoras              Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso		 Ё SIGAFAT													  Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Inicializa variaveis.													 Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
cDesc1	   := "Este programa tem como objetivo emitir um relatorio de   "
cDesc2	   := "Ranking das maiores transportadoras.                     "
cDesc3	   := "                                                         "
cTamanho    := "M"
cAlias	   := "SF8"
cTitulo	   := "RANKING DAS MAIORES TRANSPORTADORAS"
aReturn	   := { "Zebrado", 1,"Administracao", 1, 2, 1, "",1 }
cNomeProg   := "BIA126"
aOrd	      := { }
lGravParam  := .F.
lPodeComp   := .T.
lTemDic	   := .F.
lGravParam  := .F.
nTotRegs1   := 0
nTotRegs2   := 0

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Envia controle para a funcao SETPRINT.									 Ё
//Ё Verifica Posicao do Formulario na Impressora.							 Ё
//Ё                                          								 Ё
//Ё Pega os valores passados como parametro: 								 Ё
//Ё MV_PAR01 -> Da Data ?                    								 Ё
//Ё MV_PAR02 -> Ate a Data ?                                                 Ё
//Ё MV_PAR03 -> Tot. de Transportadoras ?                                    Ё
//Ё MV_PAR04 -> Ordenar por ?                                                Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
cNomeArq := SetPrint(cAlias, cNomeProg, cNomeProg, @cTitulo, cDesc1, cDesc2, cDesc3, lTemDic, aOrd, lPodeComp, cTamanho)
if lastkey()==27 .OR. nLastkey == 27
	Return
endif

Pergunte(cNomeProg,lGravParam)
if lastkey()==27 .OR. nLastkey == 27
	Return
endif

SetDefault(aReturn,cAlias)
if lastkey()==27 .OR. nLastkey == 27
	Return
endif

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Inicializa variaveis usadas no relatorio.                                Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
nCbcont	   := 1
cCbtxt 	   := "USUARIO: "+cUserName
m_pag 	   := 1
nL          := 80
nCrcControl := iif(aReturn[4]==1,15,18)
cTitulo	   += " NO PERIODO DE "+dtoc(MV_PAR01)+" A "+dtoc(MV_PAR02)
cCabec1	   := "RANK  TRANSPORTADORA                                      VAL.ACUMULADO"
cCabec2	   := "                                                                       "
//cCabec2	   := "XXXX  XXXXXX - XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX..XXX,XXX,XXX.XX

Processa({|| fCriaTemp() })
Processa({|| fAcumula()  })
if nTotRegs1+nTotRegs2 > 0
	Processa({|| fImprime()  })
endif
Processa({|| fApagaTemp()})

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Libera impressao.												         Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
if aReturn[5] == 1 .and. (nTotRegs1+nTotRegs2) > 0
	set printer to
	OurSpool(cNomeArq)
endif
Ft_PFlush()
return

/*/
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбддддддддддддддддддддддддддддддддддддддддд©╠╠
╠╠ЁFuncao	 Ё fCriaTempЁ Autor Ё WLADIMIR ILLIUSHENKO					  Ё╠╠
╠╠цддддддддддеддддддддддадддддддаддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁDescricao Ё Cria tabela temporaria.                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Static FUNCTION fCriaTemp()
aCampos := {}
AADD(aCampos,{ "RANKING   ", "N", 04, 0 })
AADD(aCampos,{ "CODIGOTRAN", "C", 06, 0 })
AADD(aCampos,{ "LOJATRAN  ", "C", 02, 0 })
AADD(aCampos,{ "NOMETRAN  ", "C", 37, 0 })
AADD(aCampos,{ "VALORAC   ", "N", 15, 2 })
cArqTemp1 := CriaTrab(aCampos, .T.)
DbUseArea(.T.,, cArqTemp1, "REL")
return

Static Function fAcumula()
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Reconfigura os indices das tabelas auxiliares.                         Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
SA2->(DbSetOrder(1))

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Calcula quantidade de registros existentes no cadastro de fretes.        Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
cQuery  := ""
cQuery  += "SELECT COUNT(DISTINCT SF8.F8_TRANSP+SF8.F8_LOJTRAN) AS TOTREGS "
cQuery  += "FROM "+RetSqlName("SF8")+" SF8,"+RetSqlName("SF1")+" SF1 "
cQuery  += "WHERE "
cQuery  += "SF8.F8_FILIAL = '"+xFilial("SF8")+"' AND "
cQuery  += "SF8.D_E_L_E_T_ = '' AND "
cQuery  += "SF1.F1_FILIAL = '"+xFilial("SF1")+"' AND "
cQuery  += "SF1.F1_DOC = SF8.F8_NFDIFRE AND "
cQuery  += "SF1.F1_SERIE = SF8.F8_SEDIFRE AND "
cQuery  += "SF1.F1_DTDIGIT BETWEEN '"+dtos(MV_PAR01)+"' AND '"+dtos(MV_PAR02)+"' AND "
cQuery  += "SF1.D_E_L_E_T_ = '' "
TCQuery cQuery Alias "X" New
nTotRegs1 := X->TOTREGS
X->(DbCloseArea())

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Calcula quantidade de registros existentes nas NF de entrada.            Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
cQuery  := ""
cQuery  += "SELECT COUNT(DISTINCT SD1.D1_FORNECE+SD1.D1_LOJA) AS TOTREGS "
cQuery  += "FROM "+RetSqlName("SD1")+" SD1 "
cQuery  += "WHERE "
cQuery  += "SD1.D1_FILIAL = '"+xFilial("SD1")+"' AND "
cQuery  += "SD1.D1_DTDIGIT BETWEEN '"+dtos(MV_PAR01)+"' AND '"+dtos(MV_PAR02)+"' AND "
cQuery  += "SD1.D1_TIPO = 'C' AND "
cQuery  += "SD1.D1_CF IN ('262','162') AND "
cQuery  += "SD1.D_E_L_E_T_ = '' "
TCQuery cQuery Alias "X" New
nTotRegs2 := X->TOTREGS
X->(DbCloseArea())

if nTotRegs1+nTotRegs2 > 0
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Definicao de indice temporario.                                          Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	REL->(DBCloseArea())
	DbUseArea(.T.,,cArqTemp1,"REL")
	REL->(DbCreateInd(cArqTemp1+".001","CODIGOTRAN+LOJATRAN", {||CODIGOTRAN+LOJATRAN}))	
	
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Analizando Conhecimentos de Frete ...                                    Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
/*	cQuery  := ""
	cQuery  += "SELECT "
	cQuery  += "SF8.F8_TRANSP, "
	cQuery  += "SF8.F8_LOJTRAN, "
	cQuery  += "SUM(SF1.F1_VALMERC) AS F1_VALMERC "
	//cQuery  += "SUM(SF1.F1_FRETE) AS F1_VALMERC "
	cQuery  += "FROM "+RetSqlName("SF8")+" SF8, "+RetSqlName("SF1")+" SF1 "
	cQuery  += "WHERE "
	cQuery  += "SF8.F8_FILIAL = '"+xFilial("SF8")+"' AND "
	cQuery  += "SF8.D_E_L_E_T_ = '' AND "
	cQuery  += "SF1.F1_FILIAL = '"+xFilial("SF1")+"' AND "
	cQuery  += "SF1.F1_DOC = SF8.F8_NFDIFRE AND "
	cQuery  += "SF1.F1_SERIE = SF8.F8_SEDIFRE AND "

	cQuery  += "SF1.F1_FORNECE = SF8.F8_TRANSP AND 	"  // ALTERADO PELO MADALENO

	cQuery  += "SF1.F1_DTDIGIT BETWEEN '"+dtos(MV_PAR01)+"' AND '"+dtos(MV_PAR02)+"' AND "
	cQuery  += "SF1.D_E_L_E_T_ = '' "
	cQuery  += "GROUP BY "
	cQuery  += "SF8.F8_TRANSP, "
	cQuery  += "SF8.F8_LOJTRAN "
	TCQuery cQuery Alias "QRY" New
	
	ProcRegua(nTotRegs1)
	do while QRY->(!EOF())
		
		IncProc("Analizando Conhecimentos de Frete ...")
		
		cNomeTrans := "TRANSPORTADORA NAO CADASTRADA!"
		if SA2->(DBSeek(xFilial("SA2")+QRY->F8_TRANSP+QRY->F8_LOJTRAN))
			cNomeTrans := SA2->A2_NOME
		endif
		
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Acumula o valor das mercadorias para a transportadora.                   Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		RecLock("REL",.T.)
		REL->CODIGOTRAN := QRY->F8_TRANSP
		REL->LOJATRAN   := QRY->F8_LOJTRAN
		REL->NOMETRAN   := cNomeTrans
		REL->VALORAC    := QRY->F1_VALMERC //F1_FRETE
		REL->(DBUnlock())
		
		QRY->(DBSkip())
	enddo
	QRY->(DBCloseArea())
*/	
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Analizando NF de MPM (Materia-Prima de Massa).                           Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	cQuery  := ""
	cQuery  += "SELECT "
	cQuery  += "SD1.D1_FORNECE, "
	cQuery  += "SD1.D1_LOJA, "
	//cQuery  += "SUM(SF1.F1_VALMERC) AS F1_VALMERC "
	cQuery  += "SUM(SD1.D1_TOTAL) AS F1_VALMERC "
	cQuery  += "FROM "+RetSqlName("SD1")+" SD1, "+RetSqlName("SF1")+" SF1 "
	cQuery  += "WHERE "
	cQuery  += "SD1.D1_FILIAL = '"+xFilial("SD1")+"' AND "
	cQuery  += "SD1.D1_DTDIGIT BETWEEN '"+dtos(MV_PAR01)+"' AND '"+dtos(MV_PAR02)+"' AND "
	cQuery  += "SD1.D1_TIPO = 'C' AND "
	cQuery  += "SD1.D1_CF IN ('262','162','1352','2352') AND "
	cQuery  += "SD1.D_E_L_E_T_ = '' AND "
	cQuery  += "SF1.D_E_L_E_T_ = '' AND "
	cQuery  += "SF1.F1_FILIAL = '"+xFilial("SF1")+"' AND "
	cQuery  += "SF1.F1_DOC = SD1.D1_DOC AND "
	cQuery  += "SF1.F1_SERIE = SD1.D1_SERIE AND "

	cQuery  += "SF1.F1_FORNECE = SD1.D1_FORNECE  " // ALTERADO PELO MADALENO
	
	cQuery  += "GROUP BY "
	cQuery  += "SD1.D1_FORNECE, "
	cQuery  += "SD1.D1_LOJA "
	TCQuery cQuery Alias "QRY" New
	
	ProcRegua(nTotRegs2)
	do while QRY->(!EOF())
		
		IncProc("Analizando NFs de MPM ...")
		
		if !REL->(DBSeek(QRY->D1_FORNECE+QRY->D1_LOJA))
			cNomeTrans := "TRANSPORTADORA NAO CADASTRADA!"
			if SA2->(DBSeek(xFilial("SA2")+QRY->D1_FORNECE+QRY->D1_LOJA))
				cNomeTrans := SA2->A2_NOME
			endif
			
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Acumula o valor das mercadorias para a transportadora.                   Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			RecLock("REL",.T.)
			REL->CODIGOTRAN := QRY->D1_FORNECE
			REL->LOJATRAN   := QRY->D1_LOJA
			REL->NOMETRAN   := cNomeTrans
			REL->VALORAC    := QRY->F1_VALMERC
		else
			RecLock("REL",.F.)
			REL->VALORAC += QRY->F1_VALMERC
		endif
		REL->(DBUnlock())
		
		QRY->(DBSkip())
	enddo
	QRY->(DBCloseArea())
	
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Determina a posicao no Ranking de cada transportadora.                   Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	REL->(DBCloseArea())
	DbUseArea(.T.,,cArqTemp1,"REL")
	REL->(DbCreateInd(cArqTemp1+".002","descend(str(VALORAC))+CODIGOTRAN+LOJATRAN", {||descend(str(VALORAC))+CODIGOTRAN+LOJATRAN}))
	
	nI := 0
	ProcRegua(REL->(LastRec()))
	REL->(DbGoTop())
	do while !REL->(EOF())
		
		IncProc("Determinando o Ranking...")
		
		nI := nI + 1
		
		RecLock("REL",.F.)
		if nI > MV_PAR03
			DBDelete()
		else
			REL->RANKING := nI
			REL->(DBUnlock())
		endif
		REL->(DBSkip())
	enddo
else
	alert("Nao ha dados a serem processados!")
endif
return

/*/
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддбдддддддбдддддддддддддддддддддддддддддддддддддддд©╠╠
╠╠ЁFuncao	 Ё fImprime  Ё Autor Ё WLADIMIR ILLIUSHENKO					  Ё╠╠
╠╠цддддддддддедддддддддддадддддддадддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁDescricao Ё Imprime os dados da tabela temporaria. 					  Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Static Function fImprime()

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Define a order de impressao do relatorio.                                Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
REL->(DBCloseArea())
DbUseArea(.T.,,cArqTemp1,"REL")
do case
	case MV_PAR04 == 1 // Por Ranking
		REL->(DbCreateInd(cArqTemp1+".003","str(RANKING)", {||str(RANKING)}))
		
	case MV_PAR04 == 2 // Por Transportadora
		REL->(DbCreateInd(cArqTemp1+".004","CODIGOTRAN+LOJATRAN+str(RANKING)", {||CODIGOTRAN+LOJATRAN+str(RANKING)}))
endcase
REL->(DbGoTop())

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Inicializa variaveis necessarias a impressao.                            Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
cGrupoAtual := "NULL"
nSubTotVAC  := 0
nTotGerVAC  := 0
nTotFil     := 0

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Impressao do relatorio.                                                  Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
REL->(DBGoTop())
Procregua( REL->(LastRec()))
do while !REL->(EOF())
	
	Incproc("Imprimindo...")
	
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Imprime parametros.                                                      Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	if m_pag == 1
	   U_ImpPar(cNomeProg,cTitulo,cTamanho,nCrcControl,nCbCont,cCbtxt,@nL)
	endif
	
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Impressao do cabecalho.         												     Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	if nL >= 65
		nL := Cabec(cTitulo,cCabec1,cCabec2,cNomeProg,cTamanho) + 1
	endif
	
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Imprime o subtotalizador do grupo caso a ordem de impressao seja por ... Ё
	//Ё Transportadora.                                                          Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	if MV_PAR04 == 2
		if REL->CODIGOTRAN <> cGrupoAtual
			if cGrupoAtual <> "NULL"
				nL++
				if nTotFil > 1
					cLinDeImp := ""+space(06)
					cLinDeImp += "TOTAL DAS FILIAIS PARA ESSA TRANSPORTADORA ......"+space(02)
					cLinDeImp += u_rtoc(nSubTotVAC)
					@ nL,000 PSay cLinDeImp
					nL += 3
				endif
				
				nSubTotVAC := 0
				nTotFil    := 0
			endif
			
			cGrupoAtual := REL->CODIGOTRAN
		endif
	endif
	
	cLinDeImp := ""
	cLinDeImp += trans(REL->RANKING,"@R 999o") + space(2)
	cLinDeImp += REL->CODIGOTRAN+"-"+REL->LOJATRAN+" - "+padr(REL->NOMETRAN,37) + space(2)
	cLinDeImp += u_rtoc(REL->VALORAC)
	@ nL,000 PSay cLinDeImp
	nL++
	
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Alimenta totais parciais.   										                 Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	nSubTotVAC += REL->VALORAC
	nTotFil    += 1
	nRanking++
	
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Alimenta totais gerais.     										                 Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	nTotGerVAC += REL->VALORAC
	
	REL->(DBSkip())
enddo

if MV_PAR04 == 2
	nL++
	if nTotFil > 1
		cLinDeImp := ""+space(06)
		cLinDeImp += "TOTAL DAS FILIAIS PARA ESSA TRANSPORTADORA ......"+space(02)
		cLinDeImp += u_rtoc(nSubTotVAC)
		@ nL,000 PSay cLinDeImp
		nL += 4
	endif
endif

nL++
cLinDeImp := ""
cLinDeImp += "TOTAL GERAL ..........................................."+space(02)
cLinDeImp += u_rtoc(nTotGerVAC)
@ nL,000 PSay cLinDeImp

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Imprime rodape.													 	                 Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
//Roda(nCbCont, cCbtxt, cTamanho)
return

/*/
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбддддддддддддддддддддддддддддддддддддддддд©╠╠
╠╠ЁFuncao	 ЁfApagaTempЁ Autor Ё WLADIMIR ILLIUSHENKO					  Ё╠╠
╠╠цддддддддддеддддддддддадддддддаддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁDescricao Ё Exclui a tabela temporaria.							      Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
// Substituido pelo assistente de conversao do AP5 IDE em 29/01/01 ==> FUNCTION fApagaTemp
Static function fApagaTemp()
REL->(DbCloseArea()); FErase(cArqTemp1+".*")
return