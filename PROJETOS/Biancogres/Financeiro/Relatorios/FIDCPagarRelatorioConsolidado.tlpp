#include "totvs.ch"
#include "dbstruct.ch"

/*/{Protheus.doc} FIDC
@author Marinaldo de Jesus
@since 08/03/2021
@project FIDC
@version 1.0
@description Function para Impressao do Relatorio (Excel) Consolidado FIDC Pagar
@type function
/*/

function u_FIDCPConRel()
    return(u_FIDCPagarRelatorioConsolidado())

/*/{Protheus.doc} FIDC
@author Marinaldo de Jesus
@since 08/03/2021
@project FIDC
@version 1.0
@description Procedure para Impressao do Relatorio (Excel) Consolidado FIDC Pagar
@type procedure
/*/
procedure u_FIDCPagarRelatorioConsolidado()

	local aArea				as array
	local aParamRet			as array

	local bAction			as codeblock

	local lParamBox			as logical

	local otMultProcess		as object

    private cCadastro as character
    cCadastro:=OemToAnsi("Relatorio Consolidado FIDC Pagar")

    aArea:=getArea()

	begin sequence

        lParamBox:=FIDCPagarConsolidadoParameters(@aParamRet)
        if (!lParamBox)
            break
        endif

		bAction:={||FIDCPagarRelatorioConsolidado(otMultProcess,aParamRet)}
		otMultProcess:=tMultProcess():New(bAction,&("cCadastro"),OemToAnsi("Aguarde. Gerando Relatorio..."),nil,2)
		otMultProcess:Activate()

    end sequence

	restArea(aArea)

    return

static procedure FIDCPagarRelatorioConsolidado(otMultProcess as object,aParamRet as array)
    EvalBlock():EvalBlock({||FIDCPagarRelatorioConsolidadoQuery(otMultProcess,aParamRet)},nil,.T.)
    return

static procedure FIDCPagarRelatorioConsolidadoQuery(otMultProcess as object,aParamRet as array)

    local aFWTTables    as array

    local bProcess      as codeblock
    local bMsAguarde    as codeblock

    local cTmpAlias     as character

    local cXMLPath      as character
    local cXMLFile      as character
    local cExcelTitle   as character

    local cServerIP     as character
    local cEnvServer    as character

    local lDev          as logical
    local lPicture      as logical
    local lX3Titulo     as logical
    local ltxtEditMemo  as logical

    local nTable        as numeric
    local nTables       as numeric    

    local nIncRegua     as numeric

    otMultProcess:SetRegua(1,0)
    otMultProcess:SetRegua(2,0)

    bMsAguarde:={||cTmpAlias:=QueryView(@aParamRet,@aFWTTables)}
    MsAguarde(bMsAguarde,"Obtendo dados no SGBD. Aguarde...")

    (cTmpAlias)->(dbGoTop())

    cXMLPath:="\FIDC\XML\"
    if (dirtools():MakeDir(cXMLPath))

        cXMLFile:=A35():getXMLFile(&("cEmpAnt"),&("cFilAnt"),cXMLPath,"FIDCPagarRelatorioConsolidado","","")
        
        if (type("cCadastro")=="C")
            cExcelTitle:=&("cCadastro")
            cExcelTitle+=" :: "
        else
            cExcelTitle:=""
        endif

        cExcelTitle+="Empresa: "+&("cEmpAnt")
        cExcelTitle+=" :: "
        cExcelTitle+="Filial:  "+&("cFilAnt")
        
        cServerIP:=getServerIP()
        cEnvServer:=upper(getEnvServer())

        lDev:=((cServerIP=="192.168.20.18").or.("DEV"$cEnvServer))
        if (lDev)
            cExcelTitle+=" :: EMITIDO EM AMBIENTE DE DESENVOLVIMENTO ::"    
        endif

        lPicture:=.T.
        lX3Titulo:=.T.
        ltxtEditMemo:=.F.

        nIncRegua:=(cTmpAlias)->(RecCount())

        otMultProcess:SetRegua(1,0)
        otMultProcess:SetRegua(2,nIncRegua)
        
        bProcess:={|otMultProcess|otMultProcess:IncRegua(1,"Gerando Planilha Excel. Aguarde..."),otMultProcess:IncRegua(2,"Processando...")}
        
        uToXML():setXMLVar("GENERAL","lExcelXlsx",.F.)
        
        uToXML():setXMLVar("PROCESS","bEval",bProcess)
        uToXML():setXMLVar("PROCESS","pEval",otMultProcess)

        bMsAguarde:={||uToXML():QryToXML(cTmpAlias,@cXMLFile,@cExcelTitle,@lPicture,@lX3Titulo,@ltxtEditMemo)}
        MsAguarde(bMsAguarde,"Gerando Planilha Excel. Aguarde...")
        
        uToXML():clearXMLVar()

    endif

    if (valtype(aFWTTables)=="A")
        nTables:=len(aFWTTables)
        for nTable:=1 to nTables
            if (valType(aFWTTables[nTable])=="O")
                aFWTTables[nTable]:Delete()
                aFWTTables[nTable]:=nil
            endif
        next nTable
        aSize(aFWTTables,0)
    endif

    return

static function FIDCPagarConsolidadoParameters(aParamRet as array) as logical
	local lParamBox as logical
	lParamBox:=FIDC():getPagParamCon(@aParamRet)
	return(lParamBox)

static function QueryView(aParamRet as array,aFWTTables as array) as character
    local cTmpAlias as character
    cTmpAlias:=FIDC():getPagQueryCon(@aParamRet,@aFWTTables)
    return(cTmpAlias)
