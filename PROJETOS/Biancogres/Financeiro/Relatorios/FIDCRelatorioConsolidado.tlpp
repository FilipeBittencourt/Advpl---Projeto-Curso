#include "totvs.ch"
#include "dbstruct.ch"

/*/{Protheus.doc} FIDC
@author Marinaldo de Jesus
@since 08/03/2021
@project FIDC
@version 1.0
@description Function para Impressao do Relatorio (Excel) Consolidado FIDC
@type function
/*/

function u_FIDCConRel()
    return(u_FIDCRelatorioConsolidado())

/*/{Protheus.doc} FIDC
@author Marinaldo de Jesus
@since 08/03/2021
@project FIDC
@version 1.0
@description Procedure para Impressao do Relatorio (Excel) Consolidado FIDC
@type procedure
/*/
procedure u_FIDCRelatorioConsolidado()

	local aArea				as array
	local aParamRet			as array

	local bAction			as block

	local lParamBox			as logical

	local otMultProcess		as object

    private cCadastro as character
    cCadastro:=OemToAnsi("Relatorio Consolidado FIDC")

    aArea:=getArea()

	begin sequence

        lParamBox:=FIDCConsolidadoParameters(@aParamRet)
        if (!lParamBox)
            break
        endif

		bAction:={||FIDCRelatorioConsolidado(otMultProcess,aParamRet)}
		otMultProcess:=tMultProcess():New(bAction,&("cCadastro"),OemToAnsi("Aguarde. Gerando Relatorio..."),nil,2)
		otMultProcess:Activate()

    end sequence

	restArea(aArea)

    return

static procedure FIDCRelatorioConsolidado(otMultProcess as object,aParamRet as array)
    EvalBlock():EvalBlock({||FIDCRelatorioConsolidadoQuery(otMultProcess,aParamRet)},nil,.T.)
    return

static procedure FIDCRelatorioConsolidadoQuery(otMultProcess as object,aParamRet as array)

    local aBCOIsFIDC    as array
    local aFWTTables    as array

    local bTTimer       as block
    local bMsAguarde    as block

    local cTmpAlias     as character

    local cXMLPath      as character
    local cXMLFile      as character
    local cExcelTitle   as character

    local cServerIP     as character
    local cEnvServer    as character

    local lDev          as logical
    local lPicture      as logical
    local lX3Titulo     as logical
    local ltxtEditMemo  as logical

    local nBCO          as numeric
    local nBCOs         as numeric

    local nTable        as numeric
    local nTables       as numeric    
	local nTTimer		as numeric

    local nSA6RecNo     as numeric

    local oTTimer       as object

    aBCOIsFIDC:=FIDC():retbcoFIDC()

    nBCOs:=len(aBCOIsFIDC)

    otMultProcess:SetRegua(1,nBCOs)

    for nBCO:=1 to nBCOs
    
        otMultProcess:IncRegua(1,"Obtendo dados no SGBD. Aguarde...")

        if (!(aBCOIsFIDC[nBCO][1]==&("cEmpAnt")))
            loop
        endif

        if (!(aBCOIsFIDC[nBCO][2]==&("cFilAnt")))
            loop
        endif

        nSA6RecNo:=aBCOIsFIDC[nBCO][6]
        if (empty(nSA6RecNo))
            loop
        endif

        SA6->(MsGoTo(nSA6RecNo))

        otMultProcess:SetRegua(1,0)
        otMultProcess:SetRegua(2,0)

		nTTimer:=0

        bTTimer:={||if(++nTTimer>4,(nTTimer:=0,otMultProcess:SetRegua(1,0),otMultProcess:SetRegua(2,0)),nil),otMultProcess:IncRegua(1,"Obtendo dados no SGBD. Aguarde..."),otMultProcess:IncRegua(2,"Processando...")}
        Eval(bTTimer)

        oTTimer:=TTimer():New(1,bTTimer,getWndDefault()) 

        bMsAguarde:={||oTTimer:Activate(),cTmpAlias:=QueryView(@aParamRet,@aBCOIsFIDC[nBCO],@aFWTTables),oTTimer:DeActivate()}
        MsAguarde(bMsAguarde,"Obtendo dados no SGBD. Aguarde...")

        (cTmpAlias)->(dbGoTop())

        cXMLPath:="\FIDC\XML\"
        if (dirtools():MakeDir(cXMLPath))

            cXMLFile:=A35():getXMLFile(&("cEmpAnt"),&("cFilAnt"),cXMLPath,"FIDCRelatorioConsolidado","","")
            
            if (type("cCadastro")=="C")
                cExcelTitle:=&("cCadastro")
                cExcelTitle+=" :: "
            else
                cExcelTitle:=""
            endif

            cExcelTitle+="Empresa: "+&("cEmpAnt")
            cExcelTitle+=" :: "
            cExcelTitle+="Filial:  "+&("cFilAnt")
            
            cServerIP:=getServerIP()
            cEnvServer:=upper(getEnvServer())

            lDev:=((cServerIP=="192.168.20.18").or.("DEV"$cEnvServer))
            if (lDev)
                cExcelTitle+=" :: EMITIDO EM AMBIENTE DE DESENVOLVIMENTO ::"    
            endif

            lPicture:=.T.
            lX3Titulo:=.T.
            ltxtEditMemo:=.F.

            otMultProcess:SetRegua(1,0)
            otMultProcess:SetRegua(2,0)
            
			nTTimer:=0

            bTTimer:={||if(++nTTimer>4,(nTTimer:=0,otMultProcess:SetRegua(1,0),otMultProcess:SetRegua(2,0)),nil),otMultProcess:IncRegua(1,"Gerando Planilha Excel. Aguarde..."),otMultProcess:IncRegua(2,"Processando...")}
            Eval(bTTimer)

            oTTimer:=TTimer():New(1,bTTimer,getWndDefault()) 
			
            uToXML():setXMLVar("GENERAL","lExcelXlsx",.F.)
			bMsAguarde:={||oTTimer:Activate(),uToXML():QryToXML(cTmpAlias,@cXMLFile,@cExcelTitle,@lPicture,@lX3Titulo,@ltxtEditMemo),oTTimer:DeActivate()}
            MsAguarde(bMsAguarde,"Gerando Planilha Excel. Aguarde...")
            uToXML():clearXMLVar()

        endif

        if (valtype(aFWTTables)=="A")
            nTables:=len(aFWTTables)
            for nTable:=1 to nTables
                if (valType(aFWTTables[nTable])=="O")
                    aFWTTables[nTable]:Delete()
                    aFWTTables[nTable]:=nil
                endif
            next nTable
            aSize(aFWTTables,0)
        endif

    next nBCO

    return

static function FIDCConsolidadoParameters(aParamRet as array) as logical
	local lParamBox as logical
	lParamBox:=FIDC():getParamCon(@aParamRet)
	return(lParamBox)

static function QueryView(aParamRet as character,aBCOIsFIDC as array,aFWTTables as array) as character
    local cTmpAlias as character
    cTmpAlias:=FIDC():getQueryCon(@aParamRet,@aBCOIsFIDC,@aFWTTables)
    return(cTmpAlias)
