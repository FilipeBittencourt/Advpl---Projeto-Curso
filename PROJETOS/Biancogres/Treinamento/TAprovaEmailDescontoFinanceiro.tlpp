#Include "TOTVS.CH"
#Include "Protheus.CH"
#Include "TOPCONN.CH"

// U_BIA761
User Function BIA761()


  RpcClearEnv()
  If Select("SX6") <= 0
    RPCSetEnv("01", "01", NIL, NIL, "COM", NIL, {"SB1","SF1", "SF2"})
  EndIf

  LerEmail()

RETURN

Static Function LerEmail()

  Local oMailManager := TMailManager():New()
  Local oMailMessage := TMailMessage():New()



  Local nMsg 		:= 0
  Local nTotMsg	:= 0
  Local nRet		:= 0
  Local cChave	:= ""
  Local cAcao 	:= ""


  Local cSrvSMTP := SubStr(GetMv("MV_RELSERV"),1,RAT(':',GetMv("MV_RELSERV"))-1)
  Local cSrvPOP	  := SubStr(GetMv("MV_YSRVPOP"),1,RAT(':',GetMv("MV_YSRVPOP"))-1)
  Local lUseTLS 	:= GetMv("MV_RELTLS")
  Local lUseSSL 	:= GetMv("MV_RELSSL")
  Local lUseAUT 	:= GetMv("MV_RELAUTH")
  Local cConta 	  := GetMv("MV_YPVCTAP")
  Local cSenha   	:= GetMv("MV_YPVSNAP")
  Local cContaRec := GetMv("MV_YPVCTAP")
  Local cSenhaRec := GetMv("MV_YPVSNAP")
  Local cPtPOP3   := Val(SubStr(GetMv("MV_YSRVPOP"),RAT(':',GetMv("MV_YSRVPOP"))+1,Len(Alltrim(GetMv("MV_YSRVPOP")))))
  Local cPtSMTP   := Val(SubStr(GetMv("MV_RELSERV"),RAT(':',GetMv("MV_RELSERV"))+1,Len(Alltrim(GetMv("MV_RELSERV")))))

  oMailManager:SetUseTLS(lUseTLS)
  oMailManager:Init(cSrvPOP, "" , cContaRec, cSenhaRec)
  oMailManager:SetPopTimeOut(60)

  nRet := oMailManager:PopConnect()

  If (nRet == 0)

    oMailManager:GetNumMsgs(@nTotMsg)

    For nMsg := 1 To nTotMsg

      oMailMessage:Clear()

      oMailMessage:Receive(oMailManager, nMsg)

      ConOut(cValToChar(dDataBase) +"-"+ Time() + " -- TAprovacaoProcessoEmail:Receber()")

      //recuperar chave da mensagem
      If 'KEY:' $ oMailMessage:cSubject

        cChave := SubStr(AllTrim(oMailMessage:cSubject), At('KEY:', oMailMessage:cSubject) + 3, 32)

      EndIf

      If 'ACTION:' $ oMailMessage:cSubject

        cAcao := SubStr(AllTrim(oMailMessage:cSubject), At('ACTION:', oMailMessage:cSubject) + 6, 7)

      EndIf


      //oMailManager:DeleteMsg(nMsg)

    Next

    //oMailManager:POPDisconnect()

  Else

    ConOut( "TAprovacaoProcessoEmail:Receber() => ERRO ao conectar com servidor POP: " + oMailManager:GetErrorString( nRet ) )

  EndIf

Return



/*

  Class TAprovaEmailDescontoFinanceiro From TAprovacaoProcessoEmail

    Public Method New() Constructor
    Public Method TSTFIL006() Constructor

  EndClass


Method New() Class TAprovaEmailDescontoFinanceiro

  //dados email
  _Super:New()

  Local cServidor := SubStr(GetMv("MV_RELSERV"),1,RAT(':',GetMv("MV_RELSERV"))-1)
  Local cSrvPOP	  := SubStr(GetMv("MV_YSRVPOP"),1,RAT(':',GetMv("MV_YSRVPOP"))-1)
  Local cConta 	  := GetMv("MV_YPVCTAP")
  Local cSenha   	:= GetMv("MV_YPVSNAP")
  Local cEmail 	  := GetMv("MV_YPVCTAP")
  Local lUseTLS 	:= GetMv("MV_RELTLS")
  Local lUseSSL 	:= GetMv("MV_RELSSL")
  Local lUseAUT 	:= GetMv("MV_RELAUTH")
  Local cContaRec := GetMv("MV_YPVCTAP")
  Local cSenhaRec := GetMv("MV_YPVSNAP")
  Local cPtSMTP   := Val(SubStr(GetMv("MV_RELSERV"),RAT(':',GetMv("MV_RELSERV"))+1,Len(Alltrim(GetMv("MV_RELSERV")))))
  Local cPtPOP3   := Val(SubStr(GetMv("MV_YSRVPOP"),RAT(':',GetMv("MV_YSRVPOP"))+1,Len(Alltrim(GetMv("MV_YSRVPOP")))))

  ::cServidorSMTP 		:= ""
  ::nPortaSMPT		  	:= 0
  ::cContaEnvio 			:= ""
  ::cSenhaEnvio 			:= ""
  ::cEmailEnvio 			:= ""
  ::lUseTLS 				:= GetMv("MV_RELTLS")
  ::lUseSSL 				:= GetMv("MV_RELSSL")
  ::lUseAUT 				:= GetMv("MV_RELAUTH")

  ::cServidorMail 	  	:= ""
  ::nPortaMail			    := 0
  ::cContaRecebimento 	:= GetMv("MV_YPVCTAP")
  ::cSenhaRecebimento 	:= GetMv("MV_YPVSNAP")

  ::cAssunto 				:= ""

Return

Method TSTFIL006() Class TAprovaEmailDescontoFinanceiro

Static Function TSTFIL006()

  Local oAPEmail         := TAprovacaoProcessoEmail():New()

  oAPEmail:oPesagemCarga        := SELF
  oAPEmail:cEmp                := cEmpAnt
  oAPEmail:cFil                := cFilAnt
  oAPEmail:cTabela            := RetSQLName("ZZV")
  oAPEmail:cProcesso            := "APCARGA"
  oAPEmail:cEmail                := ::cEmailWorkflow
  oAPEmail:cId                := ::cId



  oAprovacaoCargaEmail:Enviar()

Return lRet

*/