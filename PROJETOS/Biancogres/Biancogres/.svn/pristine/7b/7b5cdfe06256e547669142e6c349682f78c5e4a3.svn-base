#INCLUDE "TOTVS.CH"
#INCLUDE "TOPCONN.CH"

/*/{Protheus.doc} TContratoParceria
@author Tiago Rossini Coradini
@since 08/08/2019
@version 1.0
@description Classe para controle de contratos de parceria
@obs Ticket: 17900
@type class
/*/

Class TContratoParceria From LongClassName

	Data cNumero // Numero do contrato
	Data cClVl // Classe de valor
	Data nValor // Valor do contrato
	Data nPedAbe // Valor de pedidos em aberto
	Data nTitAbe // Valor de titulos a pagar
	Data nTitPag // Valor de titulos pagos
	Data nTitAnt // Valor de titulos antecipados nao compensados
	Data nTitDev // Valor de titulos devolucao
	Data nSaldo // Saldo do contrato	
			
	Method New(cNumero, cClVl) Constructor
	Method Process()
	Method GetValor()
	Method GetPedAbe()
	Method GetTitAbe()
	Method GetTitPag()
	Method GetTitAnt()
	Method GetTitDev()
	Method GetSaldo()
	Method Validate()
	
EndClass


Method New(cNumero, cClVl) Class TContratoParceria	

	Default cNumero := ""
	Default cClVl := ""

	::cNumero := cNumero
	::cClVl := cClVl
	::nValor := 0
	::nPedAbe := 0
	::nTitAbe := 0
	::nTitPag := 0
	::nTitAnt := 0
	::nTitDev := 0
	::nSaldo := 0
								
Return()


Method Process() Class TContratoParceria	
Local aArea := GetArea()

	::nValor := ::GetValor()
	::nPedAbe := ::GetPedAbe()
	::nTitAbe := ::GetTitAbe()
	::nTitPag := ::GetTitPag()
	::nTitAnt := ::GetTitAnt()
	::nTitDev := ::GetTitDev()	
	::nSaldo := ::GetSaldo()
	
	RestArea(aArea)
								
Return()


Method GetValor() Class TContratoParceria
Local cSQL := ""
Local cQry := GetNextAlias()

	cSQL := " SELECT VALOR " 
	cSQL += " FROM FNC_CTR(" + ValToSQL(cFilAnt) + ", " + ValToSQL(::cNumero) + ", " + ValToSQL(::cNumero) + ", " + ValToSQL(::cClVl) + ", " + ValToSQL(::cClVl) + ")"
			
	TcQuery cSQL New Alias (cQry)
	
	::nValor := (cQry)->VALOR
	
	(cQry)->(DbCloseArea())	

Return()


Method GetPedAbe() Class TContratoParceria
Local cSQL := ""
Local cQry := GetNextAlias()

	cSQL := " SELECT ISNULL(ROUND(SUM(TOTAL), 2), 0) AS VALOR " 
	cSQL += " FROM FNC_CTR_PC(" + ValToSQL(cFilAnt) + ", " + ValToSQL(::cNumero) + ", " + ValToSQL(::cNumero) + ", " + ValToSQL(::cClVl) + ", " + ValToSQL(::cClVl) + ")"

	TcQuery cSQL New Alias (cQry)
	
	::nPedAbe := (cQry)->VALOR
	
	(cQry)->(DbCloseArea())	

Return()


Method GetTitAbe() Class TContratoParceria
Local cSQL := ""
Local cQry := GetNextAlias()

	cSQL := " SELECT ISNULL(ROUND(SUM(SALDO), 2), 0) AS VALOR " 
	cSQL += " FROM FNC_CTR_NFE(" + ValToSQL(cFilAnt) + ", " + ValToSQL(::cNumero) + ", " + ValToSQL(::cNumero) + ", " + ValToSQL(::cClVl) + ", " + ValToSQL(::cClVl) + ")"
	cSQL += " WHERE SALDO > 0 "
			
	TcQuery cSQL New Alias (cQry)
	
	::nTitAbe := (cQry)->VALOR
	
	(cQry)->(DbCloseArea())	

Return()


Method GetTitPag() Class TContratoParceria
Local cSQL := ""
Local cQry := GetNextAlias()

	cSQL := " SELECT ISNULL(ROUND(SUM(VALOR), 2), 0) AS VALOR " 
	cSQL += " FROM FNC_CTR_MOV_BAN(" + ValToSQL(cFilAnt) + ", " + ValToSQL(::cNumero) + ", " + ValToSQL(::cNumero) + ", " + ValToSQL(::cClVl) + ", " + ValToSQL(::cClVl) + ")"
				
	TcQuery cSQL New Alias (cQry)
	
	::nTitPag := (cQry)->VALOR
	
	(cQry)->(DbCloseArea())	

Return()


Method GetTitAnt() Class TContratoParceria
Local cSQL := ""
Local cQry := GetNextAlias()

	cSQL := " SELECT ISNULL(ROUND(SUM(SALDO), 2), 0) AS VALOR " 
	cSQL += " FROM FNC_CTR_PA(" + ValToSQL(cFilAnt) + ", " + ValToSQL(::cNumero) + ", " + ValToSQL(::cNumero) + ", " + ValToSQL(::cClVl) + ", " + ValToSQL(::cClVl) + ")"
			
	TcQuery cSQL New Alias (cQry)
	
	::nTitAnt := (cQry)->VALOR
	
	(cQry)->(DbCloseArea())	

Return()


Method GetTitDev() Class TContratoParceria
Local cSQL := ""
Local cQry := GetNextAlias()

	cSQL := " SELECT ISNULL(ROUND(SUM(VALOR), 2), 0) AS VALOR " 
	cSQL += " FROM FNC_CTR_DEV(" + ValToSQL(cFilAnt) + ", " + ValToSQL(::cNumero) + ", " + ValToSQL(::cNumero) + ", " + ValToSQL(::cClVl) + ", " + ValToSQL(::cClVl) + ")"
			
	TcQuery cSQL New Alias (cQry)
	
	::nTitDev := (cQry)->VALOR
	
	(cQry)->(DbCloseArea())	

Return()


Method GetSaldo() Class TContratoParceria

	::nSaldo := ::nValor - ::nPedAbe - ::nTitAbe - ::nTitPag + ::nTitDev

Return()


Method Validate(dDtVig) Class TContratoParceria
Local lRet := .T.
Local cSQL := ""
Local cQry := GetNextAlias()

	Default dDtVig := dDataBase

	cSQL := " SELECT C3_MSBLQL, C3_DATPRI, C3_DATPRF "
	cSQL += " FROM " + RetSQLName("SC3") + " WITH(NOLOCK) "
	cSQL += " WHERE C3_NUM = " + ValToSQL(::cNumero)
	cSQL += " AND C3_YCLVL = " + ValToSQL(::cClVl)
	cSQL += " AND D_E_L_E_T_ = '' "
			
	TcQuery cSQL New Alias (cQry)
	
	If (cQry)->C3_MSBLQL == "1"
		
		MsgAlert("Atenção, o pedido de compra não poderá ser liberado, pois o contrato está bloqueado.")
		
		lRet := .F.
	
	ElseIf dDtVig < sToD((cQry)->C3_DATPRI) .Or. dDtVig > sToD((cQry)->C3_DATPRF)

		MsgAlert("Atenção, o pedido de compra não poderá ser liberado, pois o contrato está fora da vigência.")
		
		lRet := .F.
			
	EndIf
	
	(cQry)->(DbCloseArea())

Return(lRet)