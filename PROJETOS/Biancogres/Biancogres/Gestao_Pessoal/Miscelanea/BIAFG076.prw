#INCLUDE "PROTHEUS.CH"

/*/{Protheus.doc} BIAFG076
@author Gabriel Rossi Mafioletti
@since 03/12/18
@version 1.0
@description Copia as tabelas SPX(Ponto eletrônico) da empresa 05 para 01  
@type function
/*/


User Function BIAFG076()

	Local _cAreaAtu   
	Local _cALias
	Local _cPrefix
	Local _ms
	Private msrhEnter := CHR(13) + CHR(10)
	
//	RPCSETTYPE(3)
//	RpcSetEnv("05","01")
	
	_cAreaAtu	:=	GetArea()

	_cAlias	:=	GetNextAlias()
	
	BeginSql Alias _cAlias
	
		SELECT RE_MATD, RE_MATP
		FROM SRE010
		WHERE RE_MATD IN 
		('000132',
		'000130',
		'000648',
		'000978',
		'000465',
		'000886',
		'000765',
		'000570',
		'000769',
		'000500',
		'000074',
		'000128',
		'000124',
		'000892',
		'000703',
		'000938',
		'000965',
		'000956',
		'000784',
		'000477',
		'000636',
		'000489',
		'000437',
		'000852',
		'000214',
		'000790',
		'000932',
		'000879',
		'000591',
		'000007',
		'000718',
		'000983',
		'000607',
		'000899',
		'000638',
		'000017',
		'000121',
		'000781',
		'000915',
		'000918',
		'000140',
		'000177',
		'000512',
		'000942',
		'000960',
		'000802',
		'000272',
		'000566',
		'000651',
		'000875',
		'000814',
		'000866',
		'000985',
		'000981',
		'000326',
		'000771',
		'000905',
		'000782',
		'000934',
		'000946',
		'000870',
		'000851',
		'000834',
		'000191',
		'000690',
		'000099',
		'000692',
		'000859',
		'000980',
		'000665',
		'000203',
		'000229',
		'000554',
		'000562',
		'000828',
		'000349',
		'000414',
		'000876',
		'000723',
		'000146',
		'000776',
		'000948',
		'000936',
		'000592',
		'000323',
		'000647',
		'000732',
		'000510',
		'000838',
		'000953',
		'000761',
		'000420',
		'000149',
		'000652',
		'000877',
		'000708',
		'000927',
		'000577',
		'000505',
		'000957',
		'000977',
		'000653',
		'000508',
		'000763',
		'000904',
		'000376',
		'000800',
		'000987',
		'000970',
		'000388',
		'000151',
		'000368',
		'000848',
		'000804',
		'000845',
		'000507',
		'000842',
		'000015',
		'000704',
		'000578',
		'000724',
		'000825',
		'100058',
		'000466',
		'100049',
		'000969',
		'000206',
		'000678',
		'000188',
		'000569',
		'000973',
		'000654',
		'000860',
		'000890',
		'000726',
		'000392',
		'000864',
		'000076',
		'000944',
		'000339',
		'000389',
		'000153',
		'000964',
		'000954',
		'000472',
		'000154',
		'000856',
		'000872',
		'000861',
		'000447',
		'000139',
		'000902',
		'000935',
		'000010',
		'000563',
		'000533',
		'000354',
		'000205',
		'000396',
		'000105',
		'000018',
		'000986',
		'000540',
		'000865',
		'000807',
		'000963',
		'000628',
		'000930',
		'000375',
		'000559',
		'100051',
		'000916',
		'000215',
		'000564',
		'000971',
		'000833',
		'000941',
		'000881',
		'000847',
		'000931',
		'000907',
		'000427',
		'000523',
		'000167',
		'000853',
		'000815',
		'000083',
		'000459',
		'000622',
		'000903',
		'100055',
		'000854',
		'000887',
		'000783',
		'000843',
		'000901',
		'000449',
		'000982',
		'000794',
		'000952',
		'000393',
		'100054',
		'000178',
		'000421',
		'000619',
		'000945',
		'000596',
		'000623',
		'000612',
		'000949',
		'000922',
		'000933',
		'000827',
		'000620',
		'000626',
		'000968',
		'000346',
		'000974',
		'000832',
		'000940',
		'000642',
		'000951',
		'000172',
		'000939',
		'000746',
		'000898',
		'000306',
		'000757',
		'100053',
		'000816',
		'000753',
		'000754',
		'000294',
		'000656',
		'000600',
		'000143',
		'100057',
		'000624',
		'000920',
		'000895',
		'000917',
		'000909',
		'000198',
		'000911',
		'000775',
		'000679',
		'000595',
		'000680',
		'000967',
		'000327',
		'000485',
		'000947',
		'000889',
		'000855',
		'000122',
		'000962',
		'000801',
		'000959',
		'000979',
		'000762',
		'000509',
		'000829',
		'000552',
		'000950',
		'000976',
		'000888',
		'000144',
		'000478',
		'000534',
		'000958',
		'000984',
		'000618',
		'000428',
		'000316',
		'000923',
		'000966',
		'000078',
		'000133',
		'100056',
		'000884',
		'000613',
		'000812',
		'000912',
		'000473',
		'000975',
		'000026',
		'000307',
		'000590',
		'000695',
		'000715',
		'000625',
		'000019',
		'000919',
		'000120',
		'000641',
		'000900',
		'000687',
		'000739',
		'000156',
		'000659',
		'000897',
		'000470',
		'000730',
		'000301',
		'000906',
		'000302',
		'000805',
		'000882',
		'100045',
		'000803',
		'000666',
		'000482')
			AND RE_EMPD = '05'
			AND RE_EMPP = '01'
			AND %NotDel%
	
	EndSql


	_cVetTabl  := {'TM0'}
	//_cVetTabl  := {'SPI'}
	WHILE (_cAlias)->(!EOF())

		For _ms := 1 to Len(_cVetTabl)
	
			dbSelectArea("SX2")
			dbSetOrder(1)
			dbSeek(_cVetTabl[_ms])
	
			_cCampTab := ""
			_cIntoCam := ""
			_lTemMAt := .F.
	
			dbSelectArea("SX3")
			dbSetOrder(1)
			dbSeek(SX2->X2_CHAVE)
	
			If Substr(RetSqlName(SX2->X2_CHAVE),4,2) == cEmpAnt
	
				While !Eof() .and. SX3->X3_ARQUIVO == SX2->X2_CHAVE 
	
					If SX3->X3_CONTEXT <> "V"
	
						If "_MAT" $ Alltrim(SX3->X3_CAMPO) 
							_lTemMAt	:=	.T.
							_cCampTab += Alltrim(SX3->X3_CAMPO) + " = '" + (_cAlias)->RE_MATP + "', "
						Elseif "_NUMFIC" $ Alltrim(SX3->X3_CAMPO)
							_cCampTab += Alltrim(SX3->X3_CAMPO) + " = '" + (_cAlias)->RE_MATP + "', "	
						Elseif RIGHT(Alltrim(SX3->X3_CAMPO),5) == "RHEXP" 
							_cCampTab += "'X'" + ", "
						Elseif RIGHT(Alltrim(SX3->X3_CAMPO),5) == "POSTO"
							_cCampTab += "'X'" + ", "
						Else
							_cCampTab += Alltrim(SX3->X3_CAMPO) + ", "
						EndIf
	
						_cIntoCam += Alltrim(SX3->X3_CAMPO) + ", "
	
					EndIf
	
					dbSelectArea("SX3")
					dbSkip()
	
				End
	
				XK001 := ""
				_cCampTab += " D_E_L_E_T_, (SELECT MAX(R_E_C_N_O_) FROM " + SX2->X2_CHAVE + '010' + ") + ROW_NUMBER() OVER(ORDER BY R_E_C_N_O_) AS R_E_C_N_O_"
				_cIntoCam += " D_E_L_E_T_,  R_E_C_N_O_ "
	
				If _lTemMat	
					_cPrefix	:=	Iif(SUBSTR(SX2->X2_CHAVE,1,1) == "S",SUBSTR(SX2->X2_CHAVE,2,2),SX2->X2_CHAVE)
					XK001 := " INSERT INTO " + SX2->X2_CHAVE + '010' + "( " + _cIntoCam + " )"
					XK001 += " SELECT " + _cCampTab + " "
					XK001 += "   FROM " + SX2->X2_CHAVE + '050' + " "
					XK001 += "  WHERE " + _cPrefix + "_MAT = " + ValtoSql((_cAlias)->RE_MATD) + "  "
					XK001 += "    AND D_E_L_E_T_ = ' ' "
					U_BIAMsgRun("Aguarde... Replicando tabela: " + SX2->X2_CHAVE ,,{|| TcSQLExec(XK001) })
	
				EndIf
	
			EndIf
	
		Next _ms

		(_cAlias)->(DbSkip())

	EndDo

	MsgINFO("Fim do processamento..." + msrhEnter + msrhEnter + " Necessário abrir a versão correspondente!!!" )

	RestArea( _cAreaAtu )

	RpcClearEnv()

Return

/*___________________________________________________________________________
¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
¦¦+-----------------------------------------------------------------------+¦¦
¦¦¦Função    ¦ fValidPerg ¦ Autor ¦ Marcos Alberto S    ¦ Data ¦ 18/09/12 ¦¦¦
¦¦+-----------------------------------------------------------------------+¦¦
¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯*/
Static Function fValidPerg()

	local i,j
	_sAlias := GetArea()
	dbSelectArea("SX1")
	dbSetOrder(1)
	cPerg := PADR(fPerg,fTamX1)
	aRegs:={}

	// Grupo/Ordem/Pergunta/Variavel/Tipo/Tamanho/Decimal/Presel/GSC/Valid/Var01/Def01/Cnt01/Var02/Def02/Cnt02/Var03/Def03/Cnt03/Var04/Def04/Cnt04/Var05/Def05/Cnt05/F3
	aAdd(aRegs,{cPerg,"01","Versão Orçamentária      ?","","","mv_ch1","C",10,0,0,"G","","mv_par01","","","","","","","","","","","","","","","","","","","","","","","","","ZB5"})
	aAdd(aRegs,{cPerg,"02","Revisão Ativa            ?","","","mv_ch2","C",03,0,0,"G","","mv_par02","","","","","","","","","","","","","","","","","","","","","","","","",""})
	aAdd(aRegs,{cPerg,"03","Ano de Referência        ?","","","mv_ch3","C",04,0,0,"G","","mv_par03","","","","","","","","","","","","","","","","","","","","","","","","",""})
	aAdd(aRegs,{cPerg,"04","Nova Revisão             ?","","","mv_ch4","C",03,0,0,"G","","mv_par04","","","","","","","","","","","","","","","","","","","","","","","","",""})
	For i := 1 to Len(aRegs)
		if !dbSeek(cPerg + aRegs[i,2])
			RecLock("SX1",.t.)
			For j:=1 to FCount()
				If j <= Len(aRegs[i])
					FieldPut(j,aRegs[i,j])
				Endif
			Next
			MsUnlock()
		Endif
	Next

	RestArea(_sAlias)

Return
