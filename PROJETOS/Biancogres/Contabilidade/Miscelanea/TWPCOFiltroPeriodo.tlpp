#INCLUDE "TOTVS.CH"
#INCLUDE "TOPCONN.CH"

static __oPergunte	as object

/*/{Protheus.doc} TWPCOFiltroPeriodo
@author Wlysses Cerqueira (Facile)
@since 27/10/2020
@version 1.0
@Projet A-35
@description Consolidação empresas grupo para filial 90. 
@type class
/*/

Class TWPCOFiltroPeriodo From LongClassName

	Public Data cVersao
	Public Data cRevisa
	Public Data cAnoRef
	Public Data cMesAno
	Public Data cTipoRef
	Public Data dDataFech

	Public Data cName
	Public Data aParam
	Public Data aParRet
	Public Data bConfirm
	Public Data lConfirm

	Public Method New() ConStructor
	Public Method Pergunte()

EndClass

Method New() Class TWPCOFiltroPeriodo

	::cName := "TWPCOFiltroPeriodo"
	::aParam := {}
	::aParRet := {}
	::bConfirm := {|| .T.}
	::lConfirm := .F.

	::cVersao:=SPACE(TAMSX3("ZBZ_VERSAO")[1])
	::cRevisa:=SPACE(TAMSX3("ZBZ_REVISA")[1])
	::cAnoRef:=SPACE(TAMSX3("ZBZ_ANOREF")[1])
	::cMesAno:=Space(6)
	::dDataFech:=CTOD("  /  /    ")
	::cTipoRef:=SPACE(TAMSX3("ZOF_TIPO")[1])

Return()

Method Pergunte(lMesAno, lDataFech, lTipoRef) Class TWPCOFiltroPeriodo

	Local lRet := .F.
	Local nTam := 1

	Default lMesAno := .F.
	Default lDataFech := .F.
	Default lTipoRef := .F.

	::bConfirm := {|| ValidData() }

	::aParam := {}

	::aParRet := {}

	private MV_PAR01
	varRef("self:cVersao","MV_PAR01")
	aAdd( ::aParam, {1, "Versão"	, ::cVersao	, "@!", ".T.", "ZB5", "AllWaysTrue()", , .T. })
	
	private MV_PAR02
	varRef("self:cRevisa","MV_PAR02")
	aAdd( ::aParam, {1, "Revisão"	, ::cRevisa	, "@!", ".T.", ""	, "AllWaysTrue()", , .T. })
	
	private MV_PAR03
	varRef("self:cAnoRef","MV_PAR03")
	aAdd( ::aParam, {1, "Ano Ref."	, ::cAnoRef	, "@!", ".T.", ""	, "AllWaysTrue()", , .T. })

	If (lMesAno)

		private MV_PAR04
		varRef("self:cMesAno","MV_PAR04")
		aAdd(::aParam, {1, "Mes/Ano", ::cMesAno, "@R !!/!!!!", ".T.", "", ".T.",,.F.})

	EndIf

	If (lDataFech)

		private MV_PAR05
		varRef("self:dDataFech","MV_PAR05")
		aAdd(::aParam, {1, "Dt fechamento", ::dDataFech, "@D", ".T.",,".T.",,.F.})

	EndIf

	If (lTipoRef)

		private MV_PAR06
		varRef("self:cTipoRef","MV_PAR06")
		aAdd(::aParam, {1, "Tipo Ref.", ::cTipoRef, "@!", ".T.", "", ".T.",,.F.})

	EndIf

	lRet:=ParamBox(::aParam, "Operações", ::aParRet, ::bConfirm,,,,,,::cName, .T., .T.)
	If (lRet)

		::cVersao := ::aParRet[nTam++]
		::cRevisa := ::aParRet[nTam++]
		::cAnoRef := ::aParRet[nTam++]

		If (lMesAno)

			::cMesAno := ::aParRet[nTam++]

		EndIf

		If (lDataFech)

			::dDataFech := ::aParRet[nTam++]

		EndIf

		If (lTipoRef)

			::cTipoRef := ::aParRet[nTam++]

		EndIf

	EndIf

	varUnref("self:cVersao")
	varUnref("self:cRevisa")
	varUnref("self:cAnoRef")
	
	If (lMesAno)
		varUnref("self:cMesAno")
	endif
	
	If (lDataFech)
		varUnref("self:dDataFech")
	endif
	
	If (lTipoRef)
		varUnref("self:cTipoRef")
	endif

Return(lRet)

static function ValidData() as logical
	local lDataValid as logical
	lDataValid:=ExistCPO("ZB5",MV_PAR01+MV_PAR02+MV_PAR03)
	return(lDataValid)

class __TWPCOFiltroPeriodo
	static Method Get() as object
	static Method Pergunte() as logical
end class

static Method Get() class __TWPCOFiltroPeriodo
	if (!(valtype(__oPergunte)=="O"))
		__oPergunte:=TWPCOFiltroPeriodo():New()
	endif
	return(__oPergunte)

static Method Pergunte(lMesAno,lDataFech,lTipoRef) class __TWPCOFiltroPeriodo
	local lPergunte				as logical
	__oPergunte:=TWPCOFiltroPeriodo():New()
	lPergunte:=__oPergunte:Pergunte(@lMesAno,@lDataFech,@lTipoRef)
	return(lPergunte)
