#Include "TOTVS.CH"
#Include "Protheus.CH"
#Include "topconn.ch"

Class TPortalIntegracaoCC from LongClassName
	
	Public Method New() Constructor
	Public Method Get()
	Public Method List()
	public Method GetPorContrato()
	Public Method ConfirmReg()	
	Public Method AtualizaContrato()
	Public Method AtualizaPedido()
	Public Method AtualizaVencedor()
	
EndClass


Method New() Class TPortalIntegracaoCC

Return


Method ConfirmReg(lNovo, cID, cCotacao, cItem, cNUser) Class TPortalIntegracaoCC
	
	Local cQuery 		:= ""
	Local nStatus		:= 0
	Local lRet			:= .T.
	
	Default cNUser		:= 'JOB'
	
	cQuery := " UPDATE BZINTEGRACAO_COTACAO_PORTAL SET 							"
	cQuery += " DATA_HORA_PROTHEUS 	= GETDATE()									"
	cQuery += " ,STATUS 				= 'P'  									"
	If(lNovo)
		cQuery += " ,COTACAO			= '"+cCotacao+"' 	 					"
		cQuery += " ,COTACAO_ITEM	 	= '"+cItem+"'	 						"
	EndIf
	cQuery += " WHERE ID 		= '"+AllTrim(cvaltochar(cID))+"'				"
	
	Conout("Portal Integração - Query: "+cQuery)
	
	nStatus := TCSqlExec(cQuery)
   
	If (nStatus < 0)
		lRet	:= .F.
	EndIf
	
Return lRet

Method AtualizaContrato(cCotacao, cCotacaoItem, cFornece, cLoja, cProduto, cProposta, cContrato, cItemContrato) Class TPortalIntegracaoCC
	
	Local cQuery 		:= ""
	Local nStatus		:= 0
	Local lRet			:= .T.
	
	Default cNUser		:= 'JOB'
	
	cQuery := " UPDATE BZINTEGRACAO_COTACAO_PORTAL SET 							"
	cQuery += " CONTRATO		 	= '"+cContrato+"'  ,						"
	cQuery += " CONTRATO_ITEM	 	= '"+cItemContrato+"'	 					"
	cQuery += " WHERE COTACAO 		= '"+AllTrim(cCotacao)+"'					"
	cQuery += " AND COTACAO_ITEM	= '"+AllTrim(cCotacaoItem)+"'				"
	cQuery += " AND FORNE_COD		= '"+AllTrim(cFornece)+"'					"
	cQuery += " AND FORNE_LOJA		= '"+AllTrim(cLoja)+"'						"
	cQuery += " AND PRODUTO			= '"+AllTrim(cProduto)+"'					"
	cQuery += " AND PROPOSTA		= '"+AllTrim(cProposta)+"'					"
	
	Conout("Portal Integração - AtualizaContrato - Query: "+cQuery)
	
	nStatus := TCSqlExec(cQuery)
   
	If (nStatus < 0)
		lRet	:= .F.
	EndIf
	
Return lRet

Method AtualizaPedido(cCotacao, cCotacaoItem, cFornece, cLoja, cProduto, cProposta, cPedido, cItemPedido) Class TPortalIntegracaoCC
	
	Local cQuery 		:= ""
	Local nStatus		:= 0
	Local lRet			:= .T.
	
	Default cNUser		:= 'JOB'
	
	cQuery := " UPDATE BZINTEGRACAO_COTACAO_PORTAL SET 							"
	cQuery += " PEDIDO			 	= '"+cPedido+"' , 							"
	cQuery += " PEDIDO_ITEM		 	= '"+cItemPedido+"'		 					"
	cQuery += " WHERE COTACAO 		= '"+AllTrim(cCotacao)+"'					"
	cQuery += " AND COTACAO_ITEM	= '"+AllTrim(cCotacaoItem)+"'				"
	cQuery += " AND FORNE_COD		= '"+AllTrim(cFornece)+"'					"
	cQuery += " AND FORNE_LOJA		= '"+AllTrim(cLoja)+"'						"
	cQuery += " AND PRODUTO			= '"+AllTrim(cProduto)+"'					"
	cQuery += " AND PROPOSTA		= '"+AllTrim(cProposta)+"'					"
	
	Conout("Portal Integração - AtualizaPedido - Query: "+cQuery)
	
	nStatus := TCSqlExec(cQuery)
   
	If (nStatus < 0)
		lRet	:= .F.
	EndIf
	
Return lRet

Method AtualizaVencedor(cCotacao, cCotacaoItem, cFornece, cLoja, cProduto, cProposta) Class TPortalIntegracaoCC
	
	Local cQuery 		:= ""
	Local nStatus		:= 0
	Local lRet			:= .T.
	
	Default cNUser		:= 'JOB'
	
	
	cQuery := " UPDATE BZINTEGRACAO_COTACAO_PORTAL SET 							"
	cQuery += " VENCEDOR			= '1' 			 							"
	cQuery += " WHERE COTACAO 		= '"+AllTrim(cCotacao)+"'					"
	cQuery += " AND COTACAO_ITEM	= '"+AllTrim(cCotacaoItem)+"'				"
	cQuery += " AND FORNE_COD		= '"+AllTrim(cFornece)+"'					"
	cQuery += " AND FORNE_LOJA		= '"+AllTrim(cLoja)+"'						"
	cQuery += " AND PRODUTO			= '"+AllTrim(cProduto)+"'					"
	cQuery += " AND PROPOSTA		= '"+AllTrim(cProposta)+"'					"
	
	Conout("Portal Integração - AtualizaPedido - Query: "+cQuery)
	
	nStatus := TCSqlExec(cQuery)
   
	If (nStatus < 0)
		lRet	:= .F.
	EndIf
	
Return lRet


Method Get() Class TPortalIntegracaoCC
	
	Local cQuery			:= ""
	Local oList				:= ArrayList():New()
	
	cQuery	+= " select 								 									"
	cQuery	+= " DT_INI_CON=CONVERT(varchar(8), DATA_INICIO_CONTRATO, 112), 				"
	cQuery	+= " DT_FIN_CON=CONVERT(varchar(8), DATA_FINAL_CONTRATO, 112), 					"
	cQuery	+= " DT_VALIDADE=CONVERT(varchar(8), DATA_VALIDADE, 112),	 					"
	cQuery	+= " DT_NECESSIDADE=CONVERT(varchar(8), DATA_NECESSIDADE, 112),	 				"
	
	cQuery	+= " * from																		"
	cQuery	+= " BZINTEGRACAO_COTACAO_PORTAL												"
	cQuery	+= " where STATUS = 'A' AND DATA_HORA_PROTHEUS IS NULL	AND NUMERO_SC <> ''		"
	cQuery	+= " AND ORIGEM != '2'															"
	
	cQuery	+= "  order by  FILIAL, COTACAO, FORNE_COD, FORNE_LOJA, PROPOSTA, COTACAO_ITEM												"
	
	oList	:= ::List(cQuery)
	
Return(oList)


Method GetPorContrato(_cContra, _cContraItem) Class TPortalIntegracaoCC
	
	Local cQuery			:= ""
	Local oList				:= ArrayList():New()
	
	cQuery	+= " select 								 									"
	cQuery	+= " DT_INI_CON=CONVERT(varchar(8), DATA_INICIO_CONTRATO, 112), 				"
	cQuery	+= " DT_FIN_CON=CONVERT(varchar(8), DATA_FINAL_CONTRATO, 112), 					"
	cQuery	+= " DT_VALIDADE=CONVERT(varchar(8), DATA_VALIDADE, 112),	 					"
	cQuery	+= " DT_NECESSIDADE=CONVERT(varchar(8), DATA_NECESSIDADE, 112),	 					"
	
	cQuery	+= " * from																		"
	cQuery	+= " BZINTEGRACAO_COTACAO_PORTAL												"
	cQuery	+= " where CONTRATO = '"+_cContra+"'											"
	cQuery	+= " AND CONTRATO_ITEM = '"+_cContraItem+"'										"
	
	conout(cQuery)
	oList	:= ::List(cQuery)
	
	
Return(oList)


Method List(cQuery) Class TPortalIntegracaoCC
	
	Local cAliasTemp		:= GetNextAlias()
//	Local cQuery			:= ""
	Local oCCStruct			:= Nil
	Local oList				:= ArrayList():New()
	Local lOk				:= .T.
	Local cCodigo			:= ""
	Local cMsgLog			:= ""
	
	TcQuery cQuery New Alias (cAliasTemp)
	
	While (!(cAliasTemp)->(EoF()))
		
		lOk					:= .T.
		cMsgLog				:= ""
		oCCStruct			:= TCCStruct():New()
		
		oCCStruct:cNumero	:= (cAliasTemp)->COTACAO
		oCCStruct:cEmp      := (cAliasTemp)->EMPRESA
		oCCStruct:cFil      := (cAliasTemp)->FILIAL
		oCCStruct:cID 	    := (cAliasTemp)->CODIGO
		
		cChave := ""
		bValid	:= {|| }
		
		If (Empty((cAliasTemp)->COTACAO))
			cChave	:= AllTrim((cAliasTemp)->CODIGO)
			bValid	:= {|| AllTrim((cAliasTemp)->CODIGO) == cChave }
		Else
			cChave	:= AllTrim((cAliasTemp)->COTACAO)
			bValid	:= {|| AllTrim((cAliasTemp)->COTACAO) == cChave }
		EndIf
		
		
		While (!(cAliasTemp)->(EoF())  .And.;
		 Eval(bValid))
			
			DbSelectArea('SA2')
			SA2->(DbSetOrder(1))
			
			If (SA2->(DbSeek(xFilial('SA1')+PADR((cAliasTemp)->FORNE_COD, TamSx3("A2_COD")[1])+PADR((cAliasTemp)->FORNE_LOJA, TamSx3("A2_LOJA")[1]))))
				
				DbSelectArea('SB1')
				SB1->(DbSetOrder(1))
				If (SB1->(DbSeek(xFilial('SB1')+PADR((cAliasTemp)->PRODUTO, TamSx3("B1_COD")[1]))))
					
					oCCItemStruct	 				:= TCCItemStruct():New()
					oCCItemStruct:cID		 	   	:= (cAliasTemp)->ID
					oCCItemStruct:cNomeFornece 	   	:= SA2->A2_NOME
					oCCItemStruct:cForMail			:= SA2->A2_EMAIL
					oCCItemStruct:cFornece 	    	:= (cAliasTemp)->FORNE_COD
					oCCItemStruct:cLoja	    		:= (cAliasTemp)->FORNE_LOJA
					oCCItemStruct:cCond      	  	:= SA2->A2_COND 
					oCCItemStruct:cContato   	  	:= (cAliasTemp)->CONTATO
					oCCItemStruct:cTipoFrete	   	:= IIF((cAliasTemp)->TIPO_FRETE == '1', 'C', 'F')
					oCCItemStruct:cMoeda       		:= (cAliasTemp)->MOEDA
					oCCItemStruct:dEmissao  	   	:= (cAliasTemp)->DATA_EMISSAO
						
					oCCItemStruct:cNumSc        	:= (cAliasTemp)->NUMERO_SC
					oCCItemStruct:cItemSc       	:= (cAliasTemp)->ITEM_SC
					
					oCCItemStruct:cNumPro			:= (cAliasTemp)->PROPOSTA
					oCCItemStruct:cProd            	:= (cAliasTemp)->PRODUTO
					oCCItemStruct:cItem            	:= (cAliasTemp)->ITEM
					
					If (!Empty((cAliasTemp)->COTACAO_ITEM))
						oCCItemStruct:cItem			:= (cAliasTemp)->COTACAO_ITEM
					EndIf
					
					oCCItemStruct:cUM				:= SB1->B1_UM 
					oCCItemStruct:cSegUM			:= SB1->B1_SEGUM //TODO tratar fator conversão
					oCCItemStruct:nQuantSegUM 	    := (cAliasTemp)->QUANTIDADE
					
					oCCItemStruct:nQuant          	:= (cAliasTemp)->QUANTIDADE
					oCCItemStruct:nPreco          	:= (cAliasTemp)->PRECO
					oCCItemStruct:nTotal          	:= ((cAliasTemp)->QUANTIDADE * (cAliasTemp)->PRECO)
					oCCItemStruct:nDesc           	:= 0
					
					oCCItemStruct:cTes            	:= ""
					oCCItemStruct:cMarca          	:= (cAliasTemp)->MARCA
					oCCItemStruct:nAliqIpi        	:= (cAliasTemp)->ALIQ_IPI
					oCCItemStruct:cObervacao      	:= (cAliasTemp)->OBSERVACAO
					oCCItemStruct:nPrazo          	:= (cAliasTemp)->PRAZO
					oCCItemStruct:cOrcForn        	:= (cAliasTemp)->FORNE_ORCAMENTO
					oCCItemStruct:dValidade       	:= (cAliasTemp)->DT_VALIDADE
					oCCItemStruct:cFlag           	:= ""
					
					oCCItemStruct:nValorSub      	:= (cAliasTemp)->VALOR_SUB
					
					oCCItemStruct:dInicioContrato  	:= (cAliasTemp)->DT_INI_CON
					oCCItemStruct:dFinalContrato   	:= (cAliasTemp)->DT_FIN_CON
					oCCItemStruct:dNecessidade		:= (cAliasTemp)->DT_NECESSIDADE
					
					oCCItemStruct:cCondCotacao		:= (cAliasTemp)->COND_PAG
					
					//oCCItemStruct:cEmail          := ""
					//oCCItemStruct:dDataChe		:= ""
					
					oCCItemStruct:cTipoServico		:= (cAliasTemp)->TIPO_SERVICO
					
					oCCStruct:oItens:Add(oCCItemStruct)
				
				Else
					lOk			:= .F.
					cMsgLog 	+= "[Portal Integração - Solicitação Servico/Produto:  "+cCodigo+"/"+(cAliasTemp)->PRODUTO+"] => não encontrado."+ CRLF
				EndIf
			Else	
				lOk			:= .F.
				cMsgLog 	+= "[Portal Integração - Solicitação Servico/Fornecedor: "+cCodigo+"/"+(cAliasTemp)->FORNE_COD+"] => não encontrado."+ CRLF
			EndIf
			
			(cAliasTemp)->(DbSkip())
		EndDo
		
		If (lOk)
			oList:Add(oCCStruct)
		Else
			ConOut(cMsgLog)
		EndIf		
	EndDo
	
	(cAliasTemp)->(DbCloseArea())
	
Return(oList)
