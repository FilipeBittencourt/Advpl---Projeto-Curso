#Include "TOTVS.CH"
#Include "Protheus.CH"

/*/{Protheus.doc} TFaturamentoAutomatico
@description Classe com metodos responsaveis por validar e disparar o faturamento automatico
@author Gabriel / Fernando Facile
@since 05/09/2019
@version 1.0
@type class
/*/
Class TFaturamentoAutomatico From LongClassName

	Public Data oPedidos
	Public Data lOk
	Public Data cIdEnt
	Public Data cUrl

	Public Method New() Constructor
	Public Method GetPedidosFaturar(_cCarga,_cEmp)
	Public Method Faturar()	
	Public Method GetSerie()
	Public Method VldCarga(_cCarga)
	Public Method MonitoraNFe(cSerie, cNota)

EndClass

Method New() Class TFaturamentoAutomatico

	::oPedidos	:=	ArrayList():New()
	::lOk		:=	.F.
	::cIdEnt    := GetCfgEntidade()
	::cUrl		:= GetNewPar("MV_SPEDURL","")

Return()

Method GetPedidosFaturar(_cCarga,_cEmp) Class TFaturamentoAutomatico

	Local _cAlias	:=	GetNextAlias()
	Local _cPed		:=	""
	Local _oItens	
	Local _aItens	:=	{}
	Local _lOk		:=	.T.
	Local _cZZV		:=	""
	Local _cZZW		:=	""
	Local _cSE4		:=	""
	Local _cSF4		:=	""
	Local _cSA4		:=	""
	Local _cSB1		:=	""
	Local _cSC9		:=  ""
	Local _lOkLM	:= .T.

	Default _cEmp	:=	""

	Do Case
		Case (_cEmp == '01')
		_cZZV		:=	"%ZZV010%"
		_cZZW		:=	"%ZZW010%"
		_cSE4		:=	"%SE4010%"
		_cSF4		:=	"%SF4010%"
		_cSA4		:=	"%SA4010%"
		_cSB1		:=	"%SB1010%"
		_cSC9		:=  "%SC9010%"
		Case (_cEmp == '05')
		_cZZV		:=	"%ZZV050%"
		_cZZW		:=	"%ZZW050%"
		_cSE4		:=	"%SE4010%"
		_cSF4		:=	"%SF4050%"
		_cSA4		:=	"%SA4010%"
		_cSB1		:=	"%SB1010%"
		_cSC9		:=  "%SC9050%"
		Case (_cEmp == '13')
		_cZZV		:=	"%ZZV130%"
		_cZZW		:=	"%ZZW130%"
		_cSE4		:=	"%SE4010%"
		_cSF4		:=	"%SF4130%"
		_cSA4		:=	"%SA4010%"
		_cSB1		:=	"%SB1010%"
		_cSC9		:=  "%SC9130%"
		OtherWise
		ConOut('BACP0012::Empresa/Filial não Cadastrada... '+_cEmp+'/'+cFilAnt+' - '+ Time())
		Return
	EndCase


	If cEmpAnt == "07"
		BeginSql Alias _cAlias
			%NoParser%
			SELECT ISNULL(SC9.C9_PEDIDO, '') C9_PEDIDO
			,ISNULL(SC9.C9_ITEM, '') C9_ITEM
			,ISNULL(SC9.C9_SEQUEN, '') C9_SEQUEN
			,ISNULL(SC9.C9_QTDLIB, 0) C9_QTDLIB
			,ISNULL(SC9.C9_PRCVEN, 0) C9_PRCVEN
			,ISNULL(SC9.C9_PRODUTO, '') C9_PRODUTO
			,ISNULL(SF4.F4_ISS, '')	F4_ISS
			,ISNULL(SC9.R_E_C_N_O_, 0) C9RECNO
			,ISNULL(SC5.R_E_C_N_O_, 0) C5RECNO
			,ISNULL(SC6.R_E_C_N_O_, 0) C6RECNO
			,ISNULL(SE4.R_E_C_N_O_, 0) E4RECNO
			,ISNULL(SB1.R_E_C_N_O_, 0) B1RECNO
			,ISNULL(SB2.R_E_C_N_O_, 0) B2RECNO
			,ISNULL(SF4.R_E_C_N_O_, 0) F4RECNO
			,ISNULL(B2_LOCAL, '') B2_LOCAL
			,ISNULL(SC9.C9_QTDLIB2, 0) C9_QTDLIB2
			,ISNULL(SC5.C5_YLINHA, '') C5_YLINHA
			,ISNULL(SC5.C5_CLIENTE, '') C5_CLIENTE
			,ISNULL(SC5.C5_YEMP, '') C5_YEMP
			,ZZV.ZZV_TRANSP
			,ISNULL(SA4.A4_YTIPO, '0') A4_YTIPO
			,case when ZZV.ZZV_CFRETE = 'S' then '1' else '2' end NTPFRETE

			FROM %Exp:_cZZV% ZZV WITH (NOLOCK)

			JOIN %Exp:_cZZW% ZZW WITH (NOLOCK) ON 
			ZZV.ZZV_FILIAL = ZZW.ZZW_FILIAL
			AND ZZV.ZZV_CARGA = ZZW.ZZW_CARGA
			AND ZZW_CCLI = '010064'
			AND ZZW.%NotDel%

			JOIN %Exp:_cSC9% SC9B WITH (NOLOCK) ON 
			SC9B.C9_FILIAL = ZZW.ZZW_FILIAL 
			AND SC9B.C9_PEDIDO = ZZW.ZZW_PEDIDO
			AND SC9B.C9_ITEM = ZZW.ZZW_ITEM
			AND SC9B.C9_SEQUEN = ZZW.ZZW_SEQUEN
			AND SC9B.D_E_L_E_T_=''

			LEFT JOIN SC5070 SC5 WITH (NOLOCK) ON 
			SC5.C5_FILIAL = '01'
			AND SC5.C5_YEMPPED = %Exp:_cEmp%
			AND SC5.C5_YPEDORI = ZZW.ZZW_PEDIDO
			AND SC5.%NotDel%

			LEFT JOIN SC9070 SC9 WITH (NOLOCK) ON 
			SC9.C9_FILIAL = SC5.C5_FILIAL
			AND SC9.C9_AGREG = ZZW.ZZW_CARGA
			AND SC9.C9_BLINF = %Exp:_cEmp% + SC9B.C9_NFISCAL+SC9B.C9_SERIENF+SC9B.C9_PEDIDO+SC9B.C9_ITEM+SC9B.C9_SEQUEN		
			AND SC9.C9_BLCRED = ''
			AND SC9.C9_BLEST = ''
			AND SC9.D_E_L_E_T_=''

			LEFT JOIN SC6070 SC6 WITH (NOLOCK) ON SC9.C9_FILIAL = SC6.C6_FILIAL
			AND SC9.C9_PEDIDO = SC6.C6_NUM
			AND SC6.C6_ITEM = SC9.C9_ITEM
			AND SC6.%NotDel%

			LEFT JOIN %Exp:_cSE4% SE4 WITH (NOLOCK) ON SC5.C5_CONDPAG = SE4.E4_CODIGO
			AND SE4.%NotDel%

			LEFT JOIN SF4070 SF4 WITH (NOLOCK) ON SF4.F4_FILIAL = SC6.C6_FILIAL
			AND SF4.F4_CODIGO = SC6.C6_TES
			AND SF4.%NotDel%

			LEFT JOIN %Exp:_cSA4% SA4(NOLOCK) ON SA4.A4_COD = ZZV.ZZV_TRANSP

			LEFT JOIN SB2070 SB2 WITH (NOLOCK) ON SB2.B2_FILIAL = SC6.C6_FILIAL
			AND SB2.B2_COD = SC6.C6_PRODUTO
			AND SB2.B2_LOCAL = SC6.C6_LOCAL
			AND SB2.%NotDel%

			LEFT JOIN %Exp:_cSB1% SB1 WITH (NOLOCK) ON SB2.B2_COD = SB1.B1_COD
			AND SB1.%NotDel%
			WHERE ZZV.ZZV_FILIAL = '01'
			AND ZZV.ZZV_CARGA = %Exp:_cCarga%
			AND ZZV.%NotDel%

			AND NOT EXISTS 
			(
			SELECT 1 FROM SC9070 SC9X WITH (NOLOCK) 
			WHERE SC9X.C9_FILIAL = SC5.C5_FILIAL
			AND SC9X.C9_PEDIDO = SC5.C5_NUM
			AND SC9X.C9_AGREG = ZZW.ZZW_CARGA
			AND SC9X.C9_ITEM = ZZW.ZZW_ITEM
			AND SC9X.C9_BLCRED = '10'
			AND SC9X.C9_BLEST = '10'
			AND SC9X.D_E_L_E_T_=''
			)
			ORDER BY ZZV_CARGA,ZZW_PEDIDO,ZZW_ITEM,ZZW_SEQUEN
			
		EndSql

	Else

		BeginSql Alias _cAlias
			%NoParser%

			SELECT SC9.C9_PEDIDO
			,SC9.C9_ITEM
			,C9_SEQUEN
			,C9_QTDLIB
			,C9_PRCVEN
			,C9_PRODUTO
			,SF4.F4_ISS
			,SC9.R_E_C_N_O_ C9RECNO
			,SC5.R_E_C_N_O_ C5RECNO
			,SC6.R_E_C_N_O_ C6RECNO
			,SE4.R_E_C_N_O_ E4RECNO
			,SB1.R_E_C_N_O_ B1RECNO
			,SB2.R_E_C_N_O_ B2RECNO
			,SF4.R_E_C_N_O_ F4RECNO
			,B2_LOCAL
			,C9_QTDLIB2
			,SC5.C5_YLINHA
			,SC5.C5_CLIENTE
			,SC5.C5_YEMP
			,ZZV.ZZV_TRANSP
			,ISNULL(SA4.A4_YTIPO,'0') A4_YTIPO
			,case when ZZV.ZZV_CFRETE = 'S' then '1' else '2' end NTPFRETE

			FROM %TABLE:ZZV% ZZV WITH(NOLOCK)

			JOIN %TABLE:ZZW% ZZW WITH(NOLOCK) ON 
			ZZV.ZZV_FILIAL = ZZW.ZZW_FILIAL
			AND ZZV.ZZV_CARGA = ZZW.ZZW_CARGA
			AND ZZW.%NotDel%

			JOIN %TABLE:SC5% SC5 WITH(NOLOCK) ON 
			SC5.C5_FILIAL = ZZW.ZZW_FILIAL
			AND SC5.C5_NUM = ZZW.ZZW_PEDIDO
			AND SC5.%NotDel%

			JOIN %TABLE:SC9% SC9 WITH(NOLOCK) ON 
			SC9.C9_FILIAL = SC5.C5_FILIAL
			AND SC9.C9_PEDIDO = SC5.C5_NUM
			AND SC9.C9_AGREG = ZZW.ZZW_CARGA
			AND SC9.C9_ITEM = ZZW.ZZW_ITEM
			AND SC9.C9_SEQUEN = ZZW.ZZW_SEQUEN
			AND SC9.C9_BLCRED = ''
			AND SC9.C9_BLEST = ''
			AND SC9.%NotDel%

			JOIN %TABLE:SC6% SC6 WITH(NOLOCK) ON 
			SC9.C9_FILIAL = SC6.C6_FILIAL
			AND SC9.C9_PEDIDO = SC6.C6_NUM
			AND SC6.C6_ITEM = SC9.C9_ITEM
			AND SC6.%NotDel%

			JOIN %TABLE:SE4% SE4 WITH(NOLOCK) ON 
			SC5.C5_CONDPAG = SE4.E4_CODIGO
			AND SE4.%NotDel%

			JOIN %TABLE:SF4% SF4 WITH(NOLOCK) ON 
			SF4.F4_FILIAL = SC6.C6_FILIAL 
			AND SF4.F4_CODIGO = SC6.C6_TES
			AND SF4.%NotDel%

			LEFT JOIN %TABLE:SA4% SA4 (NOLOCK) ON 
			SA4.A4_COD = ZZV.ZZV_TRANSP

			JOIN %TABLE:SB2% SB2 WITH(NOLOCK) ON 
			SB2.B2_FILIAL = SC6.C6_FILIAL
			AND SB2.B2_COD = SC6.C6_PRODUTO
			AND SB2.B2_LOCAL = SC6.C6_LOCAL
			AND SB2.%NotDel%

			JOIN %TABLE:SB1% SB1 WITH(NOLOCK) ON 
			SB2.B2_COD = SB1.B1_COD
			AND SB1.%NotDel%
			WHERE ZZV.ZZV_FILIAL = %XFILIAL:ZZV%
			AND ZZV.ZZV_CARGA = %Exp:_cCarga%
			AND ZZV.%NotDel%

			ORDER BY ZZV_CARGA,C9_PEDIDO,C9_ITEM,C9_SEQUEN

		EndSql

	EndIf

	If (_cAlias)->(!EOF())

		_lOkLM	:= .T.

		//Primeiro loop - Verificar se nao tem nenhum pedido com problema e neste caso
		While (_cAlias)->(!EOF())

			If Empty((_cAlias)->C9_PEDIDO)

				ConOut('TFaturamentoAutomatico:: Faturamento Carga: '+_cCarga +', EMPRESA: '+cEmpAnt+' ==>  OCORREU ALGUM PROBLEMA COM A LIBERACAO DE PEDIDOS. '+ Time())
				_lOkLM	:= .F.

			EndIf

			(_cAlias)->(DbSkip())
		EndDo

		If ( !_lOkLM )

			(_cAlias)->(DbCloseArea())
			Return

		EndIf
		
		(_cAlias)->(DbGoTop())
		////primeiro loop
		

		_cPed	:=	(_cAlias)->C9_PEDIDO
		_oItens	:=	TPedidosFaturar():New()
		_oItens:cFilPed	:=	cFilAnt
		_oItens:cNumPed	:=	(_cAlias)->C9_PEDIDO
		_oItens:cMarca	:=	(_cAlias)->C5_YLINHA	
		_oItens:cCliente	:=	(_cAlias)->C5_CLIENTE	
		_oItens:cEmpresa	:=	(_cAlias)->C5_YEMP
		_oItens:cTransport	:=	(_cAlias)->ZZV_TRANSP
		_oItens:nTipoFrete	:=	Val((_cAlias)->NTPFRETE)

		_oItens:GetSerie()

		While (_cAlias)->(!EOF())

			If !Empty((_cAlias)->C9_PEDIDO)

				If _cPed <> (_cAlias)->C9_PEDIDO

					_oItens:aItensFaturar := _aItens
					::oPedidos:add(_oItens)

					_oItens	:=	TPedidosFaturar():New()
					_oItens:cFilPed	:=	cFilAnt
					_oItens:cNumPed	:=	(_cAlias)->C9_PEDIDO
					_oItens:cMarca	:=	(_cAlias)->C5_YLINHA		
					_oItens:cCliente	:=	(_cAlias)->C5_CLIENTE	
					_oItens:cEmpresa	:=	(_cAlias)->C5_YEMP
					_oItens:cTransport	:=	(_cAlias)->ZZV_TRANSP
					_oItens:nTipoFrete	:=	Val((_cAlias)->NTPFRETE)

					_oItens:GetSerie()
					_aItens	:=	{}
					_cPed	:=	(_cAlias)->C9_PEDIDO


				EndIf

				aadd(_aItens,{ (_cAlias)->C9_PEDIDO,;
				(_cAlias)->C9_ITEM,;
				(_cAlias)->C9_SEQUEN,;
				(_cAlias)->C9_QTDLIB,;
				(_cAlias)->C9_PRCVEN,;
				(_cAlias)->C9_PRODUTO,;
				(_cAlias)->F4_ISS=="S",;
				(_cAlias)->C9RECNO,;
				(_cAlias)->C5RECNO,;
				(_cAlias)->C6RECNO,;
				(_cAlias)->E4RECNO,;
				(_cAlias)->B1RECNO,;
				(_cAlias)->B2RECNO,;
				(_cAlias)->F4RECNO,;
				(_cAlias)->B2_LOCAL,;
				0,;
				(_cAlias)->C9_QTDLIB2})

			Else

				_aItens	:=	{}
				Exit

			EndIf

			(_cAlias)->(DbSkip())
		EndDo

		_oItens:aItensFaturar := _aItens
		::oPedidos:add(_oItens)

	EndIf

	(_cAlias)->(DbCloseArea())

Return

Method Faturar() Class TFaturamentoAutomatico

Return()

Method MonitoraNFe(cSerie, cNota, lRetMsg) Class TFaturamentoAutomatico

	Local aNotas 	:= { cSerie, cNota, cNota }
	Local aRetorno	:= {}
	Local cAviso 	:= ""
	Local xRet		:= ""

	Default lRetMsg := .F.

	aRetorno := ProcMonitorDoc(::cIdEnt, ::cUrl, aNotas, 1, "", .F., @cAviso)

	If Len(aRetorno) == 0

		If lRetMsg

			xRet := "Nota não transmitida!"

		Else

			xRet := aRetorno

		EndIf

	Else

		If lRetMsg

			xRet := AllTrim(aRetorno[1, 9])

		Else

			xRet := aRetorno

		EndIf

	EndIf

Return(xRet)


Method VldCarga(_cCarga, _lShowMsg) Class TFaturamentoAutomatico

	Local _nRet := 0
	Local _cRet

	Default _lShowMsg := .T.

	ZZV->(DbSetOrder(1))
	If ZZV->(DbSeek(XFilial("ZZV")+_cCarga))


		If Empty(ZZV->ZZV_TRANSP) .Or. AllTrim(ZZV->ZZV_TRANSP) $ "000051_000052"

			_nRet := 1
			_cRet := "TFaturamentoAutomatico:VldCarga - Transportador Nao Informada ou Invalida para Faturamento!"

		ElseIf Empty(ZZV->ZZV_TICKET) .Or.;
		Empty(ZZV->ZZV_PLACA) .Or.;
		Empty(ZZV->ZZV_MOTOR) .Or.;
		Empty(ZZV->ZZV_PL_UF) .Or.;
		Empty(ZZV->ZZV_CODMOT)

			_nRet := 2
			_cRet := "Faturamento Automatico Valida Carga: !!!!!****ATENÇÃO****!!!!! - Dados do Ticket e Transporte da Carga Incompletos e/ou não informados! O Faturamento será permitido."

		ElseIf (ZZV->ZZV_CONF <> "S")

			_nRet := 2
			_cRet := "Faturamento Automatico Valida Carga: !!!!!****ATENÇÃO****!!!!! - Carga Não Conferida! O Faturamento será permitido."

		EndIf

	Else

		_nRet := 1
		_cRet := "TFaturamentoAutomatico:VldCarga - Carga Não Encontrada!"

	EndIf

	If ( _nRet > 0 )

		If !IsBlind() .And. _lShowMsg

			MsgAlert(_cRet)

		Else

			ConOut(_cRet)

		EndIf

	EndIf

Return(_nRet)