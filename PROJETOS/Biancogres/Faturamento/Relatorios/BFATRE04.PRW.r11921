#Include 'Protheus.ch'
#Include 'Report.ch'
#Include 'TopConn.ch'

/*/{Protheus.doc} u_BFATRE04()
Relatório de Notas Fiscais não classificadas
@author Filipe Bittencourt - Facile sistemas
@since 01.07.2021
@version 1.00
/*/

User Function BFATRE04()

  Local oReport
  Local cPerg := "BFATRE04"

  /*
  RpcClearEnv()
  If Select("SX6") <= 0
    RPCSetEnv("07", "01", NIL, NIL, "COM", NIL, {"SB1","SF1", "SF2"})
  EndIf
  */

  If !ValidPerg()
    Return .F.
  EndIf

  oReport := ReportDef()
  oReport:SetLandscape()
  oReport:PrintDialog()

Return()

Static Function ReportDef()
  Local oReport
  Local oSecCE


  oReport := TReport():New("BFATRE04","Relatório de Notas Fiscais não classificadas","BFATRE04",{|oReport| PrintReport(oReport)},"Relatório de Notas Fiscais não classificadas")

  oSecCE := TRSection():New(oReport,"CE","ZZA")

  TRCell():New(oSecCE,"ZAA_FILIAL","ZZA","Filial",, 10)
  TRCell():New(oSecCE,"ZAA_DOC","ZZA")
  TRCell():New(oSecCE,"ZAA_SERIE","ZZA",,,7)
  TRCell():New(oSecCE,"ZAA_CHAVE","ZZA")
  TRCell():New(oSecCE,"NATUREZA",,"Nat.Operacao",,30)
  TRCell():New(oSecCE,"ZAA_CGCEMI","ZZA",,,20)
  TRCell():New(oSecCE,"FORNECEDOR",,"R.Social",,50)
  TRCell():New(oSecCE,"ZAA_IEEMI","ZZA")
  TRCell():New(oSecCE,"ZAA_CGCDES","ZZA",,,20)
  TRCell():New(oSecCE,"NOME_DEST",,"Nome Dest.",,30)

  TRCell():New(oSecCE,"ZAA_TIPO",,"Tipo",,10)
  TRCell():New(oSecCE,"ZAA_SIT",,"Situacao",,20)
  //TRCell():New(oSecCE,"ZAC_DSEVTO",,"Obs.",,30)
  TRCell():New(oSecCE,"ZAA_DTEMIS","ZZA",,,15)
  TRCell():New(oSecCE,"ZAA_TOTVAL","ZZA")

  TRFunction():New(oSecCE:Cell("ZAA_TOTVAL"),NIL,"SUM",,NIL,NIL,NIL,.F.,.T.)
  TRFunction():New(oSecCE:Cell("ZAA_DOC"),NIL,"COUNT",,NIL,NIL,NIL,.F.,.T.)

Return oReport

Static Function PrintReport(oReport)

  Local oSecCE 	:= oReport:Section(1)
  Local aFWEmp := FWLoadSM0()
  Local cCNPJ  := ""
  Local nPos   := 0


  oSecCE:BeginQuery()
  Painel()
  oSecCE:EndQuery()

  __TRB->(DbGoTop())

  oSecCE:Init()

  dbSelectArea("ZZA")
  ZZA->( dbSetOrder(1) )

  While !oReport:Cancel() .And. !__TRB->(EoF())

    oReport:IncMeter()

    If oReport:Cancel()
      Exit
    EndIf

    //ZZA->( dbGoTo(__TRB->RECNO) )

    oSecCE:Cell("ZAA_FILIAL"):SetValue(__TRB->ZAA_FILIAL)
    oSecCE:Cell("ZAA_DOC"):SetValue(__TRB->ZAA_DOC)
    oSecCE:Cell("ZAA_SERIE"):SetValue(__TRB->ZAA_SERIE)
    oSecCE:Cell("ZAA_CHAVE"):SetValue(__TRB->ZAA_CHAVE)
    oSecCE:Cell("NATUREZA"):SetValue(__TRB->ZAA_NATOP)
    oSecCE:Cell("ZAA_CGCEMI"):SetValue(__TRB->ZAA_CGCEMI)
    oSecCE:Cell("FORNECEDOR"):SetValue(__TRB->FORNEC)
    oSecCE:Cell("ZAA_IEEMI"):SetValue(__TRB->ZAA_IEEMI)
    oSecCE:Cell("ZAA_CGCDES"):SetValue(__TRB->ZAA_CGCDES)

    if cCNPJ <> __TRB->ZAA_CGCDES
      cCNPJ := __TRB->ZAA_CGCDES
      nPos  := ASCAN(aFWEmp, { |x| x[18] == cCNPJ })
    EndIf

    if nPos > 0
      oSecCE:Cell("NOME_DEST"):SetValue(aFWEmp[nPos,6])
    Else
      oSecCE:Cell("NOME_DEST"):SetValue("- - - - -")
    EndIf


    oSecCE:Cell("ZAA_TIPO"):SetValue(IIf(__TRB->ZAA_TIPO=="1","NF-e","CT-e"))
    oSecCE:Cell("ZAA_SIT"):SetValue(__TRB->ZAA_SIT)
    //oSecCE:Cell("ZAC_DSEVTO"):SetValue(__TRB->ZAC_DSEVTO)
    oSecCE:Cell("ZAA_DTEMIS"):SetValue(StoD(__TRB->ZAA_DTEMIS))
    oSecCE:Cell("ZAA_TOTVAL"):SetValue(__TRB->ZAA_TOTVAL)

    oSecCE:PrintLine()

    __TRB->(dbSkip())

  EndDo

  oSecCE:Finish()

Return


Static Function Painel()

  Local cQuery	  := ""

  cQuery 	:= ""
  cQuery	+= "  SELECT   "  + CRLF
  cQuery	+= "   ZAA.ZAA_FILIAL "  + CRLF
  cQuery	+= "  ,ZAA.ZAA_DOC  "  + CRLF
  cQuery	+= "  ,ZAA.ZAA_SERIE  "  + CRLF
  cQuery	+= "  ,ZAA.ZAA_TIPO  "  + CRLF
  cQuery	+= "  ,ZAA.ZAA_DTEMIS  "  + CRLF
  cQuery	+= "  ,ZAA.ZAA_CGCEMI  "  + CRLF
  cQuery	+= "  ,ZAA.ZAA_EMIT AS FORNEC    "  + CRLF
  cQuery	+= "  ,ZAA.ZAA_CHAVE   "  + CRLF
  cQuery	+= "  ,ZAA.ZAA_TOTVAL  "  + CRLF

  cQuery	+= "  , CASE WHEN ZAA.ZAA_SIT = '7' THEN 'Autorizada' "  + CRLF
  cQuery	+= "    WHEN ZAA.ZAA_SIT = '6' THEN 'Bloqueado'   "  + CRLF
  cQuery	+= "    ELSE '' END ZAA_SIT "  + CRLF

  cQuery	+= "  ,ZAA.ZAA_NATOP  "  + CRLF
  cQuery	+= "  ,ZAA.ZAA_IEEMI  "  + CRLF
  cQuery	+= "  ,ZAA.ZAA_CGCDES  "  + CRLF
  //cQuery	+= "  ,ZAC.ZAC_DSEVTO  "  + CRLF


  cQuery	+= " FROM " + RETSQLNAME("ZAA") + " ZAA  "  + CRLF

  cQuery	+= " WHERE 0=0  "  + CRLF
  cQuery	+= " AND ZAA.ZAA_DTEMIS   BETWEEN " + ValToSql(mv_par01) + " AND " + ValToSql(mv_par02)  + CRLF
  cQuery	+= " AND ZAA.ZAA_CGCEMI   BETWEEN " + ValToSql(mv_par03) + " AND " + ValToSql(mv_par04)  + CRLF
  cQuery	+= " AND ZAA.ZAA_CHAVE    BETWEEN " + ValToSql(mv_par05) + " AND " + ValToSql(mv_par06)  + CRLF
  cQuery	+= " AND ZAA.ZAA_FILIAL   BETWEEN " + ValToSql(mv_par07) + " AND " + ValToSql(mv_par08)  + CRLF
  cQuery	+= " AND ZAA.ZAA_DOC      BETWEEN " + ValToSql(mv_par09) + " AND " + ValToSql(mv_par10)  + CRLF
  cQuery	+= " AND ZAA.ZAA_SERIE    BETWEEN " + ValToSql(mv_par11) + " AND " + ValToSql(mv_par12)  + CRLF

  cQuery	+= " AND ZAA.ZAA_TIPO   IN ('1','2') "   + CRLF //1=NFe Entrada;2=CTe;3=CCe;4=NFSe;5=Cancelamento
  cQuery	+= " AND ZAA.ZAA_SIT    IN ('6','7') "   + CRLF //1=Normal;2=Importado;3=Com erro;4=Doc. de Entrada ainda nao existe;5=Cancelado;6=Bloqueado;7=Autorizada
  cQuery	+= " AND ZAA.D_E_L_E_T_    = '' "  + CRLF


  cQuery	+= " AND NOT EXISTS (SELECT 1 FROM ZAC000 ZAC "   + CRLF
  cQuery	+= " WHERE ZAC_CHAVE = ZAA.ZAA_CHAVE  "   + CRLF
  cQuery	+= " AND ZAC_TIPO IN ('2','3') "   + CRLF // 2=Cancelamento;3=Manifesto Op Não Realizada ou Desacordo ou Desconhecimento
  cQuery	+= " AND ZAC.D_E_L_E_T_ = ' ') "   + CRLF


  cQuery	+= "  AND NOT EXISTS (	SELECT 0 "  + CRLF
  cQuery	+= "  FROM " + RETSQLNAME("SF1") + " SF1 "  + CRLF
  cQuery	+= "  WHERE F1_FILIAL = ZAA.ZAA_FILIAL "  + CRLF
  cQuery	+= "  AND F1_CHVNFE   = ZAA.ZAA_CHAVE "  + CRLF
  cQuery	+= "  AND F1_STATUS <> ''  "  + CRLF
  cQuery	+= "  AND SF1.D_E_L_E_T_ = ' '	) "  + CRLF

  cQuery	+= "  ORDER BY ZAA.ZAA_FILIAL,ZAA.ZAA_DTEMIS,ZAA.ZAA_CGCEMI "  + CRLF

  If Select("__TRB") > 0
    __TRB->(dbCloseArea())
  EndIf

  cQuery := ChangeQuery(cQuery)
  dbUseArea(.T.,"TOPCONN",TCGenQry(,,cQuery),"__TRB",.T.,.T.)

Return


Static Function ValidPerg()

  local cLoad	    := "BFATRE04" + cEmpAnt
  local cFileName := RetCodUsr() +"_"+ cLoad
  local lRet		:= .F.
  Local aPergs	:=	{}

  MV_PAR01 := Stod("")
  MV_PAR02 := Stod("")

  MV_PAR03 := Space(TAMSX3("A2_CGC")[1])
  MV_PAR04 := Space(TAMSX3("A2_CGC")[1])

  MV_PAR05 := Space(TAMSX3("ZAA_CHAVE")[1])
  MV_PAR06 := Space(TAMSX3("ZAA_CHAVE")[1])

  MV_PAR07 := Space(TAMSX3("ZAA_FILIAL")[1])
  MV_PAR08 := Space(TAMSX3("ZAA_FILIAL")[1])

  MV_PAR09 := Space(TAMSX3("ZAA_DOC")[1])
  MV_PAR10 := Space(TAMSX3("ZAA_DOC")[1])

  MV_PAR11 := Space(TAMSX3("ZAA_SERIE")[1])
  MV_PAR12 := Space(TAMSX3("ZAA_SERIE")[1])

  aAdd( aPergs ,{1,"Emissão de  " 	   		 ,MV_PAR01 ,""  ,"",''     ,'.T.',20,.F.})
  aAdd( aPergs ,{1,"Emissão até " 	   		 ,MV_PAR02 ,""  ,"",''     ,'.T.',20,.T.})
  aAdd( aPergs ,{1,"Cnpj Fornecedor de " 	 ,MV_PAR03 ,""  ,"",''     ,'.T.',50,.F.})
  aAdd( aPergs ,{1,"Cnpj Fornecedor até "  ,MV_PAR04 ,""  ,"",''     ,'.T.',50,.T.})
  aAdd( aPergs ,{1,"Chave de " 	   	       ,MV_PAR05 ,""  ,"",''     ,'.T.',110,.F.})
  aAdd( aPergs ,{1,"Chave até " 	         ,MV_PAR06 ,""  ,"",''     ,'.T.',110,.T.})
  aAdd( aPergs ,{1,"Filial de " 	         ,MV_PAR07 ,""  ,"",'XM0'  ,'.T.',20,.F.})
  aAdd( aPergs ,{1,"Filial até " 	         ,MV_PAR08 ,""  ,"",'XM0'  ,'.T.',20,.T.})
  aAdd( aPergs ,{1,"NF-e de " 	   	       ,MV_PAR09 ,""  ,"",''     ,'.T.',90,.F.})
  aAdd( aPergs ,{1,"NF-e até " 	   	       ,MV_PAR10 ,""  ,"",''     ,'.T.',90,.T.})
  aAdd( aPergs ,{1,"Série de " 	           ,MV_PAR11 ,""  ,"",''     ,'.T.',10,.F.})
  aAdd( aPergs ,{1,"Série até " 	         ,MV_PAR12 ,""  ,"",''     ,'.T.',10,.T.})



  If ParamBox(aPergs ,"Filtros",/*aRet*/,/*bOk*/,/*aButtons*/,/*lCentered*/,/*nPosx*/,/*nPosy*/,/*oMainDlg*/,cLoad,.T.,.T.) //PMSXFUN.PRX - LINHA 14412


    //ParamBox(aParamBox, cTitulo, aRet, bOk, aButtons, lCentered, nPosx,nPosy, /*oMainDlg*/ , cLoad, lCanSave, lUserSave)

    lRet := .T.
    MV_PAR01 := ParamLoad(cFileName,,1,MV_PAR01)
    MV_PAR02 := ParamLoad(cFileName,,2,MV_PAR02)
    MV_PAR03 := ParamLoad(cFileName,,3,MV_PAR03)
    MV_PAR04 := ParamLoad(cFileName,,4,MV_PAR04)
    MV_PAR05 := ParamLoad(cFileName,,5,MV_PAR05)
    MV_PAR06 := ParamLoad(cFileName,,6,MV_PAR06)
    MV_PAR07 := ParamLoad(cFileName,,7,MV_PAR07)
    MV_PAR08 := ParamLoad(cFileName,,8,MV_PAR08)
    MV_PAR09 := ParamLoad(cFileName,,9,MV_PAR09)
    MV_PAR10 := ParamLoad(cFileName,,10,MV_PAR10)
    MV_PAR11 := ParamLoad(cFileName,,11,MV_PAR11)
    MV_PAR12 := ParamLoad(cFileName,,12,MV_PAR12)

  EndIf



Return lRet


