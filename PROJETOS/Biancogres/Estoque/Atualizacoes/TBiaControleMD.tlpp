#INCLUDE "PROTHEUS.CH"
#INCLUDE "TOPCONN.CH"

/*/{Protheus.doc} TBiaControleMD
@author Gabriel Rossi Mafioletti (Facile)
@since 14/01/2020  
@version 1.0
@description s
@type class
/*/

User Function TCONTMD()

	Local _oClass	:=	TBiaControleMD():New()

	RpcSetEnv('01','01')
	
	If _oClass:CheckMD("1010003",'01')
/*		
		_oClass:InsereMovimentacao('01','000001','GBR','000001','01','0001','1010003',100,'01',;
    									'001','01001020','TESTE',"TESTEMD",Date()-5,"TST",123)
		_oClass:InsereMovimentacao('01','000001','GBR','000001','01','0001','1010003',200,'01',;
    									'001','01001020','TESTE',"TESTEMD",Date()-7,"TST",123)
		_oClass:InsereMovimentacao('01','000001','GBR','000001','01','0001','1010003',45,'01',;
    									'001','01001020','TESTE',"TESTEMD",Date()-2,"TST",123)
*/
		_oClass:InsereMovimentacao('01','000004','GBR','000001','01','0001','1010003',145,'01',;	
    									'501','01001020','TESTE',"TESTEMD",DATE(),"TST",123)

	EndIf
Return

Class TBiaControleMD From LongClassName
 
    PUBLIC Data _cFilial
    PUBLIC Data _cDoc
    Public Data _cSerie
    Public Data _cFornece
    Public Data _cLoja
    Public Data _cItem
    Public Data _cCodPro
    Public Data _nQuant
    PUBLIC Data _cLocal
    Public Data _cTM
    Public Data _cSolic
    Public Data _cUser
    PUBLIC Data _cRotina
    PUBLIC Data _dDtDig
    PUBLIC Data _cTborig
    PUBLIC Data _nRecId
    
    Data _cDhMov
    Data _cDocSeq

    Public Method New() Constructor
    Public Method CheckMD(_cCod, _cLocal) //Verifica se o Produto passado é MD naquele almoxarifado
    Public Method InsereMovimentacao(_cFilial,_cDoc,_cSerie,_cFornece,_cLoja,_cItem,_cCodPro,_nQuant,_cLocal,;
    									_cTM,_cSolic,_cUser,_cRotina,_dDtDig,_cTbOrig,_nRecId) //Insere Movimentação na Tabela	
    Public Method NextNum()//Calcula o próximo NumSeq
    Public Method Saldo(_cCod,_cLocal,_cSolic) //Retorna o Saldo total
    Public Method GetMovimentoEntrada(_cCod,_cLocal,_cSolic) //Busca o movimento de entrada com saldo baseando-se na data de digitação 
    Public Method GetSolicNFE(_cDoc,_cSerie,_cFornece,_cLoja,_cItem)
    Public Method EstornaMovimentacao(_cFilial,_cDoc,_cSerie,_cFornece,_cLoja,_cItem,_cCodPro,_cLocal)

EndClass

Method New() Class TBiaControleMD

::_cFilial	:=	""
::_cDoc		:=	""
::_cSerie	:=	""
::_cFornece	:=	""
::_cLoja	:=	""	
::_cItem	:=	""
::_cCodPro	:=	""
::_nQuant	:=	0
::_cLocal	:=	""
::_cTM		:=	""
::_cSolic	:=	""
::_cUser	:=	""
::_cRotina	:=	""
::_dDtDig	:=	Stod("")
::_cTborig	:=	""
::_nRecId	:=	0

::_cDhMov	:=	""
::_cDocSeq	:=	""

Return(Self)

Method CheckMD(_cCod,_cLocal) Class TBiaControleMD
	Local _lRet		:=	.F.
	Local _aArea	:=	GetArea()	
	
	DbSelectArea("ZCN")
	ZCN->(DbSetOrder(2))
	If ZCN->(DbSeek(xFilial("ZCN")+PADR(_cCod,TamSX3("ZCN_COD")[1])+PADR(_cLocal,TamSX3("ZCN_LOCAL")[1])))
		If Alltrim(ZCN->ZCN_MD) == "S" .And. Alltrim(ZCN->ZCN_POLIT) == '4' .And. SUBSTR(_cCod,1,1) == '2'
			_lRet	:=	.T.
		EndIF
	EndIf
	
	RestArea(_aArea)
	
Return _lRet

Method InsereMovimentacao(_cFilial,_cDoc,_cSerie,_cFornece,_cLoja,_cItem,_cCodPro,_nQuant,_cLocal,;
    									_cTM,_cSolic,_cUser,_cRotina,_dDtDig,_cTbOrig,_nRecId) Class TBiaControleMD

    Local _nSaldoMov	:= 0

	BEGIN TRANSACTION
	
		::_cFilial	:=	_cFilial
		::_cDoc		:=	PADR(_cDoc,TAMSX3("ZCZ_DOC")[1])
		::_cSerie	:=	PADR(_cSerie,TAMSX3("ZCZ_SERIE")[1])
		::_cFornece	:=	PADR(_cFornece,TAMSX3("ZCZ_FORNEC")[1])
		::_cLoja	:=	PADR(_cLoja,TAMSX3("ZCZ_LOJA")[1])
		::_cItem	:=	PADR(_cItem,TAMSX3("ZCZ_ITEM")[1])
		::_cCodPro	:=	PADR(_cCodPro,TAMSX3("ZCZ_COD")[1])
		::_nQuant	:=	_nQuant
		::_cLocal	:=	PADR(_cLocal,TAMSX3("ZCZ_LOCAL")[1])
		::_cTM		:=	_cTM
		::_cSolic	:=	_cSolic
		::_cUser	:=	_cUSer
		::_cRotina	:=	_cRotina
		::_dDtDig	:=	_dDtDig
		::_cTborig	:=	_cTbOrig
		::_nRecId	:=	_nRecId
		::_cDhMov	:=	Substr(dTOS(Date()),1,4) + '-' + Substr(dTOS(Date()),5,2) + '-' + Substr(dTOS(Date()),7,2) + ' ' + Time() + ".000"
		
		If ::_cTM <= "500"
			::_cDocSeq	:=	::NextNum()

			RecLock("ZCZ",.T.)
				ZCZ->ZCZ_FILIAL		:=	::_cFilial	
				ZCZ->ZCZ_DOC        :=	::_cDoc
				ZCZ->ZCZ_SERIE      :=	::_cSerie
				ZCZ->ZCZ_FORNEC     :=	::_cFornece
				ZCZ->ZCZ_LOJA       :=	::_cLoja
				ZCZ->ZCZ_ITEM       :=	::_cItem	
				ZCZ->ZCZ_COD        :=	::_cCodPro
				ZCZ->ZCZ_QUANT      :=	::_nQuant
				ZCZ->ZCZ_LOCAL      :=	::_cLocal
				ZCZ->ZCZ_TM         :=	::_cTM
				ZCZ->ZCZ_SOLICI     :=	::_cSolic
				ZCZ->ZCZ_USER       :=	::_cUser
				ZCZ->ZCZ_ROTINA     :=	::_cRotina
				ZCZ->ZCZ_DTDIGI     :=	::_dDtDig
				ZCZ->ZCZ_DHMOV      :=	::_cDhMov
				ZCZ->ZCZ_DOCSEQ     :=	::_cDocSeq
				ZCZ->ZCZ_TBORIG     :=	::_cTbOrig
				ZCZ->ZCZ_RECID      :=	::_nRecID
			ZCZ->(MsUnlock())    									

		Else
			_nSaldoMov	:=	::_nQuant
			While _nSaldoMov > 0 .And. ::Saldo(::_cCodPro,::_cLocal,::_cSolic) >= 0
				::_cDocSeq	:=	""
				::_nQuant	:=	0
				
				::GetMovimentoEntrada(::_cCodPro,::_cLocal,::_cSolic)
				
				If ::_nQuant > 0
				
					::_nQuant	:= Min(_nSaldoMov,::_nQuant)
					RecLock("ZCZ",.T.)
						ZCZ->ZCZ_FILIAL		:=	::_cFilial	
						ZCZ->ZCZ_DOC        :=	::_cDoc
						ZCZ->ZCZ_SERIE      :=	::_cSerie
						ZCZ->ZCZ_FORNEC     :=	::_cFornece
						ZCZ->ZCZ_LOJA       :=	::_cLoja
						ZCZ->ZCZ_ITEM       :=	::_cItem	
						ZCZ->ZCZ_COD        :=	::_cCodPro
						ZCZ->ZCZ_QUANT      :=	::_nQuant
						ZCZ->ZCZ_LOCAL      :=	::_cLocal
						ZCZ->ZCZ_TM         :=	::_cTM
						ZCZ->ZCZ_SOLICI     :=	::_cSolic
						ZCZ->ZCZ_USER       :=	::_cUser
						ZCZ->ZCZ_ROTINA     :=	::_cRotina
						ZCZ->ZCZ_DTDIGI     :=	::_dDtDig
						ZCZ->ZCZ_DHMOV      :=	::_cDhMov
						ZCZ->ZCZ_DOCSEQ     :=	::_cDocSeq
						ZCZ->ZCZ_TBORIG     :=	::_cTbOrig
						ZCZ->ZCZ_RECID      :=	::_nRecID
					ZCZ->(MsUnlock())    									
				Else
					Exit
				EndIf
				_nSaldoMov := _nSaldoMov - ::_nQuant
			EndDo
			If _nSaldoMov > 0
					RecLock("ZCZ",.T.)
						ZCZ->ZCZ_FILIAL		:=	::_cFilial	
						ZCZ->ZCZ_DOC        :=	::_cDoc
						ZCZ->ZCZ_SERIE      :=	::_cSerie
						ZCZ->ZCZ_FORNEC     :=	::_cFornece
						ZCZ->ZCZ_LOJA       :=	::_cLoja
						ZCZ->ZCZ_ITEM       :=	::_cItem	
						ZCZ->ZCZ_COD        :=	::_cCodPro
						ZCZ->ZCZ_QUANT      :=	_nSaldoMov
						ZCZ->ZCZ_LOCAL      :=	::_cLocal
						ZCZ->ZCZ_TM         :=	::_cTM
						ZCZ->ZCZ_SOLICI     :=	::_cSolic
						ZCZ->ZCZ_USER       :=	::_cUser
						ZCZ->ZCZ_ROTINA     :=	::_cRotina
						ZCZ->ZCZ_DTDIGI     :=	::_dDtDig
						ZCZ->ZCZ_DHMOV      :=	::_cDhMov
						ZCZ->ZCZ_DOCSEQ     :=	"XXXXXX"
						ZCZ->ZCZ_TBORIG     :=	::_cTbOrig
						ZCZ->ZCZ_RECID      :=	::_nRecID
					ZCZ->(MsUnlock())    									
			EndIf
		EndIf

	END TRANSACTION
    									
Return

Method NextNum() Class TBiaControleMD

	Local _aArea	:=	GetArea()
	Local _cAlias	:=	GetNextAlias()
	Local _cDocSeq	:=	""
	
	
	BeginSql Alias _cAlias
		%NoParser%
		SELECT ISNULL(MAX(ZCZ_DOCSEQ),"000000") DOC
		FROM %TABLE:ZCZ%
		WHERE ZCZ_FILIAL = %XFILIAL:ZCZ%
			AND ZCZ_TM <= '500'
			AND %NotDel%
	EndSql
	
	_cDocSeq	:=	SOMA1((_cAlias)->DOC)
	(_cAlias)->(DbCloseArea())
	RestArea(_aArea)
Return _cDocSeq

Method Saldo(_cCod,_cLocal,_cSolic) Class TBiaControleMD

	Local _aArea	:=	GetArea()
	
	Local _cAlias	:=	GetNextAlias()
	
	Local _nSaldo	:=	0
		
	BeginSql Alias _cAlias
		%NoParser%
		SELECT ISNULL(SUM(CASE 
					WHEN ZCZ_TM > 500
						THEN ZCZ_QUANT * - 1
					ELSE ZCZ_QUANT
					END),0) QTD
		FROM ZCZ010 ZCZ
		WHERE ZCZ_FILIAL = %XFILIAL:ZCZ%
			AND ZCZ_SOLICI = %Exp:_cSolic%
			AND ZCZ_COD = %Exp:_cCod%
			AND ZCZ_LOCAL = %Exp:_cLocal%
			AND %NotDel%
	
	EndSql
	
	_nSaldo	:=	(_cAlias)->QTD
	
	(_cAlias)->(DbCloseArea())
	
	RestArea(_aArea)

Return _nSaldo

Method GetMovimentoEntrada(_cCod,_cLocal,_cSolic) Class TBiaControleMD

	Local _aArea	:=	GetArea() 
	Local _cAlias	:=	GetNextAlias()
	
	BeginSql Alias _cAlias
		%NoParser%
		SELECT TOP 1 * 
		FROM (
			SELECT ZCZ_COD
				,ZCZ_LOCAL
				,ZCZ_DOCSEQ
				,MIN(ZCZ_DTDIGI) DTDIGI
				,SUM(CASE 
						WHEN ZCZ_TM > 500
							THEN ZCZ_QUANT * - 1
						ELSE ZCZ_QUANT
						END) QTD
			FROM ZCZ010 ZCZ (NOLOCK)
			WHERE ZCZ_FILIAL = %XFILIAL:ZCZ%
				AND ZCZ_SOLICI = %Exp:_cSolic%
				AND ZCZ_COD = %Exp:_cCod%
				AND ZCZ_LOCAL = %Exp:_cLocal%
				AND %NotDel%
			GROUP BY ZCZ_COD
				,ZCZ_LOCAL
				,ZCZ_DOCSEQ

		)A
		WHERE A.QTD > 0
		ORDER BY DTDIGI
	EndSql

	If (_cAlias)->(!Eof())
		::_cDocSeq	:=	(_cAlias)->ZCZ_DOCSEQ
		::_nQuant	:=	(_cAlias)->QTD
	EndIf
	
	(_cAlias)->(DbCloseArea())
	
	RestArea(_aArea)

Return

Method GetSolicNFE(_cDoc,_cSerie,_cFornece,_cLoja,_cItem) Class TBiaControleMD

	Local _aArea	:=	GetArea()
	Local _cAlias	:=	GetNextAlias()

	BeginSql Alias _cAlias
		%NoParser%
		SELECT ISNULL(SC1.C1_YMATRIC,"") SOLIC1, ISNULL(SC1.C1_YMAT,"") SOLIC2
		FROM %TABLE:SD1% SD1(NOLOCK)
		JOIN %TABLE:SC7% SC7(NOLOCK) ON SD1.D1_FILIAL = SC7.C7_FILIAL
			AND SD1.D1_PEDIDO = SC7.C7_NUM
			AND SD1.D1_ITEMPC = SC7.C7_ITEM
			AND SC7.%NotDel%
		JOIN %TABLE:SC1% SC1 (NOLOCK) ON SC7.C7_FILIAL = SC1.C1_FILIAL
			AND SC7.C7_NUMSC = SC1.C1_NUM
			AND SC7.C7_ITEMSC = SC1.C1_ITEM
			AND SC1.%NotDel%
		WHERE SD1.D1_FILIAL = %XFILIAL:SC1%
			AND SD1.D1_DOC = %Exp:_cDoc%
			AND SD1.D1_SERIE = %Exp:_cSerie%
			AND SD1.D1_FORNECE = %Exp:_cFornece%
			AND SD1.D1_LOJA = %Exp:_cLoja%
			AND SD1.D1_ITEM = %Exp:_cItem%
			AND SD1.%NotDel%
	EndSql

	_cSolic	:=	Iif(Empty((_cAlias)->SOLIC1),(_cAlias)->SOLIC2,(_cAlias)->SOLIC1)

	(_cAlias)->(DbCloseArea())

	RestArea(_aArea)

Return _cSolic

Method EstornaMovimentacao(_cFilial,_cDoc,_cSerie,_cFornece,_cLoja,_cItem,_cCodPro,_cLocal) Class TBiaControleMD

	

Return