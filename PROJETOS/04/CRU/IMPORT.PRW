#INCLUDE "PROTHEUS.CH"
#INCLUDE "APWIZARD.CH"
#INCLUDE "Totvs.ch"
#INCLUDE 'FWMVCDEF.CH'
#Include "parmtype.ch"
#Include "tbiconn.ch"


/*
?????????????????????????????????????????????????????????????????????????????
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±????????????????????????????????????????????????????????????????????????»±±
±±?Programa  ³Import    ?Autor  ³Jonas L. Souza Jr   ? Data ³  02/16/10   ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±?Desc.     ³ Programa de importaca	o de tabelas                          ?±±
±±?          ³                                                            ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±?Uso       ³ Totvs                                                      ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
?????????????????????????????????????????????????????????????????????????????
//Modificado por Kuhn em 11/02/2014 para atender a demanda da Autovix em importar dados para a tabela SBZ
*/

User Function Import

//??????????????????????????????????????????????????????????
//³Declaracao de variaveis                                 ³
//??????????????????????????????????????????????????????????
	Local oWizard
	Local nMetGlob
	Local nMetParc
	Local oRadioArq
	Local nRadioArq	:= 1

	Local cText
	Local cFile		:= replicate( " ", 80 )
	Local cHeader 	:= "Importa??o de dados"
	Local cTpArq		:= "Delimitado (*.csv)|*.CSV|"
	Local cDelim		:= AllTrim(SuperGetMV("MV_TPDELI",.F.,';'))
	Local nLinCabec	:= 1 // Padr?o sem linha de cabe?alho
	Local cCabec		:= "" // String com o cabe?alho do arquivo original, se houver
	Local nQtdCab		:= 1 // String com o cabe?alho do arquivo original, se houver
	Local cNmAlias	:= ""
	Local cTipo		:= "1"
	Local aArea		:= GetArea()

	Private INCLUI	:= .T.
	Private ALTERA	:= .F.

	Private cAltReg	:= ''

	Private aCols
	Private cMsg		:= ''
	Private _nOpca	:= ''
	Private _aSX5		:= {}

//recupera tabela SX5 para
//ser utilizado como referente para cabecalho arquivo
//e gravar dados na tabela VTB
	fASX5()

	cText 	:=	"Esta rotina tem por objetivo importar registros, atrav?s " + ;
				"de um arquivo padr?o CSV (delimitado) , e armazena-los na tabela "+ ;
				"correspondente do sistema."+ CRLF + ;
				"Os nomes das colunas devem ser os mesmos nomes de campos a serem atualizados."+ CRLF + CRLF + ;
				"Ao final da importa??o ser? gerado um arquivo de log contendo as "+ ;
				"inconsist?ncias."

	//?????????????????????????????????
	//³Primeiro Painel - Abertura     ³
	//?????????????????????????????????
	DEFINE WIZARD oWizard 	TITLE "Importa??o de dados" ;
		HEADER cHeader ;
		MESSAGE "Apresenta??o." ;
		TEXT cText ;
		NEXT { || .T. } ;
		FINISH {|| .T.} PANEL

	//??????????????????????????????????????
	//³Segundo Painel - Arquivo e Contrato ³
	//??????????????????????????????????????
	CREATE PANEL oWizard 	HEADER cHeader ;
		MESSAGE "Selecione os tabela que deseja importar" ;
		BACK {|| .T. } ;
		NEXT {|| .T. } ;
		FINISH {|| .F. } ;
		PANEL

	oPanel := oWizard:GetPanel( 2 )

	@ 15, 08 GROUP oGrpCon 	TO 120, 230 LABEL "Cadastro a ser importado" OF oPanel PIXEL DESIGN

	@ 25,35 Radio oRadioArq Var nRadioArq Items "Estoque de Seguran?a(SBZ)",;
		"Cadastro Produtos(SB1)",;
		"Cadastro CRU(SZP)",;
		"Lucratividade (SB0)",;
		"Codigo de barras(SLK)",;
		"Lucratividade (ZZZ)";
		3D 	Size 170,10 Of oPanel PIXEL DESIGN ;
		ON CHANGE ImpChgRadio(nRadioArq,@cNmAlias)

	//??????????????????????????????????????
	//³Segundo Painel - Arquivo e Contrato ³
	//??????????????????????????????????????
	CREATE PANEL oWizard 	HEADER cHeader ;
		MESSAGE "Selecione o arquivo para importa??o." ;
		BACK {|| .T. } ;
		NEXT {|| ! empty( cDelim ) .and. ! empty( cFile ) } ;
		FINISH {|| .F. } ;
		PANEL

	oPanel := oWizard:GetPanel( 3 )

	@ 10, 08 GROUP oGrpCon 	TO 40, 280 LABEL "Selecione um arquivo." ;
		OF oPanel ;
		PIXEL ;
		DESIGN

	@ 20, 15 MSGET oArq 	VAR cFile WHEN .F. OF oPanel SIZE 140, 10 PIXEL ;
		MESSAGE "Utilize o bot?o ao lado para selecionar" ;

		DEFINE SBUTTON oButArq 	FROM 21, 160 ;
		TYPE 14 ;
		ACTION cFile := cGetFile(cTpArq, , 0, "SERVIDOR\", .T., GETF_LOCALFLOPPY + GETF_LOCALHARD + GETF_NETWORKDRIVE) ;
		OF oPanel ;
		ENABLE

	@ 50, 08 GROUP oGrpCon 	TO 130, 280 LABEL "Informe as configura??es do arquivo." ;
		OF oPanel ;
		PIXEL ;
		DESIGN

	@ 60,20 SAY "Delimitador" OF oPanel SIZE 35,8 PIXEL
	@ 60,60 MSGET oDelim	VAR cDelim  ;
		PICTURE "@!" ;
		VALID !empty(cDelim) ;
		MESSAGE "Informe um delimitador de campo." ;
		OF oPanel SIZE 10,8 PIXEL

	@ 80,20 SAY "Tipo" OF oPanel SIZE 35,8 PIXEL
	@ 80,60 COMBOBOX oTipo  Var cTipo ITEMS {"2=Log + Importa??o"} 	SIZE 200,010 OF oPanel PIXEL

	//?????????????????????????????????????????????????
	//³Terceiro Painel - Confirmacao  / Processamento ³
	//?????????????????????????????????????????????????
	CREATE PANEL oWizard 	HEADER cHeader ;
		MESSAGE "Confirma??o dos dados e in?cio de processamento." ;
		BACK {|| .T. } ;
		NEXT {|| .T. } ;
		FINISH {|| .F. } ;
		PANEL

	oPanel := oWizard:GetPanel( 4 )

	@ 010, 010 SAY "Arquivo" OF oPanel SIZE 140, 8 PIXEL
	@ 010, 050 SAY cFile  OF oPanel SIZE 140, 8 COLOR CLR_HBLUE PIXEL

	@ 030, 010 SAY  "Delimitador" OF oPanel SIZE 140, 8 PIXEL
	@ 030, 050 SAY  cDelim  OF oPanel SIZE 140, 8 COLOR CLR_HBLUE PIXEL


	@ 050, 010 SAY  "Alias" OF oPanel SIZE 140, 8 PIXEL
	@ 050, 050 SAY  cNmAlias  OF oPanel SIZE 140, 8 COLOR CLR_HBLUE PIXEL


	@ 070, 010 SAY  "Tipo Proc.:" OF oPanel SIZE 140, 8 PIXEL
	@ 070, 050 SAY  IIf(cTipo=="1","Somente Log","Log+Importa??o")  OF oPanel SIZE 140, 8 COLOR CLR_HBLUE PIXEL


	//?????????????????????????????????????????????????
	//³Quarto Painel - Processamento                  ³
	//?????????????????????????????????????????????????
	CREATE PANEL oWizard 	HEADER cHeader ;
		MESSAGE "Processamento da Importa??o." ;
		BACK {|| .T. } ;
		NEXT {|| .T. } ;
		FINISH {|| .T. } ;
		EXEC {|| CursorWait(), IMPCADPro( oMetGlob, nRadioArq, cFile, cDelim, cTipo ), CursorArrow() } ;
		PANEL

	oPanel := oWizard:GetPanel( 5 )

	@ 25, 30 SAY "Importa??o" OF oPanel SIZE 140, 8 PIXEL
	@ 40, 30 METER oMetGlob 	VAR nMetGlob ;
		TOTAL 100 ;
		SIZE 224,10 OF oPanel PIXEL UPDATE DESIGN ;
		BARCOLOR CLR_BLACK,CLR_WHITE ;
		COLOR CLR_WHITE,CLR_BLACK ;
		NOPERCENTAGE

	ACTIVATE WIZARD oWizard CENTER

	DbSelectArea('SB1')
	DbSetOrder(1)
	RestArea(aArea)

Return NIL

/*
?????????????????????????????????????????????????????????????????????????????
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±????????????????????????????????????????????????????????????????????????»±±
±±?Programa  ³IMPCADPro ?Autor  ³Jonas L. Souza Jr   ? Data ³  02/16/10   ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±?Desc.     ³Importacao do arquivo selecionado                           ?±±
±±?          ³                                                            ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±?Uso       ³ Totvs                                                      ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
?????????????????????????????????????????????????????????????????????????????
*/

Static Function IMPCADPro( oMetGlob, nRadioArq, cFile, cDelim,cTipo )

//???????????????????????????????????????????????????????????????????????
//³ Declaracao de Variaveis                                             ³
//???????????????????????????????????????????????????????????????????????
	Local aArea		:= GetArea()
	Local lFirst	:= .T.
	Local cLinha 	:= ""
	Local nHdl    	:= 	0
	Local cEnvServ	:= GetEnvServer()
	Local cIniFile	:= GetADV97()
	Local cEnd		:= GetPvProfString(cEnvServ,"StartPath","",cIniFile)
	Local cDtHr 	:= DtoS(dDataBase)+"-"+Substr(time(),1,2)+"-"+Substr(time(),4,2)+"-"+Substr(time(),7,2)
	Local cPath		:= "IMPORT\"
	Local cTipoLog	:= "Import_"
	Local cNomeLog	:=	cPath+cTipoLog+cDtHr+"_Log.txt"
	Local cArq		:=	cEnd+cNomeLog
	Local cLin		:= ""
	Local cCdAlias	:= ""
	Local nQtReg	:= 0
	Local nQtNOk	:= 0
	Local nQtOk		:= 0
	Local aLog		:= {}
	Local lGrava	:= (cTipo == "2")
	Local cRotina	:= ""
	Local nCont		:= 0
	Local cLocCli   := ''
	Local cNomeCli  := ''
	Local cArqCli   := ''
	//Local aLinhas	:= {}
	Local k			:= 0

	Local lRetCpy   := .T.
	Local nW_       := 0

	Private aHeader	:= {}
	Private n		:= 0
	Private aLinhas	:= {}
	
	MAKEDIR(cEnd+cPath)

//???????????????????????????????????????????????????
//³Validacao do arquivo para importacao             ³
//???????????????????????????????????????????????????

	If !File(cFile) .OR. Empty(cFile)
		ApMsgStop("Problemas com arquivo informado!")
		RestArea(aArea)
		Return
	EndIf


//??????????????????????????????????????????????????????
//³Identifica Alias de importacao                      ³
//??????????????????????????????????????????????????????
	Do Case
	Case nRadioArq == 1		// "Estoque de seguran?a,;
			cCdAlias	:= "SBZ"
//		cRotina		:= "MATA018"

	Case nRadioArq == 2
		cCdAlias	:= "SB1"
		_nOpca      := MsgNoYes('Deseja que os produtos n?o existentes no cadastro sejam inclu?dos?')

	Case nRadioArq == 3		// "CADASTRO CRU,;
			cCdAlias	:= "SZP"
//		cRotina		:= "MATA018"


	Case nRadioArq == 4		// "Estoque de seguran?a,;
			cCdAlias	:= "SB0"


	Case nRadioArq == 5		// Codigo de barras
		cCdAlias	:= "SLK"

	Case nRadioArq == 6		// Lucratividade ZZZ
		cCdAlias	:= "ZZZ"


	OtherWise
		ApMsgStop("Nao existe tratamento para importa??o deste tipo de arquivo!")
		Return
	EndCase



//????????????????????????????????????????
//³Inicia Log                            ³
//????????????????????????????????????????
	AAdd(aLog, Replicate( '=', 80 ) )
	AAdd(aLog, 'INICIANDO O LOG - I M P O R T A C A O   D E   D A D O S' )
	AAdd(aLog, Replicate( '-', 80 ) )
	AAdd(aLog, 'DATABASE...........: ' + DtoC( dDataBase ) )
	AAdd(aLog, 'DATA...............: ' + DtoC( Date() ) )
	AAdd(aLog, 'HORA...............: ' + Time() )
	AAdd(aLog, 'ENVIRONMENT........: ' + GetEnvServer() )
	AAdd(aLog, 'PATCH..............: ' + GetSrvProfString( 'StartPath', '' ) )
	AAdd(aLog, 'ROOT...............: ' + GetSrvProfString( 'RootPath', '' ) )
	AAdd(aLog, 'VERS?O.............: ' + GetVersao() )
	AAdd(aLog, 'M?DULO.............: ' + 'SIGA' + cModulo )
	AAdd(aLog, 'EMPRESA / FILIAL...: ' + SM0->M0_CODIGO + '/' + SM0->M0_CODFIL )
	AAdd(aLog, 'NOME EMPRESA.......: ' + Capital( Trim( SM0->M0_NOME ) ) )
	AAdd(aLog, 'NOME FILIAL........: ' + Capital( Trim( SM0->M0_FILIAL ) ) )
	AAdd(aLog, 'USU?RIO............: ' + SubStr( cUsuario, 7, 15 ) )
	AAdd(aLog, 'TABELA IMPORT......: ' + cCdAlias )
	AAdd(aLog, 'ARQUIVO IMPORT.....: ' + cFile )
	AAdd(aLog, 'DELIMITADOR........: ' + cDelim )
	AAdd(aLog, 'MODO PROCESSAMENTO.: ' + IIf(lGrava,"Atualizacao","Simulacao") )
	AAdd(aLog, Replicate( ':', 80 ) )
	AAdd(aLog, '' )

	AAdd(aLog, "Import = INICIO - Data "+DtoC(dDataBase)+ " as "+Time() )

//????????????????????????????????????????????
//³Leitura do arquivo                        ³
//????????????????????????????????????????????
	FT_FUSE(cFile)
	nTot := FT_FLASTREC()
	nAtu := 0

	oMetGlob:SetTotal(nTot)
	CursorWait()

	FT_FGOTOP()


	While !FT_FEOF()

		AADD(aLinhas,LeLinha())

		FT_FSKIP()

	EndDo

	FT_FUSE()


	//While !FT_FEOF()

	For k := 1 to len(aLinhas)

		nAtu++
		oMetGlob:Set(nAtu)

		cLinha := aLinhas[k]

		//cLinha := LeLinha() //FT_FREADLN()

		If Empty(cLinha)

			if nAtu > nTot
				EXIT
			ELSE

				FT_FSKIP()
				Loop

			End if
		EndIf

	//????????????????????????????????????????????
	//³Tratamento de colunas                     ³
	//????????????????????????????????????????????
		aCols := {}
		If nRadioArq == 2
			aCols := TrataCols(cLinha,cDelim, lFirst, len(aHeader))
		Else
			aCols := TrataCols(cLinha,cDelim)
		EndIf

		For nW_ := 1 To Len(aCols)

			nPos := AScan(aHeader,{|x| Upper(AllTrim(x)) == Upper(Alltrim("CODEMP")) })

			If nPos > 0

				If aCols[nPos] <> cEmpAnt

					MsgAlert("Campo CODEMP diferente da empresa logada!" + CRLF + CRLF + "CODEMP: " + aCols[nPos] + CRLF + "Emp.Logada: " + cEmpAnt ,"Atencao!")

					Return()

				Endif

			EndIF

		Next nW_

		If lFirst //lFirst = Define linha de cabe?alho
			aHeader := aClone(aCols)
			lFirst := .F.

		//?????????????????????????????????????????????
		//³Valida nomes das colunas                   ³
		//?????????????????????????????????????????????
			cCpos := ImpVldCols(cCdAlias,aHeader)
			If !Empty(cCpos)
				ApMsgStop("Problemas na estrutura do arquivo, faltam as seguintes colunas "+cCpos)
				Return
			EndIf

		Else

			nQtReg++


		//???????????????????????????????????????????????????????
		//³Validacao de campos obrigatorios                     ³
		//???????????????????????????????????????????????????????
			cMsg := ImpObrigat(cCdAlias,aCols,aHeader)
			If !Empty(cMsg)
				AtuLog("NO MOT: CAMPOS OBRIGATORIOS - REGISTRO IGNORADO - "+cMsg,@aLog,nAtu)
				nQtNOk++
				//FT_FSKIP()
				Loop
			EndIf


		//??????????????????????????????????????????????????????????
		//³Chamada de rotina automatica de inclusao                ³
		//??????????????????????????????????????????????????????????
			If lGrava
				aRet := {}
				aRet := ImpGrava(cCdAlias,cRotina,aCols,aHeader)
				If aRet[1]
					nQtOk++
					If cAltReg == '1'
						AtuLog("OK MOT:REGISTRO ALTERADO"+ aRet[2],@aLog,nAtu)
					ElseIf cAltReg == '2'
						AtuLog("OK MOT:REGISTRO INCLUIDO"+ aRet[2],@aLog,nAtu)
					ElseIf cAltReg == '3'
						AtuLog("OK MOT:REGISTRO IGNORADO"+ aRet[2],@aLog,nAtu)
					EndIf
				Else
					If cAltReg == '3'
						AtuLog("NO MOT: REGISTRO JA EXISTE - "+aRet[2],@aLog,nAtu)
					Elseif cAltReg == '4'
						AtuLog("NO MOT: PROBLEMAS NA GRAVACAO ROTINA AUTOMATICA - "+aRet[2],@aLog,nAtu)
					ElseIf cAltReg == '5'
						AtuLog("OK MOT:REGISTRO IGNORADO - INCLUSAO CANCELADA PELO USU?RIO "+aRet[2],@aLog,nAtu)
					EndIf

					nQtNOk++

				EndIF
			Else
				nQtOk++
				If cAltReg == '1'
					AtuLog("OK MOT:REGISTRO ALTERADO"+aRet[2],@aLog,nAtu)
				ElseIf cAltReg == '2'
					AtuLog("OK MOT:REGISTRO INCLUIDO"+aRet[2],@aLog,nAtu)
				ElseIf cAltReg == '3'
					AtuLog("OK MOT:REGISTRO IGNORADO"+aRet[2],@aLog,nAtu)
				EndIf
			EndIf
		EndIf


	Next



	AAdd(aLog, "Import = Total de Registros = "+ Alltrim(Str(nQtReg)))
	AAdd(aLog, "Import = Registros Nao importados = "+ Alltrim(Str(nQtNOk)))
	AAdd(aLog, "Import = Registros importados = "+ Alltrim(Str(nQtOk)))


	AAdd(aLog, "Import = FIM Data "+DtoC(dDataBase)+ " as "+Time() )

//??????????????????????????????????????????????????
//³Finaliza arquivo de Log                         ³
//??????????????????????????????????????????????????

	cArqCli   := cGetFile( '*.TXT' , 'Salvar Arquivo', 1, 'C:\', .f.,  GETF_LOCALHARD+GETF_NETWORKDRIVE,.F., .T. )
	cNomeCli  := SUBSTR(cArqCli,(RAT('\',cArqCli)+1),Len(cArqCli))+'.txt'
	cLocalCli := SUBSTR(cArqCli,1,RAT('\',cArqCli))
	cArq		:=	cEnd+cPath+cNomeCli

	nHdl  := 	fCreate(cArq)

	If nHdl == -1
		MsgAlert("O arquivo  "+cArq+" nao pode ser criado!","Atencao!")
		fClose(nHdl)
		fErase(cArq)
		RestArea(aArea)
		Return()
	Else

	EndIf

	For nCont:=1 to Len(aLog)

		cLin += aLog[nCont] + CHR(13)+CHR(10)

		If fWrite(nHdl,cLin,Len(cLin)) != Len(cLin)
			fClose(nHdl)
			fErase(cArq)
			cLin:=""
			RestArea(aArea)
			Return()
		EndIf

		cLin:=""
	Next

	fClose(nHdl)

	if !Empty(cLocalCli)
	
		//COPIA ARQUIVO PRA ESTA??O DO CLIENTE
		lRetCpy := CpyS2T(cArq, cLocalCli,.F.)
	
		If !lRetCpy
			MSgAlert('Erro ao salvar arquivo '+ cValToChar(FError()))
		EndIf
	
		ApMsgInfo("Verifique arquivo de log "+cArq)

	EndIf
	
	RestArea(aArea)
Return



/*
?????????????????????????????????????????????????????????????????????????????
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±????????????????????????????????????????????????????????????????????????»±±
±±?Programa  ³AtuLog    ?Autor  ³Jonas L. Souza Jr   ? Data ³  07/20/09   ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±?Desc.     ³Atualiza Array de Log                                       ?±±
±±?          ³                                                            ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±?Uso       ³ Totvs                                                      ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
?????????????????????????????????????????????????????????????????????????????
*/
Static Function AtuLog(cMsg,aLog,nAtu)

	AAdd(aLog, " Import = Linha "+StrZero(nAtu,12)+" = "+;
		" LOG = "+cMsg )
Return




/*
?????????????????????????????????????????????????????????????????????????????
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±????????????????????????????????????????????????????????????????????????»±±
±±?Programa  ³LeLinha   ?Autor  ³Jonas L. Souza Jr   ? Data ³  02/16/10   ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±?Desc.     ³Tratamento de leitura de linha TXT, principalmente para     ?±±
±±?          ³casos de ultrapassar 1Kb por linha                          ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±?Uso       ³ Totvs                                                      ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
?????????????????????????????????????????????????????????????????????????????
*/
Static Function LeLinha()
	Local cLinhaTmp := ""
	Local cLinhaM100 := ""

	cLinhaTmp := FT_FReadLN()

	If !Empty(cLinhaTmp)
		cIdent:= Substr(cLinhaTmp,1,1)
		If Len(cLinhaTmp) < 1023
			cLinhaM100 := cLinhaTmp
		Else
			cLinAnt := cLinhaTmp
			cLinhaM100 += cLinAnt
			Ft_FSkip()
			cLinProx:= Ft_FReadLN()
			If Len(cLinProx) >= 1023 .and. Substr(cLinProx,1,1) <> cIdent
				While Len(cLinProx) >= 1023 .and. Substr(cLinProx,1,1) <> cIdent .and. !Ft_fEof()
					cLinhaM100 += cLinProx
					Ft_FSkip()
					cLinProx := Ft_fReadLn()
					If Len(cLinProx) < 1023 .and. Substr(cLinProx,1,1) <> cIdent
						cLinhaM100 += cLinProx
					Endif
				Enddo
			Else
				cLinhaM100 += cLinProx
			Endif
		Endif
	Endif

Return(cLinhaM100)

/*
?????????????????????????????????????????????????????????????????????????????
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±????????????????????????????????????????????????????????????????????????»±±
±±?Programa  ³TrataCols ?Autor  ³Jonas L. Souza Jr   ? Data ³  07/20/09   ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±?Desc.     ³Retorna array com as colunas da linha informada             ?±±
±±?          ³                                                            ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±?Uso       ³ Totvs                                                      ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
?????????????????????????????????????????????????????????????????????????????
*/
Static Function TrataCols(cLinha,cSep,lFirst, nQdeCampos)
	Local aRet 		:= {}
	Local nPosSep	:= 0
	Local nPosGrp	:= 0
	Local nPosCest:= 0
	Local nI		:= 0

	Default lFirst := .F.
	Default nQdeCampos := 0

	nPosSep	:= At(cSep,cLinha)
	While nPosSep <> 0
		AAdd(aRet, SubStr(cLinha,1,nPosSep-1)  )
		cLinha := SubStr(cLinha,nPosSep+1)
		nPosSep	:= At(cSep,cLinha)
	EndDo
	AAdd(aRet, cLinha )

	If lFirst
		nPosGrp := AScan(aRet,{|x| Upper(AllTrim(x)) == Upper(Alltrim("B1_GRTRIB")) })
		If nPosGrp == 0
			AAdd(aRet, 'B1_GRTRIB' )
		EndIf

		nPosCest := AScan(aRet,{|x| Upper(AllTrim(x)) == Upper(Alltrim("B1_CEST")) })
		If nPosCest == 0
			AAdd(aRet, 'B1_CEST' )
		EndIf

	Else
		If Len(aRet) < nQdeCampos
			For nI := Len(aRet) To nQdeCampos-1
				AAdd(aRet, '' )
			Next
		EndIf
	EndIf

Return aRet

/*
?????????????????????????????????????????????????????????????????????????????
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±????????????????????????????????????????????????????????????????????????»±±
±±?Programa  ³RetCol    ?Autor  ³Jonas L. Souza Jr   ? Data ³  07/20/09   ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±?Desc.     ³Retorna conteudo de coluna especifica                       ?±±
±±?          ³                                                            ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±?Uso       ³ Totvs                                                      ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
?????????????????????????????????????????????????????????????????????????????
*/
Static Function RetCol(cCpo,aCols,aHeader)
	Local cRet 	:= ""
	Local nPos	:= 0
	Local aSX3Area	:= SX3->(GetArea())

	nPos := AScan(aHeader,{|x| Upper(AllTrim(x)) == Upper(Alltrim(cCpo)) })

	If !Empty(nPos)
		If Upper(AllTrim(aCols[nPos])) <> "NULL"

			DbSelectArea("SX3")
			DbSetOrder(2)
			If MsSeek(cCpo)
				If SX3->X3_TIPO == "D"
					cRet := StoD(AllTrim(aCols[nPos]))
				ElseIf SX3->X3_TIPO == "N"
					cRet := Val(AllTrim(aCols[nPos]))
				Else
					cRet := PadR(Upper(AllTrim(aCols[nPos])),TamSX3(cCpo)[1])
				EndIf
			Else
				cRet := Upper(AllTrim(aCols[nPos]))
			EndIf
		EndIf
	EndIf

	SX3->(RestArea(aSX3Area))
Return cRet

/*
?????????????????????????????????????????????????????????????????????????????
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±????????????????????????????????????????????????????????????????????????»±±
±±?Programa  ³ImpVldCols?Autor  ³Jonas L. Souza Jr   ? Data ³  02/16/10   ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±?Desc.     ³Analise de colunas obrigatorias para cada alias             ?±±
±±?          ³                                                            ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±?Uso       ³ Totvs                                                      ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
?????????????????????????????????????????????????????????????????????????????
*/
Static Function ImpVldCols(cCdAlias,aHeader)
	Local cRet 		:= ""
	Local cFilSA1 	:= ""

	Do Case
	Case cCdAlias == "SBZ"

		If AScan(aHeader,{|x| Upper(AllTrim(x)) == Upper(Alltrim("BZ_FILIAL")) })	== 0
			cRet += IIf(Empty(cRet),"","/")+"BZ_FILIAL"
		EndIf
		If AScan(aHeader,{|x| Upper(AllTrim(x)) == Upper(Alltrim("BZ_COD")) })	== 0
			cRet += IIf(Empty(cRet),"","/")+"BZ_COD"
		EndIf
		If AScan(aHeader,{|x| Upper(AllTrim(x)) == Upper(Alltrim("BZ_ESTSEG")) })	== 0
			cRet += IIf(Empty(cRet),"","/")+"BZ_ESTSEG"
		EndIf
		If AScan(aHeader,{|x| Upper(AllTrim(x)) == Upper(Alltrim("BZ_TOLER")) })		== 0
			cRet += IIf(Empty(cRet),"","/")+"BZ_TOLER"
		EndIf
		If AScan(aHeader,{|x| Upper(AllTrim(x)) == Upper(Alltrim("CODEMP")) })		== 0
			cRet += IIf(Empty(cRet),"","/")+"CODEMP"
		EndIf

	Case cCdAlias == "SB0"

		If AScan(aHeader,{|x| Upper(AllTrim(x)) == Upper(Alltrim("B0_FILIAL")) })	== 0
			cRet += IIf(Empty(cRet),"","/")+"B0_FILIAL"
		EndIf

		If AScan(aHeader,{|x| Upper(AllTrim(x)) == Upper(Alltrim("B0_COD")) })	== 0
			cRet += IIf(Empty(cRet),"","/")+"B0_COD"
		EndIf

		If AScan(aHeader,{|x| Upper(AllTrim(x)) == Upper(Alltrim("B0_YLUCRO")) })	== 0
			cRet += IIf(Empty(cRet),"","/")+"B0_YLUCRO"
		EndIf
		If AScan(aHeader,{|x| Upper(AllTrim(x)) == Upper(Alltrim("CODEMP")) })		== 0
			cRet += IIf(Empty(cRet),"","/")+"CODEMP"
		EndIf

	Case cCdAlias == "SB1"

		If AScan(aHeader,{|x| Upper(AllTrim(x)) == Upper(Alltrim("B1_COD")) })	== 0
			cRet += IIf(Empty(cRet),"","/")+"B1_COD"
		EndIf

	Case cCdAlias == "SZP"

		If AScan(aHeader,{|x| Upper(AllTrim(x)) == Upper(Alltrim("ZP_CRU")) })	== 0
			cRet += IIf(Empty(cRet),"","/")+"ZP_CRU"
		EndIf

		If AScan(aHeader,{|x| Upper(AllTrim(x)) == Upper(Alltrim("ZP_PRODUTO")) })	== 0
			cRet += IIf(Empty(cRet),"","/")+"ZP_PRODUTO"
		EndIf

	Case cCdAlias == "SLK"

		If AScan(aHeader,{|x| Upper(AllTrim(x)) == Upper(Alltrim("LK_CODIGO")) })	== 0
			cRet += IIf(Empty(cRet),"","/")+"LK_CODIGO"
		EndIf

		If AScan(aHeader,{|x| Upper(AllTrim(x)) == Upper(Alltrim("LK_QUANT")) })	== 0
			cRet += IIf(Empty(cRet),"","/")+"LK_QUANT"
		EndIf

		If AScan(aHeader,{|x| Upper(AllTrim(x)) == Upper(Alltrim("LK_CODBAR")) })	== 0
			cRet += IIf(Empty(cRet),"","/")+"LK_CODBAR"
		EndIf

	Case cCdAlias == "ZZZ"
		If AScan(aHeader,{|x| Upper(AllTrim(x)) == Upper(Alltrim("ZZZ_FILIAL")) })	== 0
			cRet += IIf(Empty(cRet),"","/")+"ZZZ_FILIAL"
		EndIf

		If AScan(aHeader,{|x| Upper(AllTrim(x)) == Upper(Alltrim("ZZZ_COD")) })	== 0
			cRet += IIf(Empty(cRet),"","/")+"ZZZ_COD"
		EndIf

		If AScan(aHeader,{|x| Upper(AllTrim(x)) == Upper(Alltrim("ZZZ_YLUCRO")) })	== 0
			cRet += IIf(Empty(cRet),"","/")+"ZZZ_YLUCRO"
		EndIf
		If AScan(aHeader,{|x| Upper(AllTrim(x)) == Upper(Alltrim("CODEMP")) })		== 0
			cRet += IIf(Empty(cRet),"","/")+"CODEMP"
		EndIf
	EndCase

Return cRet

/*
?????????????????????????????????????????????????????????????????????????????
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±????????????????????????????????????????????????????????????????????????»±±
±±?Programa  ³ImpObrigat?Autor  ³Jonas L. Souza Jr   ? Data ³  02/16/10   ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±?Desc.     ³ALimenta log com colunas nao presentes no arquivo           ?±±
±±?          ³                                                            ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±?Uso       ³ Totvs                                                      ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
?????????????????????????????????????????????????????????????????????????????
*/

Static Function ImpObrigat(cCdAlias,aCols,aHeader)
	Local cRet 		:= ""

	Do Case

	Case cCdAlias == "SBZ"

		If Empty(RetCol("BZ_FILIAL",aCols,aHeader))
			cRet += " / Coluna BZ_FILIAL esta vazia! "
		EndIf
		If Empty(RetCol("BZ_COD",aCols,aHeader))
			cRet += " / Coluna BZ_COD esta vazia! "
		EndIf
		If RetCol("CODEMP",aCols,aHeader) <> cEmpAnt
			cRet += " / Coluna CODEMP diferente da empresa logada! "
		EndIf
	Case cCdAlias == "SB0"

		If Empty(RetCol("B0_FILIAL",aCols,aHeader))
			cRet += " / Coluna B0_FILIAL esta vazia! "
		EndIf
		If Empty(RetCol("B0_COD",aCols,aHeader))
			cRet += " / Coluna B0_COD esta vazia! "
		EndIf
		If Empty(RetCol("B0_YLUCRO",aCols,aHeader))
			cRet += " / Coluna B0_YLUCRO esta vazia! "
		EndIf
		If RetCol("CODEMP",aCols,aHeader) <> cEmpAnt
			cRet += " / Coluna CODEMP diferente da empresa logada! "
		EndIf

	Case cCdAlias == "SB1"

		If Empty(RetCol("B1_COD",aCols,aHeader))
			cRet += " / Coluna B1_COD esta vazia! "
		EndIf
		
	Case cCdAlias == "SZP"


		If Empty(RetCol("ZP_CRU",aCols,aHeader))
			cRet += " / Coluna ZP_CRU esta vazia! "
		EndIf

		If Empty(RetCol("ZP_PRODUTO",aCols,aHeader))
			cRet += " / Coluna ZP_PRODUTO esta vazia! "
		EndIf


	Case cCdAlias == "SLK"


		If Empty(RetCol("LK_CODIGO",aCols,aHeader))
			cRet += " / Coluna LK_CODIGO esta vazia! "
		EndIf

		If Empty(RetCol("LK_QUANT",aCols,aHeader))
			cRet += " / Coluna LK_QUANT esta vazia! "
		EndIf

		If Empty(RetCol("LK_CODBAR",aCols,aHeader))
			cRet += " / Coluna LK_CODBAR esta vazia! "
		EndIf

	Case cCdAlias == "ZZZ"

		If Empty(RetCol("ZZZ_COD",aCols,aHeader))
			cRet += " / Coluna ZZZ_COD esta vazia! "
		EndIf

		If Empty(RetCol("ZZZ_SEGMEN",aCols,aHeader))
			cRet += " / Coluna ZZZ_SEGMEN esta vazia! "
		EndIf

		If Empty(RetCol("ZZZ_YLUCRO",aCols,aHeader))
			cRet += " / Coluna ZZZ_YLUCRO esta vazia! "
		EndIf
		If RetCol("CODEMP",aCols,aHeader) <> cEmpAnt
			cRet += " / Coluna CODEMP diferente da empresa logada! "
		EndIf
	EndCase

Return cRet

/*
?????????????????????????????????????????????????????????????????????????????
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±????????????????????????????????????????????????????????????????????????»±±
±±?Programa  ³ImpGrava  ?Autor  ³Jonas L. Souza Jr   ? Data ³  02/16/10   ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±?Desc.     ³Chamada da rotina automatica de gravacao                    ?±±
±±?          ³                                                            ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±?Uso       ³ Totvs                                                      ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
?????????????????????????????????????????????????????????????????????????????
*/

Static Function ImpGrava(cCdAlias,cRotina,aCols,aHeader)

	Local nX			:= 0
	Local cRotAuto		:= ""
	Local lOk			:= .F.
	Local lGeraNumSeq	:= .T.
	Local lTemFilial	:= .F.
	Local cCpoFilial 	:= IIf( SubStr(cCdAlias,1,1) == "S", SubStr(cCdAlias,2,2), cCdAlias) + "_FILIAL"
	Local cFilAlias		:= xFilial(cCdAlias)
	Private lMsHelpAuto := .T.
	Private lMsErroAuto := .F.
	Private aReg		:= {}
	Private _cArqErro		:= "ERRO_IMPORT_CSV.TXT"

	IF cCdAlias == "SBZ"
		FCreatSBZ("SBZ")
		lOk := .T.

	Elseif cCdAlias == "SB0"
		FCreatSB0("SB0")
		lOk := .T.

	Elseif cCdAlias == "SB1"
		lOk := FCreatSB1("SB1",aHeader)

	Elseif cCdAlias == "SZP"
		lOk := FCreatSZP("SZP")
		//lOk := .T.

	Elseif cCdAlias == "SLK"
		lOk := FCreatSLK("SLK")

	ElseIf cCdAlias == "ZZZ"
		lOk := FCreatZZZ("ZZZ")

	Else

    /*
		//?????????????????????????????????????????????????????????????????
		//³Monta array com os campos do registro                          ³
		//?????????????????????????????????????????????????????????????????
		For nX:=1 to Len(aHeader)
			AAdd(aReg, {	Upper(Alltrim(aHeader[nX]))					    ,;
							RetCol(Alltrim(aHeader[nX]),aCols,aHeader)		,;
							Nil} )

			//??????????????????????????????????????????????????????????????????????
			//³Verifica se possui campo sequencial informado                       ³
			//??????????????????????????????????????????????????????????????????????
			If cCdAlias == "SA1" .AND. Upper(Alltrim(aHeader[nX])) == "A1_COD" .AND. !Empty(RetCol(Alltrim(aHeader[nX]),aCols,aHeader))
				lGeraNumSeq	:= .F.
			EndIf
			If cCdAlias == "SA2" .AND. Upper(Alltrim(aHeader[nX])) == "A2_COD" .AND. !Empty(RetCol(Alltrim(aHeader[nX]),aCols,aHeader))
				lGeraNumSeq	:= .F.
			EndIf
			If cCdAlias == "SA3" .AND. Upper(Alltrim(aHeader[nX])) == "A3_COD" .AND. !Empty(RetCol(Alltrim(aHeader[nX]),aCols,aHeader))
				lGeraNumSeq	:= .F.
			EndIf

			//??????????????????????????????????????????????????????
			//³Verifica se informou filial no arquivo              ³
			//??????????????????????????????????????????????????????
			If Upper(Alltrim(aHeader[nX])) == cCpoFilial
				lTemFilial := .T.
		    EndIf
		Next

		If lGeraNumSeq
			If cCdAlias == "SA1"
				AAdd(aReg, {	"A1_COD"					    ,;
								GetSxeNum("SA1","A1_COD")		,;
								Nil} )
				ConfirmSx8()
			EndIf
			If cCdAlias == "SA2"
				AAdd(aReg, {	"A2_COD"					    ,;
								GetSxeNum("SA2","A2_COD")		,;
								Nil} )
				ConfirmSx8()
			EndIf
			If cCdAlias == "SA3"
				AAdd(aReg, {	"A3_COD"					    ,;
								GetSxeNum("SA3","A3_COD")		,;
								Nil} )
				ConfirmSx8()
			EndIf
		EndIf


		If !lTemFilial
			DbSelectArea(cCdAlias)
			AAdd(aReg, {	cCpoFilial					    ,;
							cFilAlias						,;
							Nil} )
		EndIf


		//???????????????????????????????????????????????????????????????????
		//³Chamada da rotina automatica                                     ³
		//???????????????????????????????????????????????????????????????????
		DbSelectArea(cCdAlias)

		cRotAuto := "MSExecAuto({|x,y| "+cRotina+"(x,y)},aReg,3)"
		&cRotAuto

		If lMsErroAuto
			MostraErro( GetSrvProfString("Startpath","") , _cArqErro )
			cMsg := MemoRead(  GetSrvProfString("Startpath","") + '\' + _cArqErro )
		Else
			lOk := .T.
		EndIf
      */
	Endif
Return {lOk, cMsg }

/*
?????????????????????????????????????????????????????????????????????????????
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±????????????????????????????????????????????????????????????????????????»±±
±±?Programa  ³ImpChgRadio?Autor ³Jonas L. Souza Jr   ? Data ³  02/16/10   ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±?Desc.     ³tratamento de mudanca to tipo de arquivo para importacao    ?±±
±±?          ³                                                            ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±?Uso       ³ Totvs                                                      ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
?????????????????????????????????????????????????????????????????????????????
*/
Static Function ImpChgRadio(nRadioArq,cNmAlias)
	Do Case
	Case nRadioArq == 1
		cNmAlias := "Estoque de Seguran?a(SBZ)"
	Case nRadioArq == 2
		cNmAlias := "Cadastro Produtos(SB1)"
	Case nRadioArq == 3
		cNmAlias := "Cadastro CRU(SZP)"
	Case nRadioArq == 4
		cNmAlias := "Lucratividade (SB0)"
	Case nRadioArq == 5
		cNmAlias := "Codigo de barras(SLK)"
	Case nRadioArq == 6
		cNmAlias := "Lucratividade (ZZZ)"
	OtherWise
		cNmAlias := "Processamento nao implementado"
	EndCase

Return

/*
?????????????????????????????????????????????????????????????????????????????
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±????????????????????????????????????????????????????????????????????????»±±
±±?Programa  ³FCreatSBZ  ?Autor ³Kuhn                ? Data ³  11/02/14   ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±?Desc.     ³tratamento para Gravacao na tabela SBZ                      ?±±
±±?          ³                                                            ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±?Uso       ³ Totvs                                                      ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
?????????????????????????????????????????????????????????????????????????????
*/
Static Function FCreatSBZ(cAlias)

	DbselectArea(cAlias)
	DbSetOrder(1)

	//SE EXISTE O REGISTRO, ELE ? ATUALIZADO, CASO CONTRARIO SER? INSERIDO UM NOVO REGISTRO NA TABELA
	If DBSeek(acols[2] + PADR(acols[3],TamSX3("B1_COD")[1])) //filial + cod produto

		RecLock(cAlias,.F.)

		SBZ->BZ_ESTSEG   := Val(acols[4])
		SBZ->BZ_TOLER    := Val(acols[5])
		SBZ->BZ_EMIN     := ROUND(((SBZ->BZ_EMAX+Val(acols[4]))*Val(acols[5]))/100,0)//ROUND(((M->BZ_EMAX+M->BZ_ESTSEG)*M->BZ_TOLER)/100,0)

		MSUnlock()

		cAltReg := '1'

	Else

		RecLock(cAlias,.T.)

		SBZ->BZ_FILIAL   := acols[2]
		SBZ->BZ_COD      := acols[3]
		SBZ->BZ_ESTSEG   := Val(acols[4])
		SBZ->BZ_TOLER    := Val(acols[5])
		SBZ->BZ_EMIN     := ROUND((( 0 + Val(acols[4]))*Val(acols[5]))/100,0)
		SBZ->BZ_LOCPAD   := CriaVar("BZ_LOCPAD")
		SBZ->BZ_MCUSTD   := CriaVar("BZ_MCUSTOD")
		SBZ->BZ_TIPOCQ   := CriaVar("BZ_TIPOCQ")
		SBZ->BZ_PICMRET  := CriaVar("BZ_PICMRET")
		SBZ->BZ_ORIGEM   := CriaVar("BZ_ORIGEM")
		SBZ->BZ_PIS      := CriaVar("BZ_PIS")
		SBZ->BZ_COFINS   := CriaVar("BZ_COFINS")
		SBZ->BZ_CSLL     := CriaVar("BZ_CSLL")
		SBZ->BZ_YFABRIC  := POSICIONE('SB1',1,xFilial('SB1')+aCols[3],'B1_FABRIC')

		MSUnlock()

		cAltReg := '2'

	EndIf

Return()

/*
?????????????????????????????????????????????????????????????????????????????
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±????????????????????????????????????????????????????????????????????????»±±
±±?Programa  ³FCreatSB0  ?Autor ³Kuhn                ? Data ³  11/02/14   ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±?Desc.     ³tratamento para Gravacao na tabela SBZ                      ?±±
±±?          ³                                                            ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±?Uso       ³ Totvs                                                      ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
?????????????????????????????????????????????????????????????????????????????
*/
Static Function FCreatSB0(cAlias)

	Local cYFilial := Alltrim(aCols[2])
	Local cYCod    := Alltrim(aCols[3])
	Local nYLucro  := Val(aCols[4])

	(cAlias)->(DBSetOrder(1))

	If (cAlias)->(DBSeek(cYFilial + PADR(cYCod,TamSX3("B1_COD")[1]))) //filial + cod produto

		RecLock(cAlias,.F.)

		SB0->B0_YLUCRO   := nYLucro
		SB0->B0_YDESC    := POSICIONE('SB1',1,xFilial('SB1') + cYCod, 'B1_DESC')
		SB0->B0_YFABRIC  := POSICIONE('SB1',1,xFilial('SB1') + cYCod, 'B1_FABRIC')
		SB0->B0_YDATA    := CriaVar('B0_YDATA')

		MsUnlock()

		cAltReg := '1'

	Else

		RecLock(cAlias,.T.)

		SB0->B0_FILIAL   := cYFilial
		SB0->B0_COD      := cYCod
		SB0->B0_YLUCRO   := nYLucro
		SB0->B0_YDESC    := POSICIONE('SB1',1,xFilial('SB1') + cYCod, 'B1_DESC')
		SB0->B0_YFABRIC  := POSICIONE('SB1',1,xFilial('SB1') + cYCod, 'B1_FABRIC')
		SB0->B0_YDATA    := CriaVar('B0_YDATA')

		MsUnlock()

		cAltReg := '2'

	EndIf

Return()

/*
?????????????????????????????????????????????????????????????????????????????
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±????????????????????????????????????????????????????????????????????????»±±
±±?Programa  ³FCreatSB1  ?Autor ³Kuhn                ? Data ³  18/03/14   ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±?Desc.     ³tratamento para Gravacao na tabela SB1                      ?±±
±±?          ³                                                            ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±?Uso       ³ Totvs                                                      ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
?????????????????????????????????????????????????????????????????????????????
*/
Static Function FCreatSB1(cAlias,aHeader)

	Local aProd		:= {}
	Local aProdSB5	:= {}
	Local aProdVTB	:= {}
	Local aProdVTA	:= {}

//	Local nPsCod		:= AScan(aHeader,{|x| Upper(AllTrim(x)) == Upper(Alltrim("B1_COD")) })
	Local nPsFab		:= 0 //AScan(aHeader,{|x| Upper(AllTrim(x)) == Upper(Alltrim("B1_YDESCR2")) }) //AScan(aHeader,{|x| Upper(AllTrim(x)) == Upper(Alltrim("B1_YDESCR2")) })
	Local cTipoX3		:= ''
	Local cFab			:= ''
	Local cMsgB5 		:= ''
	Local cCrlf			:= Chr(13) + Chr(10)
	Local n1			:= 0
	Local cOrigem		:= ''
	Local cGrpTrb		:= ''
	Local cFornec		:= ''
	Local cNCM			:= ''
	Local cGrpCal		:= ''
	Local cProduto		:= ''
	Local cCEST			:= ''
	Local nPsGrpTrb		:= AScan(aHeader,{|x| Upper(AllTrim(x)) == Upper(Alltrim("B1_GRTRIB")) })
	Local nPsCest		:= AScan(aHeader,{|x| Upper(AllTrim(x)) == Upper(Alltrim("B1_CEST")) })
	
	Private nPsCod	:= AScan(aHeader,{|x| Upper(AllTrim(x)) == Upper(Alltrim("B1_COD")) })
	Private _lAchou	:= .f.
	Private lRetSB1	:= .t.

	For n1 := 1 to Len(aHeader)

		If Substr(Alltrim(aHeader[n1]),1,3) == 'B1_'
			If !Empty(aCols[n1]) //se tiver informa??o na coluna

				cTipoX3 := Posicione('SX3',2,Alltrim(aHeader[n1]),'X3_TIPO')

				Do Case
				Case cTipoX3 == 'C'
					aCols[n1] := Alltrim(aCols[n1])
				Case cTipoX3 == 'N'
					aCols[n1] := Val(aCols[n1])
				Case cTipoX3 == 'D'
					aCols[n1] := CToD(aCols[n1])
				End Case

				If Alltrim(aHeader[n1]) == "B1_COD"

					//SB1
					AAdd(aProd,{Alltrim(aHeader[n1]),PadR(aCols[n1],TAMSX3('B1_COD')[1]),NIL})
					//SB5
					aAdd(aProdSB5,{Alltrim("B5_FILIAL"),PADR(Alltrim(xFilial("SB5")),TamSX3("B5_FILIAL")[1]),NIL})
					aAdd(aProdSB5,{Alltrim("B5_COD"),PADR(Alltrim(aCols[n1]),TamSX3("B1_COD")[1]),NIL})
					cProduto := PadR(aCols[n1],TAMSX3('B1_COD')[1])

				ElseIf Alltrim(aHeader[n1]) == "B1_PESO"

					If aCols[n1] > 0

						AAdd(aProd,{Alltrim(aHeader[n1]),aCols[n1],NIL})

					EndIf

				ElseIf Alltrim(aHeader[n1]) == "B1_PESBRU"

					If aCols[n1] > 0

						AAdd(aProd,{Alltrim(aHeader[n1]),aCols[n1],NIL})

					EndIf

				Else

					AAdd(aProd,{Alltrim(aHeader[n1]),aCols[n1],NIL})

				Endif

				If Alltrim(aHeader[n1]) == "B1_ORIGEM"
					cOrigem:= aCols[n1]
				ElseIf Alltrim(aHeader[n1]) == "B1_PROC"
					cFornec:= aCols[n1]
				ElseIf Alltrim(aHeader[n1]) == "B1_POSIPI"
					cNCM	:= aCols[n1]
				ElseIf Alltrim(aHeader[n1]) == "B1_GRTRIB"
					cGrpTrb:= aCols[n1]
				EndIf

			Endif

		Elseif Substr(Alltrim(aHeader[n1]),1,3) == 'B5_'

			If !Empty(aCols[n1]) //se tiver informa??o na coluna

				cTipoX3 := Posicione('SX3',2,Alltrim(aHeader[n1]),'X3_TIPO')

				If 'B5_DESC' $ Alltrim(aHeader[n1])

					cMsgB5 += (aCols[n1] + cCrlf )

				Else

					Do Case
					Case cTipoX3 == 'C'
						aCols[n1] := Alltrim(aCols[n1])
					Case cTipoX3 == 'N'
						aCols[n1] := Val(aCols[n1])
					Case cTipoX3 == 'D'
						aCols[n1] := CToD(aCols[n1])
					End Case

					AAdd(aProdSB5,{Alltrim(aHeader[n1]),aCols[n1],NIL})

				endif


			Endif

    	//Verifica se existe os camposa no SX5 pelo header do arquivo
		Elseif (_nPos := aScan(_aSX5,{|x|Alltrim(x[2]) == Alltrim(aHeader[n1])})) > 0 //Len(aHeader[n1]) >= 1 //.and. Substr(Alltrim(aHeader[n1]),1,3) <> 'VTA'

			If !Empty(aCols[n1]) //se tiver informa??o na coluna

			//Estrutura: Produto + Codigo ZY + Valor
				AAdd(aProdVTB,{PADR(Alltrim(aCols[nPsCod]),TamSX3("B1_COD")[1]), ;
					_aSX5[_nPos,1], ;
					aCols[n1], aHeader[n1]})
			Endif
		Endif
	Next

  	//Descri??o do Fabricante
 	If (nPsFab := AScan(aHeader,{|x| Upper(AllTrim(x)) == Upper(Alltrim("B1_FABRIC")) })) > 0
		cFab := Posicione('SZ1',2,xFilial('SZ1')+PADR(Alltrim(aCols[nPsFab]),TamSX3("B1_FABRIC")[1]),'Z1_FABRIC')

	//C?digo do Fabricante
	ElseIf (nPsFab := AScan(aHeader,{|x| Upper(AllTrim(x)) == Upper(Alltrim("B1_YDESCR2")) }) ) > 0
		cFab := Posicione('SZ1',1,xFilial('SZ1')+PADR(Alltrim(aCols[nPsFab]),TamSX3("B1_YDESCR2")[1]),'Z1_FABRIC')

	//N?o tendo fica vazio
	Else
		cFab := ""
	EndIf


	If _nOpca
		(cAlias)->(DBGoTop())
		//(cAlias)->(DBSetOrder(12))
		//lAchou := (cAlias)->(DBSeek(xFilial('SB1') + cFab + PADR(Alltrim(aCols[nPsCod]),TamSX3("B1_COD")[1]))) //filial+fabricante+ cod produto
		(cAlias)->(DBSetOrder(1))
		lAchou := (cAlias)->(DBSeek(xFilial('SB1') + PADR(Alltrim(aCols[nPsCod]),TamSX3("B1_COD")[1]))) //filial+ cod produto
	Else
		(cAlias)->(DBGoTop())
		(cAlias)->(DBSetOrder(1))
		lAchou := (cAlias)->(DBSeek(xFilial('SB1') + PADR(Alltrim(aCols[nPsCod]),TamSX3("B1_COD")[1]))) //filial+ cod produto
	Endif

	If Len(aProd) > 0

		If Empty(cNCM) .and. lAchou
			cNCM := POSICIONE('SB1', 1, xFilial('SB1')+SB1->B1_COD, 'SB1->B1_POSIPI')
		EndIf

		If Empty(cGrpTrb) .and. lAchou
			cGrpTrb := SB1->B1_GRTRIB
		EndIf


		//Chamado 6009 - Service Desk
		IF cEmpAnt <> "03"

			cGrpCal  := AllTrim(U_AjusGTrib(cProduto, cNCM, , , cFornec, cOrigem, cGrpTrb))

			If cGrpTrb <> cGrpCal
				aCols[nPsGrpTrb] := cGrpCal

				nPos := aScan(aProd, {|x| UPPER(AllTrim(x[1])) == 'B1_GRTRIB'})

				If nPos == 0
					AAdd(aProd,{'B1_GRTRIB',cGrpCal,NIL})
				Else
					aProd[nPos,2] := cGrpCal
				EndIf

				If !Posicione('SX5', 1, xFilial('SX5')+'21'+cGrpCal, 'Found()')
					cAltReg := iif(lAchou, '3', '5')
					cMsg += Chr(13) + "O c?digo de tributa??o cadastrado ? diferente do calculado ("+cGrpCal+"), por?m o calculado n?o est? cadastrado."+;
									"Favor entrar em contato com a contabilidade."
					lRetSB1  := .F.
				EndIf
			EndIf

		End If

		cCEST := POSICIONE('SYD', 1, xFilial('SYD')+cNCM, 'SYD->YD_YCEST')
		aCols[nPsCest] := cCEST


		nPos := aScan(aProd, {|x| UPPER(AllTrim(aProd[1])) == 'B1_CEST'})
		If nPos == 0
			AAdd(aProd,{'B1_CEST',cCEST,NIL})
		Else
			aProd[nPos] := cCEST
		EndIf

		If ((nPsFab := AScan(aHeader,{|x| Upper(AllTrim(x)) == Upper(Alltrim("B1_YDESCR2")) }) ) > 0 )
			cFab := Posicione('SZ1',1,xFilial('SZ1')+PADR(Alltrim(aCols[nPsFab]),TamSX3("B1_YDESCR2")[1]),'Z1_FABRIC')
			if ! Empty(cFab)
				AAdd(aProd,{'B1_FABRIC',cFab,NIL})
			Endif
		Endif
		
		If ! Empty(cNCM) .and. !Subs(cGrpTrb, 1, 3) $ '024/008/009/007' .and. cCEST == ''
			cAltReg := iif(lAchou, '3', '5')
			cMsg += Chr(13) + " Cod Prod (SB1): "+ Alltrim(cProduto) +" - NCM sem CEST"
			lRetSB1  := .F.

		EndIf
		
		//Execauto para gravar/alterar produto
		ExecSB1(aProd) //_importAut(aProd,'MATA010')

		If len(aProdSB5) > 0

			///aAdd(aProdSB5,{Alltrim("B5_COD"),PADR(Alltrim(aCols[nPsCod]),TamSX3("B1_COD")[1]),NIL})
			If ! Empty(cMsgB5)
				aAdd(aProdSB5,{'B5_ECAPRES',cMsgB5,NIL})
			EndIf

			//Execauto para grava/alterar complemento produto
			ExecSB5(aProdSB5) // _importAut(aProdSB5,'MATA180' )

		Endif

		If len(aProdVTB) > 0
		//aAdd(aProdVTB,{Alltrim(aHeader[nPsCod]),PADR(Alltrim(aCols[nPsCod]),TamSX3("B1_COD")[1]),NIL})
			GravaVTB(aProdVTB)
		Endif

	Endif

Return(lRetSB1) //lRet -> Alterado

/*
?????????????????????????????????????????????????????????????????????????????
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±????????????????????????????????????????????????????????????????????????»±±
±±?Programa  ³FCreatSzp  ?Autor ³Kuhn                ? Data ³  15/07/14   ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±?Desc.     ³tratamento para Gravacao na tabela SZP                      ?±±
±±?          ³                                                            ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±?Uso       ³ Totvs                                                      ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
?????????????????????????????????????????????????????????????????????????????
*/
Static Function aScanArq(nIndice, cValorProc)
	
	Local nI	 		:= 0
	Local cLinha		:= ""
	Local aColsLin		:= {}
	Local cValor		:= ""	
	
	For nI := 1 To Len(aLinhas)
		cLinha		:= aLinhas[nI]
		aColsLin 	:= TrataCols(cLinha, ";") //todo trocar separador para global
	 	cValor 		:= aColsLin[nIndice]
	 	
	 	If (AllTrim(cValor) == AllTrim(cValorProc))
	 		If (AllTrim(aColsLin[1]) == aCols[1]) //verifica mesmo CRU
	 			Return nI
	 		EndIf
	 	EndIf
	 	
	Next nI 
	 		
Return 0

//Valida tipo de compra 
Static Function VALCOM()
	
	Local nI	:= 0
	Local lOk	:= .T.	
	
	//ZP_COMPRA: 1=Linha Comprar Sim;2=Linha Comprar Nao;3=Fora de Linha;       
	//ZP_TPPROD: P=Pai;F=Filho                                                                 
	
	If (AllTrim(aCols[COLTPPROD]) == 'P')//produto pai
		If (AllTrim(aCols[COLCOMPRAR]) == '3' .Or. AllTrim(aCols[COLCOMPRAR]) == '2')
			cMsg += "Produto pai marcado como (Fora de Linha ou Linha Comprar Nao). Favor acertar o produto: "+AllTrim(aCols[COLPROD])
			lOk := .F.
		EndIf
	EndIf
	
Return lOk


Static Function VALOKPP()
	
	Local nI	 		:= 0
	Local lOk			:= .T.	
	Local NL			:= Chr(13) + Chr(10)
	Local nP			:= 0
	Local cLinha		:= ""
	Local aColsLin		:= {}	
	
	Local cProd			:= AllTrim(aCols[COLPROD])//produto
 	Local cTipoProd		:= Alltrim(aCols[COLTPPROD])
	Local cProdPrin		:= Alltrim(aCols[COLPRODP])
	Local nPorcProd		:= Val(Alltrim(aCols[COLPORCP]))
	
	//COLPROD
	//COLTPPROD
	//COLPRODP
	//COLPORCP
	
	If (cTipoProd == 'P')
 		nP := aScanArq(COLPRODP, cProd)  //nP := aScan(aCols,{|x| Alltrim(x[nPosPPP]) == cProd})
		If (nP == 0)
			cMsg += "Produto pai informado: "+AllTrim(cProd)+" n?o tem produto filho."+NL 
			lOk	:= .F.
		EndIf
 	EndIf	
		
		
 	If (cTipoProd == 'F')
 		
 		nP := aScanArq(COLPROD, cProdPrin)  //(aCols,{|x| Alltrim(x[nPosPP]) == cProdPri})
		
		If (nP == 0)
			cMsg += "Produto pai informado: "+AllTrim(cProdPrin)+" n?o existe na listagem."+NL 
			lOk	:= .F.
		EndIf
		
		If (nP > 0)
			
			cLinha		:= aLinhas[nP]
			aColsLin 	:= TrataCols(cLinha, ";")
			cTipoProd 	:= aColsLin[COLTPPROD]
 
			If (cTipoProd <> 'P')
				cMsg += "CRU sem produto pai informado: "+AllTrim(cProdPrin)+" n?o e produto pai."+NL 
				lOk	:= .F.
			EndIf
		EndIf
		
 	EndIf 	
 									
Return lOk

Static Function VALOKPER()

	Local cTipoProd		:= Alltrim(aCols[COLTPPROD])
	Local cProdPrin		:= Alltrim(aCols[COLPRODP])
	Local nPorcProd		:= Val(Alltrim(aCols[COLPORCP]))
	Local nPerceMin		:= GETNEWPAR("MV_YPERSEC", 0)
	Local NL			:= Chr(13) + Chr(10)
	Local lOk			:= .T.
	
	// valida??o porcentagem
	If (cTipoProd == 'F')
		If (nPorcProd > 100)
			cMsg += "A porcetagem informada no produto "+AllTrim(cProdPrin)+" n?o pode ser maior que 100%."+NL 
			lOk	:= .F.
		EndIf
		
		If (nPorcProd < nPerceMin)
			cMsg += "A porcetagem informada no produto "+AllTrim(cProdPrin)+" n?o pode ser menor que m?nimo configurada "+cValToChar(nPerceMin)+"%."+NL
			lOk	:= .F.
		EndIf
	EndIf

Return lOk

Static Function VCOMPRAOK()
	
	If(VALOKPER() .And. VALOKPP() .And. VALCOM())
		Return .T. 
	EndIf	
Return .F.


Static Function FCreatSZP(cAlias)

	Local cYCRU    	:= Alltrim(aCols[1])
	Local cYCod    	:= Alltrim(aCols[2])
	Local cYAgCom  	:= Alltrim(aCols[3])
	Local cYAgVen  	:= Alltrim(aCols[4])
	Local cGrpCom  	:= Alltrim(aCols[5])
	Local cGrpVen  	:= Alltrim(aCols[6])
	
	Local cComprar	:= IIF(Len(aCols) == 10, Alltrim(aCols[7]), "") 
	Local cTipoProd	:= IIF(Len(aCols) == 10, Alltrim(aCols[8]), "") 
	Local cProdPrin	:= IIF(Len(aCols) == 10, Alltrim(aCols[9]), "") 
	Local nPorcProd := IIF(Len(aCols) == 10, Alltrim(aCols[10]), "0") 
	
	Private COLPROD 	:= 2
	Private COLCOMPRAR	:= 7
	Private COLTPPROD	:= 8
	Private COLPRODP	:= 9
	Private COLPORCP	:= 10
	
	
	If (cTipoProd <> 'F')
		cProdPrin := ""
		nPorcProd := "0"
	EndIf
	
	//Apenas se existir as colunas
	If (!Empty(cTipoProd))
		If (!VCOMPRAOK())
			cAltReg := '4'
			Return .F.
		EndIf	
	EndIf
	
	//cAltReg := '1'
	//Return .T.
	
	
	(cAlias)->(DBSetOrder(1))
	If (cAlias)->(DBSeek(xFilial("SZP") + PADR(cYCRU,TamSX3( "ZP_CRU" )[ 1 ]) + PADR(cYCOD,TamSX3( "ZP_PRODUTO" )[ 1 ]))) //filial + cod produto

		RecLock(cAlias,.F.)

		If !Empty(cYAgCom)
			SZP->ZP_AGLUCOM  := cYAgCom
		Endif

		If !Empty(cYAgVen)
			SZP->ZP_AGLUVEN  := cYAgVen
		Endif
		
		If !Empty(cGrpCom)
			SZP->ZP_GRUPCOM  := cGrpCom
		Endif
		
		If !Empty(cGrpVen)
			SZP->ZP_GRUPVEN  := cGrpVen
		Endif
		
		If (!Empty(cTipoProd))
			SZP->ZP_TPPROD	:= cTipoProd
		EndIf
		
		If (!Empty(cProdPrin))
			SZP->ZP_PDPRINC	:= cProdPrin
		EndIf
		
		If (!Empty(nPorcProd))
			SZP->ZP_PERCPRC := Val(nPorcProd)
		EndIf
		

		MsUnlock()
		cAltReg := '1'
	Else

		RecLock(cAlias,.T.) 

		SZP->ZP_FILIAL  := xFilial("SZP")
		SZP->ZP_CRU     := cYCRU
		SZP->ZP_PRODUTO := cYCod
		SZP->ZP_AGLUCOM := cYAgCom
		SZP->ZP_AGLUVEN	:= cYAgVen
		SZP->ZP_GRUPCOM := cGrpCom
		SZP->ZP_GRUPVEN := cGrpVen
		
		SZP->ZP_TPPROD	:= cTipoProd
		SZP->ZP_PDPRINC	:= cProdPrin
		SZP->ZP_PERCPRC := Val(nPorcProd)
		
		MsUnlock()
		cAltReg := '2'

	Endif
	
Return .T.

Static Function FCreatZZZ(cAlias)

	Local cYFilial := Alltrim(aCols[2])
	Local cYSeg    := Alltrim(aCols[3])
	Local cYCod    := Alltrim(aCols[4])
	Local nYLucro  := Val(aCols[5])

	(cAlias)->(DBSetOrder(1)) // ZZZ_FILIAL, ZZZ_COD, ZZZ_SEGMEN, R_E_C_N_O_, D_E_L_E_T_

	If (cAlias)->(DBSeek(cYFilial + PADR(cYCod,TamSX3("ZZZ_COD")[1]) + PADR(cYSeg,TamSX3("ZZZ_SEGMEN")[1]))) //filial + seguimento + cod produto

		RecLock(cAlias,.F.)

		ZZZ->ZZZ_YLUCRO   := nYLucro

		If ZZZ->(FieldPos("ZZZ_DESC")) > 0
			ZZZ->ZZZ_DESC := POSICIONE('SB1',1,xFilial('SB1') + cYCod, 'B1_DESC')
		EndIf

		If ZZZ->(FieldPos("ZZZ_PROC")) > 0
			ZZZ->ZZZ_PROC :=  POSICIONE('SB1',1,xFilial('SB1') + cYCod, 'B1_PROC')
		EndIf
		
		If ZZZ->(FieldPos("ZZZ_FABRIC")) > 0
			ZZZ->ZZZ_FABRIC :=  POSICIONE('SB1',1,xFilial('SB1') + cYCod, 'B1_FABRIC')
		EndIf

		ZZZ->ZZZ_DATAPR   :=  ctod('')//CriaVar('ZZZ_DATAPR')

		MsUnlock()

		cAltReg := '1'

	Else
		/*
		RecLock(cAlias,.T.)

		ZZZ->ZZZ_FILIAL   := cYFilial
		ZZZ->ZZZ_COD      := cYCod
		ZZZ->ZZZ_YLUCRO   := nYLucro

		If ZZZ->(FieldPos("ZZZ_DESC")) > 0
			ZZZ->ZZZ_DESC    	:= POSICIONE('SB1',1,xFilial('SB1') + cYCod, 'B1_DESC')
		EndIF

		If ZZZ->(FieldPos("ZZZ_PROC")) > 0
			ZZZ->ZZZ_PROC	  := POSICIONE('SB1',1,xFilial('SB1') + cYCod, 'B1_FABRIC')
		EndIF

		ZZZ->ZZZ_DATAPR   := dDataBase

		MsUnlock()

		cAltReg := '2'
		*/
	EndIf

Return()

/*
?????????????????????????????????????????????????????????????????????????????
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±????????????????????????????????????????????????????????????????????????»±±
±±?Programa  ³FCreatSLK  ?Autor ³Kuhn                ? Data ³  26/11/14   ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±?Desc.     ³tratamento para Gravacao na tabela SLK                      ?±±
±±?          ³                                                            ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±?Uso       ³ Totvs                                                      ?±±
±±?????????????????????????????????????????????????????????????????????????±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
?????????????????????????????????????????????????????????????????????????????
*/
Static Function FCreatSLK(cAlias)

	Local cCodProd := Alltrim(aCols[1])
	Local nQuant   := Alltrim(aCols[2])
	Local cCodBar  := Alltrim(aCols[3])
	Local lRet     := .T.

	If cEmpAnt <> '08'
		Aviso('Atencao','A importa??o da SLK dever? ser feita na empresa 08',{Fechar})
		Return
	Else
		(cAlias)->(DBSetOrder(1))
		If (cAlias)->(DBSeek(xFilial("SLK") + PADR(cCodBar,TamSX3( "ZP_CRU" )[ 1 ]))) //filial + cod bar
			cAltReg := '3'
		Else
			RecLock(cAlias,.T.)

			SLK->LK_FILIAL  := xFilial("SLK")
			SLK->LK_CODIGO  := cCodProd
			SLK->LK_QUANT   := Val(nQuant)
			SLK->LK_CODBAR  := cCodBar

			MsUnlock()
			cAltReg := '2'

		Endif

	Endif


	If cAltReg == '3'
		lRet := .F.
	Endif


Return lRet

//recupera tabela SX5 para
//ser utilizado como referente para cabecalho arquivo
//e gravar dados na tabela VTB
Static Function fASX5()

	Local _aArea	:= GetArea()
	Local _cAlias	:= GetNextAlias()

//Recuperar dados tabela SX5
	BeginSQL Alias _cAlias

		SELECT
		SX5.X5_CHAVE, SX5.X5_DESCRI
		FROM %table:SX5% SX5

		WHERE
		SX5.%NotDel%
		AND SX5.X5_FILIAL = %EXP:xFilial("SX5")%
		AND SX5.X5_TABELA = %EXP:'ZY'%

	EndSQL


	(_cAlias)->(dbGoTop())

	Do While !(_cAlias)->(Eof())

		aAdd(_aSX5,{Alltrim((_cAlias)->X5_CHAVE), Alltrim((_cAlias)->X5_DESCRI)})

		(_cAlias)->(dbSkip())

	EndDo

	(_cAlias)->(dbCloseArea())


	RestArea(_aArea)

Return


// Funcao para gravar/alterar registro
// na tabela VTB
// VTB_CODIGO = Codigo da tabela SX5 -> ZY
// VTB_PRODUT = Armazena C?digo do produto
// VTB_TITULO = Ser? convertido em campo vitual, nao armazenar. ==> Deve ser convertido para tabela ZY e atualizado o campo VTB_CODIGO
// VTB_CARACT = Caracteristicas, armezena o valor encontrado.
// Estrutura: Produto + Codigo ZY + Valor
Static Function GravaVTB(_aProdVTB)

	Local _aArea	:= GetArea()
	Local _lReg	:= .F.
	Local _nX		:= 0

	For _nX := 1 to len(_aProdVTB)

		DbSelectArea("VTB")
		VTB->(DbSetOrder(3))
		_lReg := VTB->(DbSeek(xfilial("VTB")+_aProdVTB[_nX,1]+_aProdVTB[_nX,2]))

		RecLock("VTB",!_lReg)

		VTB->VTB_FILIAL	:=	xFilial("VTB")
		VTB->VTB_CODIGO	:=	_aProdVTB[_nX,2]
		VTB->VTB_PRODUT	:=	_aProdVTB[_nX,1]
		VTB->VTB_CARACT  	:= 	_aProdVTB[_nX,3]
		VTB->VTB_TITULO	:=	_aProdVTB[_nX,4]

		MsUnlock()

	Next _nX


	RestArea(_aArea)

Return

// Funcao para gravar/alterar registro - henry
// na tabela VTA
// VTA_CODIGO = Sequencial quando for inclusao
// VTA_PRODUT = Armazena C?digo do produto
// VTB_URL 	= Armazena valor da URL no arquivo CSV
// Estrutura: Produto + Valor
Static Function GravaVTA(_aProdVTA)

	Local _aArea	:= GetArea()
	Local _lReg	:= .F.
	Local _nX		:= 0
	Local nTentativas := 0

	For _nX := 1 to len(_aProdVTA)

		DbSelectArea("VTA")
		VTA->(DbSetOrder(3))
		_lReg := VTA->(DbSeek(xfilial("VTA")+_aProdVTA[_nX,1]+_aProdVTA[_nX,2]))

		If !_lReg
			_cCodigo := GetSxeNum("VTA","VTA_CODIGO")

			DbSelectArea("VTA")
			DbSetOrder(1)
			While VTA->(dbseek(xFilial("VTA")+_cCodigo))
				_cCodigo := GetSxeNum("VTA","VTA_CODIGO")
			EndDo

			ConfirmSx8()
		EndIf

		//Foi criado o bloco abaixo porque o sistema estava travando quando executado junto com o
		//schedule de atualiza??o de produto.
		nTentativas := 0
		If _lReg
			While !VTA->(SimpleLock()) .and. nTentativas <= 20
				nTentativas ++
				Sleep(5000)
			EndDo
		EndIf

		RecLock("VTA", !_lReg)

		If !_lReg

			VTA->VTA_FILIAL := xFilial("VTA")
			VTA->VTA_CODIGO := _cCodigo
			VTA->VTA_PRODUT := _aProdVTA[_nX,1]

		EndIf

		VTA->VTA_URL  	:= 	_aProdVTA[_nX,2]

		VTA->(MsUnlock())

	Next _nX


	RestArea(_aArea)

Return

//MsExecAuto para SB1
Static Function ExecSB1(aProd)

	Local cRotAuto := ''
	Local iz       := 0
	
	Private INCLUI  := .F.
	Private VISUAL  := .F.
	Private ALTERA  := .T.
	Private EXCLUI  := .F.
	Private LCOPIA	:= .F.

	//MsgAlert("Teste execauto SB1...")
	DbSelectArea("SB1")
	DbSetOrder(1)

	If SB1->(DBSeek(xFilial('SB1') + PADR(Alltrim(aCols[nPsCod]),TamSX3("B1_COD")[1]))) //lAchou
		
		/*
		//Realiza altera??o via reclock
		RecLock("SB1",.F.)
		
		For iz := 1 to Len(aProd)
		
			&("SB1->"+aProd[iz][1]) := aProd[iz][2]
		
		Next
		
		SB1->(msUnLock())
		*/
		
		// ==============================================
		// Demetrio - 11/2014 - Integra??o TAF
		// ==============================================
		RegToMemory("SB1",.F.)
		lMsErroAuto := !(A010TudoOk(4))

		MSExecAuto({|x,y| MATA010(x,y)},aProd,4)     //altera??o

		If lMsErroAuto
			lRetSB1  := .F.
			cAltReg := '4'
			MostraErro( GetSrvProfString("Startpath","") , _cArqErro )
			cMsg += Chr(13) + " Cod Prod (SB1): "+ Alltrim(aCols[nPsCod]) +" - "+ MemoRead(  GetSrvProfString("Startpath","") + '\' + _cArqErro )
		Else
			cMsg += Chr(13) + " Cod Prod (SB1): "+ Alltrim(aCols[nPsCod]) +" - Alterado Com Sucesso"
			cAltReg := '1'
		Endif

	Else

		If _nOpca
		   //Incluido a pedido da Totvs que informou que o execAuto MATA010 est? com problema e que o registro n?o pode est? no ?ltimo registro
    		SB1->(DbGoTop())
    		//

			MSExecAuto({|x,y| MATA010(x,y)},aProd,3)     //inclusao

			If lMsErroAuto
				lRetSB1  := .f.
				cAltReg := '4'
				MostraErro( GetSrvProfString("Startpath","") , _cArqErro )
				//cMsg := MemoRead(  GetSrvProfString("Startpath","") + '\' + _cArqErro )
				cMsg += Chr(13) + " Cod Prod (SB1): "+ Alltrim(aCols[nPsCod]) +" - "+ MemoRead(  GetSrvProfString("Startpath","") + '\' + _cArqErro )
			Else
				cMsg += chr(13) + " Cod Prod (SB1): "+ Alltrim(aCols[nPsCod]) + " - Incluido com Sucesso."
				cAltReg := '2'
			Endif
		Else

			lRetSB1  := .f.
			cAltReg := '5'
			cMsg += chr(13) + " Cod Prod (SB1): "+ Alltrim(aCols[nPsCod]) + " - Quando sistema deu op??o de incluir SB1, o usu?rio selecionou n?o."
		Endif

	EndIf

Return

//MsExecAuto para SB5
Static Function ExecSB5(aProdSB5)

	Local cRotAuto := ''
	Local _nZ		:= 0

	//Se o produto nao existir no SB1, n?o tenta registra SB5
	DbSelectArea("SB1")
	DbSetOrder(1)

	If SB1->(DBSeek(xFilial('SB1') + PADR(Alltrim(aCols[nPsCod]),TamSX3("B1_COD")[1])))

		DbSelectArea("SB5")
		DbSetOrder(1)

		If SB5->(DBSeek(xFilial('SB5') + PADR(Alltrim(aCols[nPsCod]),TamSX3("B1_COD")[1])))//lAchou
			If Len(aProdSB5) == 0
				Return
			EndIf

			MSExecAuto({|x,y| MATA180(x,y)},aProdSB5,4)     //altera??o

			If lMsErroAuto
				lRetSB1  := .f.
				cAltReg := '4'
				MostraErro( GetSrvProfString("Startpath","") , _cArqErro )
				cMsg += " Cod Prod (SB5): "+ Alltrim(aCols[nPsCod]) +" - "+ MemoRead(  GetSrvProfString("Startpath","") + '\' + _cArqErro )
			Else
				cAltReg := '1'
				cMsg += Chr(13) + " Cod Prod (SB5): " + Alltrim(aCols[nPsCod]) + " - ALTERADO COM SUCESSO."
			Endif

		Else

			If _nOpca
				aAdd(aProdSB5,{'B5_CEME',PADR(Alltrim(SB1->B1_DESC),TamSX3("B5_CEME")[1]),NIL})

				RecLock("SB5",.T.)
					FOR _nZ := 1 To Len(aProdSB5)
						SB5->&(aProdSB5[_nZ,1]) := aProdSB5[_nZ,2]
					Next _nZ
					SB5->B5_ROTACAO	:= "2"
					SB5->B5_CODZON	:= "000001"
					SB5->B5_UMIND		:= "1"
					SB5->B5_SERVENT	:= ""
					SB5->B5_SERVINT	:= ""
					SB5->B5_SERVSAI	:= ""
					SB5->B5_NPULMAO	:= "1"
					SB5->B5_CARPER	:= "2"
					SB5->B5_IMPETI	:= "2"
					SB5->B5_NSERIE	:= "N"
					SB5->B5_QTDVAR	:= "2"
					SB5->B5_TIPUNIT	:= "1"
					SB5->B5_VLDOPER	:= "1"

				SB5->(MsUnLock())
				cAltReg := '2'
				cMsg += Chr(13) + " Cod Prod (SB5): " + Alltrim(aCols[nPsCod]) + " - INCLUIDO COM SUCESSO."

			Else
				cMsg += chr(13) + " Cod Prod (SB5): "+ Alltrim(aCols[nPsCod]) + " - Quando sistema deu op??o de incluir SB5, o usu?rio selecionou n?o."
				lRetSB1  := .f.
				cAltReg := '5'
			Endif

		EndIf

	Else

		cMsg += chr(13) + " Cod Prod (SB5): " + Alltrim(aCols[nPsCod]) + " - PRODUTO N?O LOCALIZADO NO SB1, COMPLEMENTO DE PRODUTO NAO REGISTRADO."

	EndIf

Return
