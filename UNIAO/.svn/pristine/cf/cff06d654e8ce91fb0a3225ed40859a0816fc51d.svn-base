#INCLUDE "PROTHEUS.CH"
#INCLUDE "TOPCONN.CH"

/*/{Protheus.doc} VIXA258
CLASSE COM AS REGRAS DE NEGOCIO REFERENTE AS TRAVAS DO PROJETO VALIDACAO DE XML - NF-e/ CT-e
@type function
@author WLYSSES CERQUEIRA / FILIPE VIEIRA (FACILE)
@since 19/10/2018
@version 1.0
@return ${return}, ${return_description}
@example
(examples)
@see (links_or_references)
/*/

Class VIXA258 From LongClassName

	Data lVldNfe
	Data oXml
	Data cErroNfe
	Data aProdutos
	Data aPedidos
	Data cFornece
	Data cLoja
	Data cDoc
	Data cSerie
	Data lEnabled
	
	Method New(	cFornece, cLoja, cDoc, cSerie) Constructor
	Method ValidNfe()
	
	Method ValidTpFreteNfe()
	Method ValidCondPagNfe()
	Method ValidCobertura()

	Method RegistraTrava()
	Method WorkFlow()
	Method SetErrNfe(cMsg)
	Method SetErrNfeOk()
	Method GetPedidoItem()
	Method ComxProc()
	
EndClass

Method New(cFornece, cLoja, cDoc, cSerie) Class VIXA258
	
	Default cFornece	:= ""
	Default cLoja		:= ""
	Default cDoc		:= ""
	Default cSerie		:= ""
	
	::lEnabled		:= GetNewPar("MV_YFVLDXM", .T.)
	::lVldNfe		:= .T.
	::cErroNfe		:= ""
	::aProdutos		:= {}
	::aPedidos		:= {}
	
	::cFornece		:= cFornece
	::cLoja			:= cLoja
	::cDoc			:= cDoc
	::cSerie		:= cSerie
	
	If IsInCallStack("U_A140IGRV")
	
		::oXml := PARAMIXB[5]
	
	ElseIf IsInCallStack("U_A140IIMP")
		
		::oXml := PARAMIXB[1]
		
	Else
	
		::oXml := Nil
		
	EndIf
	
Return()

Method SetErrNfe(cMsg) Class VIXA258
	
	Local  cEmailOut := "filipe.vieira@facilesistemas.com.br;wlysses@facilesistemas.com.br"
	Default cMsg := ""
	

	::cErroNfe += CRLF + cMsg
	
	RecLock("SDS", .F.)
	//SDS->DS_STATUS	 := "E"
	SDS->DS_YVLDXML := "S"
	SDS->DS_DOCLOG  := SDS->DS_DOCLOG + ::cErroNfe
	SDS->(MsUnLock())

    u_EnvEmail(cEmailOut,"Erro NF-e FACILE",::cErroNfe)

Return(::cErroNfe)

Method SetErrNfeOk() Class VIXA258

	RecLock("SDS", .F.)
	SDS->DS_YVLDXML := "N"
	SDS->(MsUnLock())
	
Return()

Method ValidNfe() Class VIXA258
	
	If ::lEnabled
	
		If !::ValidCondPagNfe()
			
			::lVldNfe := .F.
			
		EndIf

	EndIf
	
Return(::lVldNfe)

Method ValidCondPagNfe() Class VIXA258

	Local lRet 			:= .T.
	Local aAreaSDT 	    := SDT->(GetArea())
	Local aAreaSC7		:= SC7->(GetArea())
	Local cPed			:= ""
	Local oXml			:= Nil
	Local oAuxCob		:= Nil
	Local oXmlTotNf	:= Nil
	Local cFormPg		:= ""
	Local nItem			:= 0
	Local nW			:= 0
	Local aResp         := {}
	Local cMsgError     := ""
	Local cNumNF        := ""
	
	DBSelectArea("SC7")
	SC7->(DBSetOrder(1)) // C7_FILIAL, C7_NUM, C7_ITEM, C7_SEQUEN, R_E_C_N_O_, D_E_L_E_T_
	
	If ValType(XmlChildEx(::oXml, "_INFNFE")) == "O"
		
		oXml := XmlChildEx(::oXml, "_INFNFE")
		cNumNF := oXml:_IDE:_NNF:TEXT 
		
		If ValType(XmlChildEx(oXml, "_TOTAL")) == "O"
		
			oXmlTotNf := XmlChildEx(oXml, "_TOTAL")
			
			If ValType(XmlChildEx(oXmlTotNf, "_ICMSTOT")) == "O"
			
				oXmlTotNf := XmlChildEx(oXmlTotNf, "_ICMSTOT")
		
				If ValType(XmlChildEx(oXml, "_PAG")) == "O"	
					
					oXml := XmlChildEx(oXml, "_PAG")		
			
					If ValType(XmlChildEx(oXml, "_DETPAG")) == "O"

						oXml := XmlChildEx(oXml, "_DETPAG")

						If ValType(XmlChildEx(oXml, "_INDPAG")) == "O"

							//PARCELAS: Validação do tipo de pgto . 0 a vista, 1 é a prazo.
							If(oXml:_INDPAG:TEXT == "1")
								
								oXml := XmlChildEx(::oXml, "_INFNFE")								

								If ValType(XmlChildEx(oXml, "_COBR")) == "O"
									
								 
									oXml := XmlChildEx(oXml, "_COBR")

									If ValType(XmlChildEx(oXml, "_DUP")) == "A"
										
										oXml := XmlChildEx(oXml, "_DUP")

										For nW := 1 To Len(oXml)

											If !ValType(XmlChildEx(oXml[nW], "_NDUP")) == "O"

												AADD(aResp,"A duplicata " + nW + "  na tag 'nDup' não foi encontrada. NF: " + cNumNF + "<br />" )	
												lRet := .F.

											EndIf

											If !ValType(XmlChildEx(oXml[nW], "_DVENC")) == "O"

												AADD(aResp,"Não a Parcela " + nW + " tag 'dVenc' foi encontrada. NF: " + cNumNF + "<br />" )	
												lRet := .F.

											EndIf

											If !ValType(XmlChildEx(oXml[nW], "_VDUP")) == "O"

												AADD(aResp,"Parcela " + nW + " tag 'vDup' não foi encontrada. NF: " + cNumNF + "<br />" )	
												lRet := .F.		

											EndIf

										Next nW

									Else
										AADD(aResp,"A tag 'dup' não foi encontrada. NF: " + cNumNF + "<br />" )	
										lRet := .F.
									EndIf
								
								Else

									AADD(aResp,"A tag 'cobr' não foi encontrada. NF: " + cNumNF + "<br />" )	
									lRet := .F.

								EndIf

							EndIf 
							//FIM PARCELAS: Validação do tipo de pgto . 0 a vista, 1 é a prazo.

						Else

							AADD(aResp,"A tag 'indPag' não foi encontrada. NF: " + cNumNF + "<br />" )	
							lRet := .F.

						EndIf

					Else					
			 	
						AADD(aResp,"A tag 'detPag' não foi encontrada. NF: " + cNumNF + "<br />" )	
						lRet := .F.
					EndIf
					
				Else

		            AADD(aResp,"A tag 'pag' não foi encontrada. NF: " + cNumNF + "<br />" )	
					lRet := .F.
			
				EndIf
		
			EndIf
		
		EndIf
			
	EndIf
	
	IF lRet
		For nW := 1 To Len(::aProdutos)
		
			If Empty(::aProdutos[nW][1])
			
				AADD(aResp,"Pedido não encontrado - produto: " + ::aProdutos[nW][2] +" . NF: " + cNumNF + "<br />" )	
				lRet := .F.
				
			Else
			
				If aScan(::aPedidos, {|x| x[1] == ::aProdutos[nW][1]}) == 0
				
					aAdd(::aPedidos, {::aProdutos[nW][1], Val(oXmlTotNf:_vNF:Text)})
		
				EndIf
			
			EndIf
		
		Next nW
		
		For nW := 1 To Len(::aPedidos)
		
			If SC7->(DBSeek(xFilial("SC7") + ::aPedidos[nW][1]))
				
				If ::aPedidos[nW][1] == "0" .And. SC7->C7_COND <> "001"
				
				AADD(aResp,"Pedido " + ::aPedidos[nW][1] + " condicao xml a vista | condicao sistema a prazo. NF: " + cNumNF + "<br />" )	
				lRet := .F.			 
				
				Else
					
					aRetC7 := Condicao(::aPedidos[nW][2], SC7->C7_COND, , dDataBase+1)
					
					If ValType(XmlChildEx(oAuxCob, "_DUP")) == "O"
											
						// fazer a comparacao aRetC7 e oAuxCob:_DUP
					
					EndIf
					
				EndIf
		
			EndIf
		
		Next nW	
	EndIf
			

	IF(lRet == .F.)
		For nW := 1 To Len(aResp)
			cMsgError += aResp[nw]			
		Next nW
		::SetErrNfe(cMsgError)
	EndIf
	
	RestArea(aAreaSDT)
	RestArea(aAreaSC7)
		
Return(lRet)

Method GetPedidoItem() Class VIXA258

	Local lConsLoja	:= .T.
	Local cFilQuery	:= ""
	Local cAlias		:= GetNextAlias()
	Local nPos			:= 0
	Local nW			:= 0

	If lConsLoja
	
		cFilQuery	+= IIf(!Empty(cFilQuery)," AND ","")
		
		cFilQuery	+= " SC7.C7_FORNECE = '"+::cFornece+"' AND SC7.C7_LOJA = '"+::cLoja+"' "
		
	Else
	
		cFilQuery	+= IIf(!Empty(cFilQuery)," AND ","")
		
		cFilQuery	+= " SC7.C7_FORNECE = '"+::cFornece+"' "
		
	EndIf

	If SuperGetMV("MV_RESTNFE") == "S"
	
		cFilQuery	+= IIf(!Empty(cFilQuery)," AND ","")
		
		cFilQuery	+= " SC7.C7_CONAPRO <> 'B' "
		
	EndIf

	If Empty(cFilQuery)
	
		cFilQuery	+= "% 1 = 1 %"
		
	Else
	
		cFilQuery	:= "% "+cFilQuery+" %"
		
	EndIf

	BeginSql Alias cAlias
	
		SELECT	SC7.C7_NUM, SC7.C7_ITEM, SC7.C7_PRODUTO, SC7.C7_LOCAL,
		SC7.C7_QUANT, SC7.C7_QUJE, SC7.C7_PRECO, SC7.C7_QTDACLA
		FROM	%Table:SC7% 	SC7
		WHERE	SC7.C7_FILENT	=  %xFilial:SC7%
		AND SC7.C7_TPOP		<> %Exp:'P'%
		AND SC7.C7_ENCER		=  %Exp:''%
		AND SC7.C7_RESIDUO		=  %Exp:''%
		AND SC7.C7_QUANT-SC7.C7_QUJE-SC7.C7_QTDACLA > %Exp:0%
		AND SC7.%NotDel%
		AND %Exp:cFilQuery%
		ORDER BY SC7.C7_PRODUTO, SC7.C7_DATPRF, SC7.C7_NUM, SC7.C7_ITEM
	
	EndSql

	(cAlias)->(dbGoTop())
	
	While (cAlias)->(!EOF())

		nPos := aScan(::aProdutos, {|x| Empty(x[1]) .And. x[2] == (cAlias)->C7_PRODUTO})
				                                                                                                 
		If nPos > 0
		
			::aProdutos[nPos][1] := (cAlias)->C7_NUM
	   		
		EndIf
						
		(cAlias)->(dbSkip())

	EndDo
	
	(cAlias)->(dbCloseArea())

Return(::aProdutos)

Method ValidTpFreteNfe() Class VIXA258
	
	Local lRet := .T.
	Local cTipoFrete := ""
	
	If AllTrim(::oXml:_InfNfe:_Transp:_ModFrete:Text) == "0"
		
		cTipoFrete := "C"
			
	ElseIf AllTrim(::oXml:_InfNfe:_Transp:_ModFrete:Text) == "1"
		
		cTipoFrete := "F"
		
	ElseIf AllTrim(::oXml:_InfNfe:_Transp:_ModFrete:Text) == "2"
		
		cTipoFrete := "T"
			
	ElseIf AllTrim(::oXml:_InfNfe:_Transp:_ModFrete:Text) == "3"
		
		cTipoFrete := "S"
			
	Else
			
		Connout("VIXA258: NAO FOI IDENTIFICADO O TIPO DO FRETE -> ::oXml:_InfNfe:_Transp:_ModFrete:Text")
			
	EndIf
		
	DBSelectArea("ZZE")
	ZZE->(DBSetOrder(1))

Return(lRet)

Method ValidCondPag() Class VIXA258
	
	Local lRet := .T.

	
Return(lRet)

Method ValidCobertura() Class VIXA258

	Local lRet := .T.

Return(lRet)

Method RegistraTrava() Class VIXA258

	Local lRet := .T.

Return(lRet)

Method ComxProc() Class VIXA258
	
	Local lRet		:= .T.
	Local cUsrAux	:= ""
	Local cPswAux	:= ""
	
	If ::lEnabled
	
		If SDS->DS_YVLDXML == "S" .And. !IsBlind()
		
			If Aviso("ATENCAO", "O xml esta com bloqueio!" + CRLF + "Seu usuário não tem permissão para continuar." + CRLF, {"Autorização Gestor", "Cancela"}, 3) == 1
	
				If !U_VIXA259(@cUsrAux, @cPswAux)
	
					lRet := .F.
	
				EndIf
		
			Else
	
				lRet := .F.
	
			EndIf
		
		EndIf
		
		If lRet
		
			::SetErrNfeOk()
		
		EndIf
	
	EndIf
				
Return(lRet)

Method WorkFlow() Class VIXA258

	Local cMensagem  := ""
	Local cLinkImg	 := "https://fortbras.com.br/imagens/logo-fortbras.png"
	Local cNomeEmp	 := SM0->M0_NOMFIL
	Local cLinkSit 	 := "https://fortbras.com.br/"
	Local cContrato_ := ""
	
	cMensagem :=cMensagem+'	<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:w="urn:schemas-microsoft-com:office:word"'
	cMensagem :=cMensagem+'	xmlns="http://www.w3.org/TR/REC-html40">'
	cMensagem :=cMensagem+'	<head>'
	cMensagem :=cMensagem+'	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />'
	cMensagem :=cMensagem+'		<title>Comunicado Orçamento '+SM0->M0_FILIAL+'</title>'
	cMensagem :=cMensagem+'      <style type="text/css">'
	cMensagem :=cMensagem+'<!--'
	cMensagem :=cMensagem+'.style6 {font-size: 12px; font-weight: bold; }'
	cMensagem :=cMensagem+'.style7 {font-size: 12px}'
	cMensagem :=cMensagem+'-->'
	cMensagem :=cMensagem+'        </style>'
	cMensagem :=cMensagem+'</head>'
	cMensagem :=cMensagem+'	<body>'
	cMensagem :=cMensagem+'<div class="gs">'
	cMensagem :=cMensagem+'<div class="gE iv gt"></div>'
	cMensagem :=cMensagem+'<div class="utdU2e"></div><div class="tx78Ic"></div><div class="QqXVeb"></div><div id=":10g" tabindex="-1"></div><div id=":118" class="ii gt adP adO"><div id=":119"><u></u>'
	cMensagem :=cMensagem+'	<div style="padding:0;margin:0;background:#eaeaea">'
	cMensagem :=cMensagem+'		<table style="background:#eaeaea;font-family:Lucida grande,Sans-Serif;border-spacing:0" align="center" border="0" cellpadding="0" cellspacing="0" width="100%">'
	cMensagem :=cMensagem+'			<tbody><tr>'
	cMensagem :=cMensagem+'				<td style="padding:25px 0 55px" align="center">'
	cMensagem :=cMensagem+'					<table style="padding:0 50px;text-align:left;border-spacing:0" align="center" border="0" cellpadding="0" cellspacing="0" width="800">'
	cMensagem :=cMensagem+'		    <tbody><tr>'
	cMensagem :=cMensagem+'							<td style="padding-bottom:10px">'
	cMensagem :=cMensagem+'								<img src="'+cLinkImg+'">							</td>'
	cMensagem :=cMensagem+'						</tr>'
	cMensagem :=cMensagem+'						<tr>'
	cMensagem :=cMensagem+'							<td height="400" style="font-size:13px;color:#888;padding:30px 40px;border:1px solid #b8b8b8;background-color:#fff">'
	cMensagem :=cMensagem+'								<p style="color:black;margin:0">Você acaba de receber um informativo da '+Capital(SM0->M0_FILIAL)+'.</p>'
	cMensagem :=cMensagem+'				  <div style="background-color:#e3e3e3;padding:20px;color:black;margin:30px 0">'
	cMensagem :=cMensagem+'									<span style="font-weight:bold;font-size:14px;margin:0">'+If(lTesEsp_, "Emissão de NF. Triangulação Especial", "Processo de Triangulação com Armazenagem interna")+'</span>'
	cMensagem :=cMensagem+'			                        <hr style="margin:15px 0">'
	cMensagem :=cMensagem+'									<p style="margin:0"></p>'
	
	cMensagem :=cMensagem+'									<table width="674" border="0">'

	cMensagem :=cMensagem+'                                      <tr>'
	cMensagem :=cMensagem+'                                        <td width="117"><span class="style6">Contrato</span></td>'
	cMensagem :=cMensagem+'                                       <td width="547"><span class="style4 style7">'+cContrato_+'</span></td>'
	cMensagem :=cMensagem+'                                      </tr>'
	
	cMensagem :=cMensagem+'                                      <tr>'
	cMensagem :=cMensagem+'                                        <td width="117"><span class="style6">Pedido Origem</span></td>'
	cMensagem :=cMensagem+'                                       <td width="547"><span class="style4 style7">'+cPedido_+'</span></td>'
	cMensagem :=cMensagem+'                                      </tr>'
	
	cMensagem :=cMensagem+'                                      <tr>'
	cMensagem :=cMensagem+'                                        <td width="117"><span class="style6">Nota Fiscal</span></td>'
	cMensagem :=cMensagem+'                                       <td width="547"><span class="style4 style7">'+cNfOri_+'</span></td>'
	cMensagem :=cMensagem+'                                      </tr>'

	cMensagem :=cMensagem+'                                      <tr>'
	cMensagem :=cMensagem+'                                        <td><span class="style6">Emissao Nf</span></td>'
	cMensagem :=cMensagem+'                                        <td><span class="style4 style7">'+cEmisOri_+'</span></td>'
	cMensagem :=cMensagem+'                                      </tr>'
		
	cMensagem :=cMensagem+'                                      <tr>'
	cMensagem :=cMensagem+'                                        <td><span class="style6">Constante da Carga</span></td>'
	cMensagem :=cMensagem+'                                        <td><span class="style4 style7">'+cCarga_+'</span></td>'
	cMensagem :=cMensagem+'                                      </tr>'
	
	If lTesEsp_
	
		cMensagem :=cMensagem+'                                      <tr>'
		cMensagem :=cMensagem+'                                        <td><span class="style6">Observacoes</span></td>'
		cMensagem :=cMensagem+'                                        <td><span class="style4 style7">Providenciar emissão da nota fiscal de remessa de triangulação especial para o Pedido de Remessa nº: '+cPedFil_+'</span></td>'
		cMensagem :=cMensagem+'                                      </tr>'
	
	Else
	
		cMensagem :=cMensagem+'                                      <tr>'
		cMensagem :=cMensagem+'                                        <td><span class="style6">Observacoes</span></td>'
		cMensagem :=cMensagem+'                                        <td><span class="style4 style7">Seus produtos deverão ser armazenados internamente no Armazém ' + ::BRA_ARMTRI + ', até nosso cliente enviar a nota fiscal de triangulação para efetuarmos a Remessa. Pedido que será utilizado para a remessa: '+cPedFil_+'</span></td>'
		cMensagem :=cMensagem+'                                      </tr>'
	
	EndIf
	
	cMensagem :=cMensagem+'                                    </table>'
	cMensagem :=cMensagem+'                                    <br>'
	
	cMensagem :=cMensagem+'					          </div>'
	cMensagem :=cMensagem+'						  <p>Esta notificação foi enviada por um email configurado para não receber resposta.<br>'
	cMensagem :=cMensagem+'									Por favor, não responda esta mensagem.							  </p>'
	cMensagem :=cMensagem+'						  </td>'
	cMensagem :=cMensagem+'						</tr>'
	cMensagem :=cMensagem+'					</tbody></table>'
	
	cMensagem :=cMensagem+'	    <p align="center" style="width:640px;padding:10px 20px;font-size:10px;color:#888;line-height:14px">'
	cMensagem :=cMensagem+'						Para acessar o site da '+cNomeEmp+','
	cMensagem :=cMensagem+'						<a href="'+cLinkSit+'" style="color:#666;text-decoration:underline" target="_blank">clique aqui.</a>					</p>'
	cMensagem :=cMensagem+'			  </td>'
	cMensagem :=cMensagem+'			</tr>'
	cMensagem :=cMensagem+'		</tbody></table><div class="yj6qo"></div><div class="adL">'
	cMensagem :=cMensagem+'	</div></div><div class="adL">'
	cMensagem :=cMensagem+'</div></div></div><div id=":104" class="ii gt" style="display:none"><div id=":103"></div></div><div class="hi"></div></div>'
	cMensagem :=cMensagem+'		</body>'
	cMensagem :=cMensagem+'	</html>'

Return()